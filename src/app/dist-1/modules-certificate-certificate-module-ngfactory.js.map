{"version":3,"sources":["./src/app/modules/certificate/certificate-routing.module.ts","./src/app/modules/certificate/components/svg-editor/svg-editor.component.html","./src/app/modules/certificate/components/certificate-configuration/certificate-configuration.component.ts","./src/app/modules/certificate/services/upload-certificate/upload-certificate.service.ts","./src/app/modules/certificate/components/certificate-details/certificate-details.component.html","../../../projects/svg-editor/src/lib/svg-editor.service.ts","../../../projects/svg-editor/src/lib/svg-editor.component.ts","../../../projects/svg-editor/src/lib/svg-editor.module.ts","../../../projects/svg-editor/src/public-api.ts","./src/app/modules/certificate/components/svg-editor/svg-editor.component.ts","./src/app/modules/certificate/components/create-template/create-template.component.html","./src/app/modules/certificate/models/cert-config-model/cert-config-model.ts","./src/app/modules/certificate/components/browse-image-popup/browse-image-popup.component.ts","./src/app/modules/certificate/components/index.ts","./src/app/modules/certificate/components/browse-image-popup/browse-image-popup.component.html","./src/app/modules/shared-feature/components/cert-preview-popup/cert-preview-popup.component.html","./src/app/modules/certificate/components/certificate-details/certificate-details.component.ts","./src/app/modules/certificate/components/create-template/create-template.component.ts","./src/app/modules/certificate/components/certificate-configuration/certificate-configuration.component.html","./src/app/modules/shared-feature/components/cert-preview-popup/cert-preview-popup.component.ts","./node_modules/ng-svg-editor/ng-svg-editor.d.ts.SvgEditorComponent.html","./src/app/modules/certificate/certificate.module.ts"],"names":[],"mappings":"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","file":"modules-certificate-certificate-module-ngfactory.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AuthGuard } from '@sunbird/core';\nimport { CertificateDetailsComponent, CertificateConfigurationComponent, CreateTemplateComponent, SvgEditorComponent} from './components';\n\nconst routes: Routes = [\n  {\n    path: 'configure/certificate', component: CertificateConfigurationComponent, canActivate: [AuthGuard],\n    data: {\n      telemetry: {\n        env: 'certs', pageid: 'certificate-configuration', type: 'view', subtype: 'paginate', ver: '1.0'\n      },\n      roles: 'createBatchRole',\n      hideHeaderNFooter: false\n    }\n  },\n  {\n    path: 'configure/create-template', component: CreateTemplateComponent, canActivate: [AuthGuard],\n    data: {\n      telemetry: {\n        env: 'certs', pageid: 'certificate-create-template', type: 'view', subtype: 'paginate', ver: '1.0'\n      },\n      roles: 'createBatchRole',\n      hideHeaderNFooter: false\n    }\n  },\n  {\n    path: 'configure/create-certificate-template', component: SvgEditorComponent, canActivate: [AuthGuard],\n    data: {\n      telemetry: {\n        env: 'certs', pageid: 'certificate-create-template', type: 'view', subtype: 'paginate', ver: '1.0'\n      },\n      roles: 'createBatchRole',\n      hideHeaderNFooter: false\n    }\n  },\n  {\n    path: ':uuid', component: CertificateDetailsComponent,\n    data: {\n      telemetry: {\n        env: 'certs', pageid: 'certificate-details', type: 'view'\n      }\n    }\n  }\n  ];\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n  })\n\n  export class CertificateRoutingModule { }\n","<!-- @since - release-4.7.0 -->\n<!-- SVG Editor for Certificate Creation -->\n<!-- New Certificate layout -->\n\n<div [ngClass]=\"layoutConfiguration ? 'sbt-inside-page-container py-16' : ''\">\n\n  <div class=\"sb-bg-color-white py-8 relative9 cc-player__content-header cc-player__border-fix\">\n    <div class=\"ui container\">\n      <div class=\"d-flex flex-ai-center flex-jc-space-between\">\n        <button (click)=\"back()\" tabindex=\"0\"\n          class=\"sb-btn sb-btn-normal sb-btn-link sb-btn-link-primary sb-left-icon-btn mr-auto\" id=\"goBack\"\n          type=\"button\">\n          <i class=\"icon-svg icon-svg--xxs icon-back mr-4\">\n            <svg class=\"icon icon-svg--primary\">\n              <use xlink:href=\"assets/images/sprite.svg#arrow-long-left\"></use>\n            </svg></i>\n          {{resourceService?.frmelmnts?.btn?.back}}\n        </button>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"certificate-container relative9\">\n    <div class=\"ui container\">\n      <div class='sb-g mt-16'>\n        <div class=\"sb-g-col-xs-12 sb-g-col-md-3 sb-g-col-lg-3 sb-g-col-xxxl-12\">\n          <div class=\"certificate-content\">\n            <label class=\"fmedium my-8\">{{resourceService?.frmelmnts?.cert?.lbl?.layout}}</label>\n            <div class=\"mt-16\">\n              <div *ngFor=\"let certificate of defaultCertificates\" class=\"cert-img-sb-card\"\n                [ngClass]=\"selectedCertificate?.identifier === certificate?.identifier ? 'active' : ''\">\n                <div class=\"cert-img-sb-card__content d-flex flex-ai-center flex-jc-center\" alt=\"certificate template\">\n                  <img (click)=\"chooseCertificate(certificate)\" tabindex=\"0\" [src]=\"certificate?.artifactUrl\"\n                    alt=\"certificate template\" />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"sb-g-col-xs-12 sb-g-col-md-9 sb-g-col-lg-9 sb-g-col-xxxl-12\">\n          <div>\n            <div class=\"d-flex flex-ai-center\">\n              <i class=\"icon-svg icon-svg--md icon-back mr-16\">\n                <svg class=\"icon icon-svg--primary\">\n                  <use xlink:href=\"assets/images/sprite.svg#question_on_play\"></use>\n                </svg></i>\n              <label class=\"preview-title mb-0 mr-auto\">{{resourceService?.frmelmnts?.lbl?.editCertificateTitle}}</label>\n              <button type=\"button\" (click)=\"back()\" tabindex=\"0\" class=\"sb-btn sb-btn-normal sb-btn-outline-primary\">{{resourceService?.frmelmnts?.btn?.cancel}}</button>\n              <!-- <button type=\"button\" (click)=\"saveUpdatedCertificate()\" tabindex=\"0\"\n                class=\"sb-btn sb-btn-normal sb-btn-primary ml-16\">{{resourceService?.frmelmnts?.cert?.btn?.saveAsTemplate}}\n              </button>\n              <button type=\"button\" *ngIf=\"previewButton == 'show'\" (click)=\"toggleSVGPreview()\" tabindex=\"0\"\n                class=\"sb-btn sb-btn-normal sb-btn-primary ml-16\">Preview\n              </button>\n              <button type=\"button\" *ngIf=\"previewButton == 'hide'\" (click)=\"toggleSVGPreview()\" tabindex=\"0\"\n                class=\"sb-btn sb-btn-normal sb-btn-primary ml-16\">Edit\n              </button> -->\n              <button type=\"button\" (click)=\"previewAndSave()\" tabindex=\"0\"\n                class=\"sb-btn sb-btn-normal sb-btn-primary ml-16\">{{resourceService?.frmelmnts?.lbl?.saveAndPreview}}</button>\n            </div>\n\n            <div class=\"cert-select-card my-16\">\n              <div class=\"d-flex flex-ai-center flex-dc cert-select-card__content\">\n                <div class=\"d-flex flex-ai-center flex-jc-center cert-select-card__content__description\">\n                  <div class=\"svgContainer\">\n                    <svg-editor [svgContent]=\"logoHtml\" [save]=\"save\" [togglePreview]=\"togglePreview\"\n                     [edit]=\"edit\" (elementClicked)=\"elementClicked($event)\" [refreshEditor]=\"refreshEditor\"></svg-editor>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n\n<app-modal-wrapper *ngIf=\"showSVGInputModal && showPreviewButton && selectedSVGObject?.type === 'text'\" [config]=\"{disableClose: true, size: 'small'}\" (dismiss)=\"closeSVGInputModal()\">\n  <ng-template sbModalContent>\n      <div class=\"sb-modal sb-error\">\n          <div class=\"transition ui dimmer page modals active visible\">\n              <div class=\"ui modal transition active visible small\">\n                  <button aria-label=\"close dialog\" mat-dialog-close class=\"mat-close-btn\">\n                      <span>&times;</span>\n                  </button>\n                  <!--Header-->\n                  <div class=\"sb-modal-header\">\n                      {{resourceService?.frmelmnts?.lbl?.updateDetails}}\n                  </div>\n                  <!--/Header-->\n                  <!--Content-->\n                  <div class=\"sb-modal-content\">\n                    <div class=\"image-tabs px-8\">\n                \n                      <!-- Text update -->\n                      <section *ngIf=\"selectedSVGObject?.type === 'text'\" id=\"content1\">\n                        <div class=\"twelve wide column\">\n                          <div class=\"sb-search-box m-0\">\n                            <div class=\"input-div relative\">\n                              <input autofocus class=\"sb-search-input\" [(ngModel)]=\"selectedSVGObject.value\" type=\"text\" maxlength=\"80\" />\n                            </div>\n                          </div>\n                          <small _ngcontent-nit-c26=\"\" class=\"pl-4 fsmall\">\n                            {{80 - selectedSVGObject.value.length}} / 80 {{resourceService?.frmelmnts?.lbl?.characterleft}}\n                          </small>\n                        </div>\n                      </section>\n                    </div>\n                  </div>\n                  <!--/Content-->\n                  <!--Actions-->\n                  <div class=\"sb-modal-actions\">\n                    <button class=\"sb-btn sb-btn-normal sb-btn-primary\" tabindex=\"0\" (click)=\"updateSVGInputTag()\">{{resourceService?.frmelmnts?.btn?.update}}</button>\n                    <button class=\"sb-btn sb-btn-normal sb-btn-outline-primary\" tabindex=\"0\" (click)=\"closeSVGInputModal()\">\n                      {{resourceService.frmelmnts?.btn?.cancel}}\n                    </button>\n                  </div>\n                  <!--/Actions-->\n              </div>\n          </div>\n      </div>\n  </ng-template>\n</app-modal-wrapper>\n <browse-image-popup [enableUploadSignature]=\"true\" (assetData)=\"svgAssetData($event)\" (close)=\"closeSVGInputModal()\" [showUploadUserModal]=\"disableSVGImageModal\" [showSelectImageModal]=\"showSVGInputModal && showPreviewButton && selectedSVGObject?.type === 'image'\" [logoType]=\"logoType\" ></browse-image-popup>\n \n\n <app-modal-wrapper [config]=\"{disableClose: true, size: 'large'}\" (dismiss)=\"closeSaveAndPreview()\" *ngIf=\"saveAndPreview\">\n  <ng-template sbModalContent>\n    <div class=\"sb-modal sb-error\">\n        <div class=\"transition ui dimmer page modals active visible\">\n            <div class=\"ui modal sb-bg-color-white  transition active visible large\">\n                <button aria-label=\"close dialog\" mat-dialog-close class=\"mat-close-btn\">\n                    <span>&times;</span>\n                </button>\n                <!--Header-->\n                <div class=\"sb-modal-header sb-bg-color-white \">\n                    {{resourceService?.frmelmnts?.lbl?.certPreview}}\n                </div>\n                <!--/Header-->\n                <!--Content-->\n                <div class=\"sb-modal-content sb-bg-color-white \">\n                  <div class=\"image-tabs px-8\">\n                    <div [innerHTML]=\"previewSvgData\"></div>\n                  </div>\n                </div>\n                <!--/Content-->\n                <!--Actions-->\n                <div class=\"sb-modal-actions sb-bg-color-white \">\n                  <div class='ui stackable d-flex flex-jc-space-between mt-0'>\n                    <!-- <div class=\"twelve wide column\"> -->\n                      <div class=\"\">\n                        <div class=\"sb-checkbox sb-checkbox-secondary pt-24\">\n                          <input [checked]=\"userConsent\" (change)=\"userConsent = !userConsent\" value=\"true\" type=\"checkbox\" id=\"check2\" name=\"selected\">\n                          <label for=\"check2\" class=\"text-left fsmall\">{{resourceService?.frmelmnts?.cert?.intxt?.confrmtion}}</label>\n                        </div>\n                      </div>\n                      <div class=\"\">\n                        <button [disabled]=\"!userConsent\" [ngClass]=\"{'sb-btn-disabled': !userConsent }\" class=\"sb-btn sb-btn-normal sb-btn-primary\" tabindex=\"0\" (click)=\"saveUpdatedCertificate()\">{{resourceService?.frmelmnts?.cert?.btn?.saveAsTemplate}}</button>\n                      </div>\n                    <!-- </div> -->\n                  </div>\n                 \n                </div>\n                <!--/Actions-->\n            </div>\n        </div>\n    </div>\n</ng-template>\n </app-modal-wrapper>","import { UploadCertificateService } from './../../services/upload-certificate/upload-certificate.service';\nimport { CertConfigModel } from './../../models/cert-config-model/cert-config-model';\nimport { Component, OnInit, OnDestroy, ViewChild, HostListener } from '@angular/core';\nimport { CertificateService, UserService, PlayerService, CertRegService, FormService } from '@sunbird/core';\nimport * as _ from 'lodash-es';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { ResourceService, NavigationHelperService, ToasterService, LayoutService, COLUMN_TYPE } from '@sunbird/shared';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { combineLatest, of, Subject } from 'rxjs';\nimport { catchError, tap, map } from 'rxjs/operators';\nimport { TelemetryService, IImpressionEventInput } from '@sunbird/telemetry';\nimport { DomSanitizer } from '@angular/platform-browser';\n\nexport interface IConfigLabels {\n  label: string;\n  name: string;\n  show: boolean;\n}\n\n@Component({\n  selector: 'app-certificate-configuration',\n  templateUrl: './certificate-configuration.component.html',\n  styleUrls: ['./certificate-configuration.component.scss']\n})\nexport class CertificateConfigurationComponent implements OnInit, OnDestroy {\n  @ViewChild('selectCertType') selectCertType;\n  @ViewChild('selectRecipient') selectRecipient;\n  @ViewChild('templateChangeModal') templateChangeModal;\n  @ViewChild('selectScoreRange') selectScoreRange;\n\n  public unsubscribe$ = new Subject<void>();\n  showPreviewModal;\n  showTemplateDetectModal;\n  certTypes: any;\n  issueTo: any;\n  telemetryImpression: IImpressionEventInput;\n  userPreference: FormGroup;\n  disableAddCertificate = true;\n  queryParams: any;\n  courseDetails: any;\n  showLoader = true;\n  certTemplateList: Array<{}> = [];\n  batchDetails: any;\n  currentState: any;\n  screenStates: any = { 'default': 'default', 'certRules': 'certRules' };\n  selectedTemplate: any;\n  previewTemplate: any;\n  configurationMode: string;\n  certConfigModalInstance = new CertConfigModel();\n  previewUrl: string;\n  templateIdentifier: string;\n  isTemplateChanged = false;\n  certEditable = true;\n  config: { select: IConfigLabels, preview: IConfigLabels, remove: IConfigLabels };\n  certificate: any;\n  newTemplateIdentifier: any;\n  showAlertModal = false;\n  addScoreRule = false;\n  arrayValue = {};\n  scoreRange: any;\n  isSingleAssessment = false;\n  isStateCertificate = false;\n  instance: string;\n  layoutConfiguration: any;\n  FIRST_PANEL_LAYOUT;\n  SECOND_PANEL_LAYOUT;\n  certificateFormConfig: any;\n\n  constructor(\n    private certificateService: CertificateService,\n    private userService: UserService,\n    private playerService: PlayerService,\n    private sanitizer: DomSanitizer,\n    private resourceService: ResourceService,\n    private certRegService: CertRegService,\n    public uploadCertificateService: UploadCertificateService,\n    public navigationHelperService: NavigationHelperService,\n    private activatedRoute: ActivatedRoute,\n    private toasterService: ToasterService,\n    private router: Router,\n    private telemetryService: TelemetryService,\n    public layoutService: LayoutService,\n    private formService: FormService) {\n      this.instance = (<HTMLInputElement>document.getElementById('instance'))\n      ? (<HTMLInputElement>document.getElementById('instance')).value : 'sunbird';\n    }\n  /**\n   * @description - It will handle back button click.\n   */\n  @HostListener('window:popstate', ['$event'])\n  onPopState(event) {\n    if (this.isTemplateChanged) {\n      this.isTemplateChanged = false;\n    }\n  }\n\n  /**\n   * @since - release-3.2.10\n   * @description - It will prepare all the necessary data along with the apis.\n   */\n  ngOnInit() {\n    this.initializeLabels();\n    this.layoutConfiguration = this.layoutService.initlayoutConfig();\n    this.redoLayout();\n    this.currentState = this.screenStates.default;\n    this.uploadCertificateService.certificate.subscribe(res => {\n      if (res && !_.isEmpty(res)) {\n        this.showAlertModal = true;\n        this.currentState = 'certRules';\n        this.showPreviewModal = false;\n        this.newTemplateIdentifier = _.get(res , 'identifier');\n      }\n    });\n    this.navigationHelperService.setNavigationUrl();\n    this.initializeFormFields();\n    this.activatedRoute.queryParams.subscribe((params) => {\n      this.queryParams = params;\n      this.configurationMode = _.get(this.queryParams, 'type');\n    });\n    combineLatest(\n      this.getCourseDetails(_.get(this.queryParams, 'courseId')),\n      this.getBatchDetails(_.get(this.queryParams, 'batchId')),\n      this.getTemplateList(),\n      this.getCertificateFormData()\n    ).subscribe((data) => {\n      this.showLoader = false;\n      this.checkMultipleAssessment();\n    }, (error) => {\n      this.showLoader = false;\n      this.toasterService.error(this.resourceService.messages.emsg.m0005);\n    });\n  }\n  checkMultipleAssessment() {\n    try {\n      const contentTypes = JSON.parse(_.get(this.courseDetails, 'contentTypesCount'));\n    const selfAssessCount = _.get(contentTypes, 'SelfAssess');\n    if (selfAssessCount && selfAssessCount > 1) {\n      this.isSingleAssessment = false;\n    } else if (selfAssessCount && selfAssessCount == 1) {\n      this.isSingleAssessment = true;\n    } else {\n      this.isSingleAssessment = false;\n    }\n    } catch (error) {\n      console.log(error)\n    }\n    \n  }\n  certificateCreation() {\n    this.currentState = this.screenStates.certRules;\n  }\n\n  /**\n   * @description - It will trigger impression telemetry event once the view is ready.\n   */\n  ngAfterViewInit() {\n    this.setTelemetryImpressionData();\n  }\n\n  /**\n   * @description - It will prepare the config data for the hover activity of the cert-list cards.\n   */\n  initializeLabels() {\n    this.config = {\n      select: {\n        label: _.get(this.resourceService, 'frmelmnts.lbl.Select'),\n        name: 'Select',\n        show: true\n      },\n      preview: {\n        label: _.get(this.resourceService, 'frmelmnts.cert.lbl.preview'),\n        name: 'Preview',\n        show: true\n      },\n      remove: {\n        label: _.get(this.resourceService, 'frmelmnts.cert.lbl.unselect'),\n        name: 'Remove',\n        show: false\n      }\n    };\n  }\n\n  /**\n   * @description - It will fetch the drop-down values by calling the preference api with proper request payload.\n   */\n  getCertConfigFields() {\n    const request = {\n      request: {\n        orgId: _.get(this.userService, 'userProfile.rootOrgId'),\n        key: 'certRules'\n      }\n    };\n    this.certificateService.fetchCertificatePreferences(request).subscribe(certRulesData => {\n      const dropDownValues = this.certConfigModalInstance.getDropDownValues(_.get(certRulesData, 'result.response.data.fields'));\n      this.certTypes = _.get(dropDownValues, 'certTypes');\n      this.issueTo = _.get(dropDownValues, 'issueTo');\n      this.scoreRange = _.get(dropDownValues, 'scoreRange');\n    }, error => {\n      this.toasterService.error(this.resourceService.messages.emsg.m0005);\n    });\n  }\n\n  /**\n   * @description - It will fetch list of certificate templates from preference api.\n   */\n  getTemplateList() {\n    const request = {\n      'request': {\n          'filters': {\n              'certType': 'cert template',\n              'channel': this.userService.channel,\n              'mediaType': 'image'\n          },\n          'sort_by': {\n            'lastUpdatedOn': 'desc'\n          },\n          'fields': ['indentifier', 'name', 'code', 'certType', 'data', 'issuer', 'signatoryList', 'artifactUrl', 'primaryCategory', 'channel'],\n          'limit': 100\n      }\n  };\n  return this.uploadCertificateService.getCertificates(request).pipe(\n      tap((certTemplateData) => {\n        const templatList = _.get(certTemplateData, 'result.content');\n        this.certTemplateList = templatList;\n        // To select the newly created certificate\n        let tempIdToSelect;\n        if (this.newTemplateIdentifier) {\n          tempIdToSelect = this.newTemplateIdentifier;\n        } else {\n          tempIdToSelect = this.templateIdentifier;\n        }\n        const templateData = templatList.find(templat => tempIdToSelect && (templat.identifier === tempIdToSelect));\n        if (templateData) {\n          _.remove(this.certTemplateList, (cert) => _.get(cert, 'identifier') === _.get(templateData , 'identifier'));\n          this.certTemplateList.unshift(templateData);\n          this.selectedTemplate = templateData;\n        }\n      }), catchError(error => {\n          return of({});\n        })\n    );\n  }\n\n  refreshData() {\n    this.getTemplateList().subscribe(response => {\n    }, (error) => {\n      this.toasterService.error(this.resourceService.messages.emsg.m0005);\n    });\n  }\n  /**\n   * @param  {string} batchId\n   * @description - It will fetch the batch details.\n   */\n  getBatchDetails(batchId) {\n    return this.certificateService.getBatchDetails(batchId).pipe(\n      tap(batchDetails => {\n        this.batchDetails = _.get(batchDetails, 'result.response');\n        const cert_templates = _.get(this.batchDetails, 'cert_templates');\n        if (_.isEmpty(cert_templates)) {\n          this.getCertConfigFields();\n        } else {\n          // Certifciate has attached to a batch\n          if (_.isArray(cert_templates)) {\n            this.batchDetails.cert_templates = cert_templates[0];\n          }\n          this.processCertificateDetails(cert_templates);\n        }\n      })\n    );\n  }\n\n\n  initializeFormFields() {\n    this.userPreference = new FormGroup({\n      scoreRange: new FormControl(''),\n      issueTo: new FormControl('', [Validators.required]),\n      allowPermission: new FormControl('', [Validators.required])\n    });\n    this.userPreference.valueChanges.subscribe(val => {\n      this.validateForm();\n    });\n  }\n\n\n  validateForm() {\n    if (this.userPreference.status === 'VALID'\n      && _.get(this.userPreference, 'value.allowPermission') && !_.isEmpty(this.selectedTemplate)) {\n      this.disableAddCertificate = false;\n    } else {\n      this.disableAddCertificate = true;\n    }\n  }\n\n  /**\n   * @param  {string} courseId\n   * @description - It will fetch the course details.\n   */\n  getCourseDetails(courseId: string) {\n    return this.playerService.getCollectionHierarchy(courseId).pipe(\n      tap(courseData => {\n        this.courseDetails = _.get(courseData, 'result.content');\n      }, catchError(error => {\n        return of({});\n      }))\n    );\n  }\n\n  /**\n   * @description - It will check for the template change or update the certificate.\n   */\n  updateCertificate() {\n    if (this.templateIdentifier !== _.get(this.selectedTemplate, 'name')) {\n      this.isTemplateChanged = true;\n    } else {\n      this.attachCertificateToBatch();\n    }\n  }\n\n  attachCertificateToBatch() {\n    this.sendInteractData({ id: this.configurationMode === 'add' ? 'attach-certificate' : 'confirm-template-change' });\n    if (this.addScoreRule === false) {\n      this.userPreference.value['scoreRange'] = null;\n    }\n    const request = {\n      'request': {\n        'batch': {\n          'courseId': _.get(this.queryParams, 'courseId'),\n          'batchId': _.get(this.queryParams, 'batchId'),\n          'template': {\n            'identifier': _.get(this.selectedTemplate, 'identifier'),\n            'criteria': this.getCriteria(this.userPreference.value),\n            'name': _.get(this.selectedTemplate, 'name'),\n            'issuer': JSON.parse(_.get(this.selectedTemplate, 'issuer')),\n            'data': JSON.stringify(_.get(this.selectedTemplate, 'data')),\n            'previewUrl': _.get(this.selectedTemplate, 'artifactUrl'),\n            'signatoryList': JSON.parse(_.get(this.selectedTemplate, 'signatoryList'))\n          }\n        }\n      }\n    };\n\n    if (this.isTemplateChanged) {\n      request['request']['oldTemplateId'] = this.templateIdentifier;\n    }\n    this.certRegService.addCertificateTemplate(request).subscribe(data => {\n      this.isTemplateChanged = false;\n      if (this.configurationMode === 'add') {\n        this.toasterService.success(_.get(this.resourceService, 'frmelmnts.cert.lbl.certAddSuccess'));\n      } else {\n        this.toasterService.success(_.get(this.resourceService, 'frmelmnts.cert.lbl.certUpdateSuccess'));\n      }\n      this.certificateService.getBatchDetails(_.get(this.queryParams, 'batchId')).subscribe(batchDetails => {\n        this.batchDetails = _.get(batchDetails, 'result.response');\n        this.processCertificateDetails(_.get(this.batchDetails, 'cert_templates'));\n        this.goBack();\n      }, error => {\n        this.toasterService.error(this.resourceService.messages.emsg.m0005);\n      });\n    }, error => {\n      if (this.configurationMode === 'add') {\n        this.toasterService.error(_.get(this.resourceService, 'frmelmnts.cert.lbl.certAddError'));\n      } else {\n        this.toasterService.error(_.get(this.resourceService, 'frmelmnts.cert.lbl.certEditError'));\n      }\n    });\n  }\n\n  processCertificateDetails(certTemplateDetails) {\n    const templateData = _.pick(_.get(certTemplateDetails, Object.keys(certTemplateDetails)), ['criteria', 'previewUrl', 'artifactUrl', 'identifier', 'data', 'issuer', 'signatoryList', 'name', 'url']);\n    this.templateIdentifier = _.get(templateData, 'identifier');\n    this.selectedTemplate = {\n      'name': _.get(templateData, 'name'),\n      'identifier': _.get(templateData, 'identifier'),\n      'previewUrl': _.get(templateData, 'previewUrl'),\n      'issuer': JSON.stringify(_.get(templateData, 'issuer')),\n      'data': JSON.stringify(_.get(templateData, 'data')),\n      'signatoryList': JSON.stringify(_.get(templateData, 'signatoryList')),\n      'artifactUrl': _.get(templateData, 'artifactUrl')\n     };\n     if (!_.get(templateData, 'previewUrl') && _.get(templateData, 'url')) {\n      this.selectedTemplate['previewUrl'] = _.get(templateData, 'url');\n      templateData['previewUrl'] = _.get(templateData, 'url');\n     }\n    // if (!_.isEmpty(this.newTemplateIdentifier)) {\n    //   this.templateIdentifier = this.newTemplateIdentifier;\n    //   this.selectedTemplate = null;\n    // }\n    this.previewUrl = _.get(templateData, 'previewUrl');\n    this.setCertEditable();\n    this.processCriteria(_.get(templateData, 'criteria'));\n  }\n\n  setCertEditable() {\n    this.certEditable = this.previewUrl ? true : false;\n  }\n\n  editCertificate() {\n    this.configurationMode = 'edit';\n    this.currentState = this.screenStates.certRules;\n    this.sendInteractData({ id: 'edit-certificate' });\n  }\n\n  getCriteria(rawDropdownValues) {\n    const processedData = this.certConfigModalInstance.processDropDownValues(rawDropdownValues, _.get(this.userService, 'userProfile.rootOrgId'));\n    return processedData;\n  }\n\n  processCriteria(criteria) {\n    const data = this.certConfigModalInstance.processCriteria(criteria);\n    this.issueTo = _.get(data, 'issueTo');\n    const scoreRange = _.get(data, 'scoreRange');\n    if (scoreRange) {\n      this.addRule();\n    }\n    const scoreRangeFormEle = this.userPreference.controls['scoreRange'];\n    const issueToFormEle = this.userPreference.controls['issueTo'];\n    this.issueTo && this.issueTo.length > 0 ? issueToFormEle.setValue(this.issueTo[0].name) : issueToFormEle.setValue('');\n    scoreRange ? scoreRangeFormEle.setValue(scoreRange) : scoreRangeFormEle.setValue('');\n  }\n\n  handleCertificateEvent(event, template: {}) {\n    const show = _.get(this.selectedTemplate, 'name') === _.get(template, 'name');\n    switch (_.lowerCase(_.get(event, 'name'))) {\n      case 'select':\n        this.selectedTemplate = template;\n        this.config.remove.show = show;\n        this.config.select.show = !show;\n        this.validateForm();\n        this.sendInteractData({ id: 'select-template' });\n        break;\n      case 'remove':\n        this.selectedTemplate = {};\n        this.config.select.show = show;\n        this.config.remove.show = !show;\n        this.validateForm();\n        this.sendInteractData({ id: 'unselect-template' });\n        break;\n      case 'preview':\n        this.previewTemplate = template;\n        this.showPreviewModal = true;\n        this.sendInteractData({ id: 'preview-template' });\n        break;\n    }\n  }\n\n  getConfig(config: { show: boolean, label: string, name: string }, template) {\n    const show = _.get(this.selectedTemplate, 'name') === _.get(template, 'name');\n    if (_.lowerCase(_.get(config, 'label')) === 'select') {\n      return ({ show: !show, label: config.label, name: config.name });\n    } else {\n      return ({ show: show, label: config.label, name: config.name });\n    }\n  }\n\n  closeModal(event) {\n    _.remove(this.certTemplateList, (template) => _.get(template, 'identifier') === _.get(event, 'template.identifier'));\n    this.certTemplateList.unshift(_.get(event, 'template'));\n    this.showPreviewModal = false;\n    this.selectedTemplate = _.get(event, 'name') ? _.get(event, 'template') : this.selectedTemplate;\n    this.validateForm();\n    if (_.get(event, 'name')) {\n      this.sendInteractData({ id: 'select-template' });\n    } else {\n      this.sendInteractData({ id: 'close-preview' });\n    }\n  }\n\n  closeTemplateDetectModal() {\n    this.isTemplateChanged = false;\n    this.sendInteractData({ id: 'cancel-template-change' });\n  }\n\n  navigateToCertRules() {\n    this.currentState = this.screenStates.certRules;\n    this.sendInteractData({ id: 'add-certificate' });\n  }\n\n  goBack() {\n    if (this.currentState === this.screenStates.certRules) {\n      // Goback to cert list screen\n      this.currentState = this.screenStates.default;\n    } else {\n      this.router.navigate([`/learn/course/${_.get(this.queryParams, 'courseId')}`]);\n    }\n  }\n\n  cancelSelection() {\n    this.currentState = this.screenStates.default;\n    this.userPreference.controls['allowPermission'].reset();\n    this.sendInteractData({ id: this.configurationMode === 'add' ? 'cancel-add-certificate' : 'cancel-update-certificate' });\n    if (this.configurationMode === 'add') {\n      this.userPreference.reset();\n      this.selectedTemplate = {};\n    } else {\n      const cert_templates = _.get(this.batchDetails, 'cert_templates');\n      this.processCertificateDetails(cert_templates);\n    }\n  }\n\n  setTelemetryImpressionData() {\n    this.telemetryImpression = {\n      context: {\n        env: this.activatedRoute.snapshot.data.telemetry.env,\n        cdata: [{\n          type: 'Batch',\n          id: _.get(this.queryParams, 'batchId')\n        },\n        {\n          type: 'Course',\n          id: _.get(this.queryParams, 'courseId')\n        }]\n      },\n      edata: {\n        type: this.activatedRoute.snapshot.data.telemetry.type,\n        subtype: this.activatedRoute.snapshot.data.telemetry.subtype,\n        pageid: this.activatedRoute.snapshot.data.telemetry.pageid,\n        uri: this.router.url,\n        duration: this.navigationHelperService.getPageLoadTime()\n      }\n    };\n    this.telemetryService.impression(this.telemetryImpression);\n  }\n\n  sendInteractData(interactData) {\n    const data = {\n      context: {\n        env: this.activatedRoute.snapshot.data.telemetry.env,\n        cdata: [{\n          type: 'Batch',\n          id: _.get(this.queryParams, 'batchId')\n        },\n        {\n          type: 'Course',\n          id: _.get(this.queryParams, 'courseId')\n        }]\n      },\n      edata: {\n        id: _.get(interactData, 'id'),\n        type: 'CLICK',\n        pageid: this.activatedRoute.snapshot.data.telemetry.pageid\n      }\n    };\n\n    if (this.configurationMode === 'edit') {\n      data['object'] = {\n        id: _.get(this.selectedTemplate, 'name'),\n        type: 'Certificate',\n        ver: '1.0',\n        rollup: { l1: _.get(this.queryParams, 'courseId') }\n      };\n    }\n\n    this.telemetryService.interact(data);\n  }\n\n  navigateToCreateTemplate() {\n    if(_.get(this.certificateFormConfig, 'enableSVGEditor')) {\n      this.router.navigate([`/certs/configure/create-certificate-template`], {\n        queryParams: {\n          type: this.configurationMode,\n          courseId: _.get(this.queryParams, 'courseId'),\n          batchId: _.get(this.queryParams, 'batchId')\n        }\n      });\n    } else {\n      this.router.navigate([`/certs/configure/create-template`], {\n        queryParams: {\n          type: this.configurationMode,\n          courseId: _.get(this.queryParams, 'courseId'),\n          batchId: _.get(this.queryParams, 'batchId')\n        }\n      });\n    }\n  }\n  removeSelectedCertificate() {\n    this.selectedTemplate = null;\n  }\n  ngOnDestroy() {\n    this.unsubscribe$.next();\n    this.unsubscribe$.complete();\n    this.uploadCertificateService.certificate.next(null);\n  }\n  public addRule() {\n    this.addScoreRule = true;\n    let range = 100;\n    const step = 10;\n    const arr = [];\n    while (range > 0) {\n      arr.push(range);\n      range = range - step;\n    }\n    this.arrayValue['range'] = arr;\n  }\n  removeRule() {\n    setTimeout(() => {\n      this.userPreference.value['scoreRange'] = null;\n    }, 500);\n    this.addScoreRule = false;\n  }\n  redoLayout() {\n    if (this.layoutConfiguration != null) {\n      this.FIRST_PANEL_LAYOUT = this.layoutService.redoLayoutCSS(0, this.layoutConfiguration, COLUMN_TYPE.threeToNine);\n      this.SECOND_PANEL_LAYOUT = this.layoutService.redoLayoutCSS(1, this.layoutConfiguration, COLUMN_TYPE.threeToNine);\n    } else {\n      this.FIRST_PANEL_LAYOUT = this.layoutService.redoLayoutCSS(0, null, COLUMN_TYPE.fullLayout);\n      this.SECOND_PANEL_LAYOUT = this.layoutService.redoLayoutCSS(1, null, COLUMN_TYPE.fullLayout);\n    }\n  }\n  handleParameterChange(event) {\n    if (_.get(event, 'value') === 'My state teacher') {\n      this.isStateCertificate = true;\n    } else {\n      this.isStateCertificate = false;\n    }\n  }\n\n  getCertificateFormData() {\n    const formServiceInputParams = {\n      formType: 'certificate',\n      contentType: 'course',\n      formAction: 'certificateCreate',\n      component: 'portal'\n    };\n    return this.formService.getFormConfig(formServiceInputParams, null, 'data').pipe(\n      map((data) => {\n        this.certificateFormConfig = data;\n        return data;\n      }),tap(mapping => {\n      }),\n        catchError((err) => {\n          return of([])\n        })\n      );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ConfigService } from '@sunbird/shared';\nimport { PublicDataService } from '@sunbird/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ContentService } from './../../../../modules/core/services/content/content.service';\nimport { UserService } from '@sunbird/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UploadCertificateService {\n\n  certificate: BehaviorSubject<any>;\n\n  constructor(\n    public publicDataService: PublicDataService,\n    public http: HttpClient,\n    public configService: ConfigService,\n    public contentService: ContentService,\n    public userService: UserService\n  ) {\n    this.certificate = new BehaviorSubject(null);\n  }\n\n  /**\n   * To get the asset images (State logos and Signs)\n   * to get the particular asset we need to pass asset naem as query\n   */\n  getAssetData(query?, type?) {\n    const body = {\n      'request': {\n        'filters': {\n          'mediaType': ['image'],\n          'contentType': ['Asset'],\n          'compatibilityLevel': { 'min': 1, 'max': 2 },\n          'status': ['Live'],\n          'primaryCategory': 'Asset'\n        },\n        'sort_by': {\n          'lastUpdatedOn': 'desc'\n        },\n        'limit': 50,\n        'offset': 0\n      }\n    };\n    if (!type) {\n      body['request']['filters']['channel'] = this.userService.channel;\n    }\n    if (query) {\n      body['request']['query'] = query;\n    }\n    const option = {\n      url: this.configService.urlConFig.URLS.CONTENT.SEARCH,\n      data: body\n    };\n    return this.publicDataService.post(option);\n  }\n\n\n    /**\n   * To get the asset images (State logos and Signs)\n   * to get the particular asset we need to pass asset naem as query\n   */\n  getCertificates(request) {\n    const option = {\n      url: this.configService.urlConFig.URLS.COMPOSITE.SEARCH,\n      data: request\n    };\n    return this.contentService.post(option);\n  }\n\n  /**\n  * To create new asset images (State logos and Signs) and it create space\n  */\n  createAsset(reqObj, type?) {\n    const body = {\n      'request':\n      {\n        'content': {\n          'name': reqObj.assetCaption,\n          'creator': reqObj.creator,\n          'createdBy': reqObj.creatorId,\n          'code': 'org.ekstep0.9002440445885993',\n          'mimeType': 'image/png',\n          'mediaType': 'image',\n          'contentType': 'Asset',\n          'primaryCategory': 'Asset',\n          'osId': 'org.ekstep.quiz.app',\n          'language': ['English'],\n          'channel':  this.userService.channel\n        }\n      }\n    };\n\n    // if (type === 'SIGN') {\n    //   body.request.content.primaryCategory = 'CertAsset';\n    // }\n\n    const option = {\n      url: this.configService.urlConFig.URLS.CONTENT.CREATE,\n      data: body\n    };\n    return this.contentService.post(option);\n  }\n\n  /**\n   * To upload new asset images (State logos and Signs) into the particular space\n   */\n  storeAsset(file, identifier) {\n    const formData = new FormData();\n    formData.append('file', file);\n    const option = {\n      url: `${this.configService.urlConFig.URLS.CERTIFICATE.UPLOAD_CERT_TEMPLATE}/${identifier}`,\n      data: formData\n    };\n    return this.contentService.post(option);\n  }\n\n  getSvg(path): Promise<any> {\n    return this.http.get(path, { responseType: 'text' }).toPromise();\n  }\n\n  createCertTemplate(data) {\n    const option = {\n      url: this.configService.urlConFig.URLS.CERTIFICATE.CREATE_CERT_TEMPLATE,\n      data: data\n    };\n    return this.contentService.post(option);\n  }\n\n  uploadTemplate(svgFile, identifier) {\n    const formData = new FormData();\n    formData.append('file', svgFile);\n    const option = {\n      url: `${this.configService.urlConFig.URLS.CERTIFICATE.UPLOAD_CERT_TEMPLATE}/${identifier}`,\n      data: formData\n    };\n    return this.contentService.post(option);\n  }\n}\n","<div class=\"sb-certificatePage-bg\" [appTelemetryImpression]=\"telemetryImpressionData\">\n  <div *ngIf=\"!viewCertificate && !validateRCCertificate\" class=\"sb-certificatePage\" [class.loading]=\"loader\" [class.error]=\"error\">\n    <div class=\"sb-certificatePage-overlay\"></div>\n    <div class=\"sb-certificatePage-header\">\n      <img alt=\"{{tenantName}}\" src=\"{{logo}}\" class=\"sb-certificatePage-logo\" />\n    </div>\n    <div class=\"sb-certificatePage-desc mb-auto m-0\">\n      <div class=\"sb-certificatePage-loader\">\n        <p>{{resourceService?.frmelmnts?.lbl?.verifyingCertificate}}</p>\n        <img src=\"assets/images/loader.gif\" class=\"sb-certificatePage-loader-img\" alt=\"Loader\"/>\n      </div>\n      <img src=\"assets/images/certificate.png\" class=\"sb-certificatePage-desc-img\" alt=\"Certificate Desc\"/>\n    </div>\n    <div class=\"sb-certificatePage-form mb-auto\">\n      <div class=\"sb-form-field-group\">\n      <label *ngIf=\"!wrongCertificateCode\" class=\"sb-certificatePage-label\" for=\"certificate\">\n        {{resourceService?.frmelmnts?.lbl?.enterCertificateCode}}\n      </label>\n      <label *ngIf=\"wrongCertificateCode\" class=\"sb-field-error-label sb-certificatePage-label sb-color-error\" for=\"certificate\">\n        {{resourceService?.frmelmnts?.lbl?.enterValidCertificateCode}}\n      </label>\n      <div class=\"sb-certificatePage-field sb-field\" id=\"certificate\">\n        <input #codeInputField (keyup)=\"getCodeLength($event)\" (keydown.space)=\"$event.preventDefault();\" [(ngModel)]=\"certificateCode\" type=\"text\" maxlength=\"6\" pattern=\"^[-a-zA-Z0-9@\\.+_]+$\" required autofocus name=\"certificate\" class=\"sb-form-control text-center\"/>\n        <button [disabled]=\"!enableVerifyButton\" type=\"button\" class=\"sb-btn sb-btn-primary sb-btn-normal width-100 mt-32\" (click)=\"certificateVerify()\" tabindex=\"0\"\n        appTelemetryInteract [telemetryInteractEdata]=\"{id:'verify-certificate-button' , type:'click' , pageid:pageId }\"\n        [telemetryInteractCdata]=\"telemetryCdata\">\n          {{resourceService?.frmelmnts?.btn?.verify}}\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n<div *ngIf=\"viewCertificate && !validateRCCertificate\">\n<div  class=\"sb-certificatePage sb-certificate-view sb-certificatePage-flexHeight\">\n    <div class=\"sb-certificatePage-header\">\n      <img alt=\"{{tenantName}}\" src=\"{{logo}}\" class=\"sb-certificatePage-logo\"/>\n    </div>\n    <div class=\"sb-certificatePage-holder-details mb-auto\">\n      <img src=\"assets/images/badge.svg\" class=\"sb-icon-badge mt-24 mb-8\" alt=\"Badge\"/>\n      <p *ngIf=\"recipient\" class=\"sb-certificatePage-holder-desc sb-certificatePage-holder-desc-primary\">\n        {{resourceService?.frmelmnts?.lbl?.certificateIssuedTo}}\n      </p>\n      <h4 *ngIf=\"recipient\" class=\"sb-certificatePage-holder-name\">\n        {{recipient}}\n      </h4>\n      <p *ngIf=\"courseName && issuedOn\" class=\"sb-certificatePage-holder-desc\">\n        {{resourceService?.frmelmnts?.lbl?.completingCourseSuccessfully}} \n        <strong class=\"d-block\">“{{courseName}}”</strong>\n        <span class=\"d-block\">{{resourceService?.frmelmnts?.lbl?.onDiksha | interpolate:'{instance}':instance}}<strong> {{issuedOn}}</strong></span>\n      </p>\n      \n    </div>\n\n  </div>\n\n  <div class=\"sb-mobileDevice text-center\" *ngIf=\"watchVideoLink\">\n    <div class=\"sb-mobileDevice-screen\">\n      <div class=\"sb-mobileDevice-sensors\">\n        <div class=\"sb-mobileDevice-sensor\"></div>\n        <div class=\"sb-mobileDevice-speaker\"></div>\n        <div class=\"sb-mobileDevice-sensor\"></div>\n      </div>\n      <div class=\"player-thumbnail\" appTelemetryInteract [telemetryInteractEdata]=\"{id:'watch-video-button' , type:'click' , pageid:pageId }\" (click)=\"playContent(contentId)\" tabindex=\"0\" *ngIf=\"showVideoThumbnail\"></div>\n      <div class=\"h-100 certificate-area-player\" *ngIf=\"!showVideoThumbnail\">\n        <app-player class=\"content-player\" [overlayImagePath]=\"'assets/images/featured-content.jpg'\" [pageId]=\"pageId\" [isSingleContent]=\"false\" [playerConfig]=\"playerConfig\"></app-player>\n    </div>\n    </div>\n  </div>\n  \n  <div  class=\"sb-certificatePage sb-certificate-view min-height-auto\">\n    <div class=\"sb-certificatePage-holder-details\">\n      <a appTelemetryInteract [telemetryInteractEdata]=\"{id:'return-to-courses-button' , type:'click' , pageid:pageId }\" (click)=\"navigateToCoursesPage()\" tabindex=\"0\" class=\"mt-32 width-100 d-flex flex-jc-space-between p-8 cursor-pointer sb-btn-arrow\" title=\"Return to Courses\">\n        {{resourceService?.frmelmnts?.lbl?.returnToCourses}} <i class=\"angle right icon\"></i>\n      </a>\n    </div>\n  </div>\n</div>\n\n<!-- RC Certificate validation -->\n<div *ngIf=\"validateRCCertificate && viewCertificate\">\n\n  <div class=\"sb-certificatePage sb-certificate-view sb-certificatePage-flexHeight\">\n    <div class=\"sb-certificatePage-header\">\n      <img alt=\"{{tenantName}}\" src=\"{{logo}}\" class=\"sb-certificatePage-logo\" />\n    </div>\n    <div class=\"sb-certificatePage-holder-details mb-auto\">\n      <img src=\"assets/images/badge.svg\" class=\"sb-icon-badge mt-24 mb-8\" alt=\"Badge\" />\n      <p *ngIf=\"recipient\" class=\"sb-certificatePage-holder-desc sb-certificatePage-holder-desc-primary\">\n        {{resourceService?.frmelmnts?.lbl?.certificateIssuedTo}}\n      </p>\n      <h4 *ngIf=\"recipient\" class=\"sb-certificatePage-holder-name\">\n        {{recipient}}\n      </h4>\n      <p *ngIf=\"courseName && issuedOn\" class=\"sb-certificatePage-holder-desc\">\n        {{resourceService?.frmelmnts?.lbl?.completingCourseSuccessfully}}\n        <strong class=\"d-block\">“{{courseName}}”</strong>\n        <span class=\"d-block\">{{resourceService?.frmelmnts?.lbl?.onDiksha | interpolate:'{instance}':instance}}<strong>\n            {{issuedOn}}</strong></span>\n      </p>\n    </div>\n  </div>\n\n</div>\n\n<div *ngIf=\"validateRCCertificate && !viewCertificate && isInvalidCertificate\" class=\"sb-certificatePage\" [class.loading]=\"loader\" [class.error]=\"error\">\n\n  <div class=\"sb-certificatePage sb-certificate-view sb-certificatePage-flexHeight\">\n    <div class=\"sb-certificatePage-header\">\n      <img alt=\"{{tenantName}}\" src=\"{{logo}}\" class=\"sb-certificatePage-logo\" />\n    </div>\n    <div class=\"sb-certificatePage-holder-details mb-auto\">\n      <img class=\"mr-8\" src=\"assets/images/exclamation.svg\" width=\"20px\">\n      {{resourceService?.frmelmnts?.cert?.imsg?.rcInvalid}}\n    </div>\n  </div>\n\n</div>\n<!-- RC Certificate validation -->\n</div>","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SvgEditorService {\n\n  constructor() { }\n}\n","import { Component, OnInit, Input, Output, EventEmitter, OnDestroy, OnChanges, SimpleChanges } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\n\nimport * as _ from 'lodash-es';\nimport { Subject } from 'rxjs/internal/Subject';\n\n@Component({\n  selector: 'svg-editor',\n  template: `<div *ngIf='svgContent' id='templateSvg' [innerHTML]='svgContent'></div>`,\n  styles: []\n})\n\nexport class SvgEditorComponent implements OnInit, OnDestroy, OnChanges {\n  showPreviewButton: boolean = false;\n\n  @Input() icon: string = 'M 18.414062 2 C 18.158062 2 17.902031 2.0979687 17.707031 2.2929688 L 5 15 C 5 15 6.005 15.005 6.5 15.5 C 6.995 15.995 6.984375 16.984375 6.984375 16.984375 C 6.984375 16.984375 8.003 17.003 8.5 17.5 C 8.997 17.997 9 19 9 19 L 21.707031 6.2929688 C 22.098031 5.9019687 22.098031 5.2689063 21.707031 4.8789062 L 19.121094 2.2929688 C 18.926094 2.0979688 18.670063 2 18.414062 2 z M 18.414062 4.4140625 L 19.585938 5.5859375 L 18.537109 6.6347656 L 17.365234 5.4628906 L 18.414062 4.4140625 z M 15.951172 6.8769531 L 17.123047 8.0488281 L 9.4609375 15.710938 C 9.2099375 15.538938 8.9455469 15.408594 8.6855469 15.308594 C 8.5875469 15.050594 8.4590625 14.789063 8.2890625 14.539062 L 15.951172 6.8769531 z M 3.6699219 17 L 3 21 L 7 20.330078 L 3.6699219 17 z';\n  @Input() svgContent!: String;\n  @Input() edit!: Subject<any>;\n  @Input() save!: Subject<any>;\n  @Input() refreshEditor!: Subject<any>;\n  @Output() elementClicked = new EventEmitter();\n  @Input() togglePreview!: Subject<any>;\n  @Input() restrict: Array<string> = ['$', '{'];\n  enableEdit: boolean = true;\n  constructor(private sanitized: DomSanitizer) { }\n\n  ngOnInit(): void {\n    setTimeout(() => {\n      this.generateMaskForSvgElements();\n    }, 1000);\n    if (this.edit) {\n       /* istanbul ignore next */\n      this.edit.subscribe(data => {\n        this.updateSVGTag(_.get(data, 'element'), _.get(data, 'type'), _.get(data, 'value'));\n      });\n    }\n    if (this.togglePreview) {\n      /* istanbul ignore next */\n      this.togglePreview.subscribe((data: string) => {\n        this.toggleSVGPreview(data);\n      });\n    }\n    if (this.save) {\n      /* istanbul ignore next */\n      this.save.subscribe((data: string) => {\n        this.saveSVG(data);\n      });\n    }\n    if (this.refreshEditor) {\n      /* istanbul ignore next */\n      this.refreshEditor.subscribe(() => {\n        setTimeout(() => {\n          this.generateMaskForSvgElements();\n        }, 1000);\n      });\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    // setTimeout(() => {\n    //   this.generateMaskForSvgElements();\n    // }, 1000);\n  }\n\n  ngOnDestroy() {\n    this.edit.unsubscribe();\n    this.save.unsubscribe();\n    if (this.refreshEditor) this.refreshEditor.unsubscribe();\n  }\n\n  /**\n   * @description\n   * - Function to iterate `text` and `image` elements in SVG file\n   * - Add edit icon to text and image elements in SVG file\n   */\n  generateMaskForSvgElements() {\n    let textElement = document.getElementById('templateSvg')?.querySelectorAll('text');\n    if (document.getElementsByClassName('svg-edit-icon').length == 0) {\n      textElement?.forEach((svgElement, index) => {\n        let _elementId = this.setElementId(svgElement, index, 'text');\n  \n        // Pen icon height\n        let editIconHeight = 25;\n        // Set custom id for SVG element\n        svgElement.setAttribute('id', _elementId);\n        // Add event listener for text\n        if (this.isStringEditable(_.get(svgElement, 'textContent'))) {\n          svgElement.style.cursor = 'pointer';\n          svgElement.addEventListener('click', (e) => {\n            // Modal popup for text input\n            this.svgElementClicked(svgElement, 'text');\n          });\n          \n          // Add pen icon to SVG DOM to end of text tag\n          svgElement?.parentNode?.insertBefore(this.createEditIcon(svgElement, editIconHeight, _elementId), svgElement);\n        } else {\n          svgElement.style.cursor = 'not-allowed';\n        }\n      });\n  \n      let imageElements = document.getElementById('templateSvg')?.querySelectorAll('image');\n      imageElements?.forEach((imageElement, index) => {\n        let _elementId = this.setElementId(imageElement, index, 'image');\n  \n        // Pen icon height\n        let editIconHeight = 25;\n        // Set custom id for SVG element\n        imageElement.setAttribute('id', _elementId);\n        // Add event listener for image\n        imageElement.style.cursor = 'pointer';\n        imageElement.addEventListener('click', (e) => {\n          // Modal popup for image input\n          this.svgElementClicked(imageElement, 'image');\n        });\n  \n        // Add pen icon to SVG DOM to end of image tag\n        imageElement?.parentNode?.insertBefore(this.createEditIcon(imageElement, editIconHeight, _elementId), imageElement);\n      });\n    }\n  }\n\n  /**\n   * @param  {SVGElement} svgElement  - SVG element\n   * @param  {number} editIconHeight  - Edit icon height\n   * @param  {string} _elementId      - `id` for SVG element\n   * @description                     - Function to construct SVG edit icon\n   * @returns                         - SVG element with edit icon\n   */\n  createEditIcon(svgElement: SVGElement, editIconHeight: number, _elementId: string) {\n    let bBox = (svgElement as unknown as SVGSVGElement).getBBox();\n\n    // Create pen icon wrap for text\n    let svgTag = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n    svgTag.setAttribute('x', (bBox['x'] + bBox['width']).toString());\n\n    // Calculate icon position based on text element height\n    if (bBox['height'] > 30) {\n      let _iconSpace = (bBox['height'] - editIconHeight);\n      svgTag.setAttribute('y', (bBox['y'] + (_iconSpace / 2)).toString());\n    } else {\n      svgTag.setAttribute('y', (bBox['y']).toString());\n    }\n    svgTag.setAttribute('height', '50');\n    svgTag.setAttribute('width', '50');\n    svgTag.setAttribute('class', 'svg-edit-icon ' + _elementId);\n\n    let editIconPath = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n    editIconPath.setAttribute('id', 'pathIdD');\n    editIconPath.setAttribute('d', this.icon);\n    editIconPath.setAttribute('opacity', '1');\n    editIconPath.setAttribute('fill', 'red');\n    svgTag.append(editIconPath);\n    return svgTag;\n  }\n\n  /**\n   * @param  {SVGElement} svgElement - SVG element which is clicked\n   * @param  {string} type           - Type of element (text / image)\n   * @description\n   * - Function to emit Output event when user click on SVG element\n   */\n  svgElementClicked(svgElement: any, type: string) {\n    if (this.enableEdit) {\n      this.elementClicked.emit({\n        type: type,\n        element: svgElement\n      });\n    }\n  }\n\n  /**\n   * @param  {SVGElement} e   - SVG element\n   * @param  {number} index   - Index of an element in SVG elements node\n   * @param  {string} type    - Type of element (text / image)\n   * @description             - Function to set `id` for element\n   * @returns {string}        - `id` for an element\n   */\n  setElementId(e: any, index: number, type: string) {\n    return _.get(e, 'id') ?\n      _.get(e, 'id') + ' ' + type + '_' + index :\n      type + '_' + index;\n  }\n\n  /**\n   * @param  {any} html - SVG file string\n   * @description\n   * - ̌DomSanitizer helps preventing Cross Site Scripting Security bugs (XSS)\n   * - by sanitizing values to be safe to use in the different DOM contexts\n   * @returns {string}  - Return SGV file with scripts tag executable\n   */\n  sanitizeHTML(html: any) {\n    return this.sanitized.bypassSecurityTrustHtml(html);\n  }\n\n  /**\n   * @param  {SVGElement} element - SVG element\n   * @param  {string} type        - Type of element (text / image)\n   * @param  {string} value       - Either updated text value or image href value (URL path / Base64 string)\n   * @description\n   * - Function to modify the provided SVG element with new value\n   * - In case of image element; `href` and `xlink:href` both are updated with new value\n   * - Once new value are updated to respective tags; \n   * - - `updateSVGRectBoundary` is called for redrawing icon position\n   */\n  updateSVGTag(element: any, type: string, value: string) {\n    const _element = document?.getElementById(_.get(element, 'id'));\n    if (_element && type === 'text') {\n      if (this.isStringEditable(value)) {\n        _element.textContent = value;\n      } else {\n        alert('Updated value starts with restricted characters ' + this.restrict);\n      }\n    }\n    if (_element && type === 'image')  {\n      _element.setAttribute('xlink:href', value);\n      _element.setAttribute('href', value);\n    }\n    this.updateSVGRectBoundary(element);\n  }\n\n  /**\n   * @param  {SVGElement} svgElement - SVG element\n   * @description\n   * - Function to update edit icon with new position based on updated value dimensions\n   */\n  updateSVGRectBoundary(svgElement: SVGElement) {\n    let element = document.getElementById(_.get(svgElement, 'id'));\n    // Determine the coordinates of the text tag\n    let bBox = (element as unknown as SVGSVGElement).getBBox();\n\n    // Update edit icon wrap boundaries for text tag\n    let svgTag = document.getElementsByClassName(_.get(svgElement, 'id'));\n    svgTag[0].setAttribute('x', (bBox['x'] + bBox['width']).toString());\n    svgTag[0].setAttribute('y', (bBox['y']).toString());\n    svgTag[0].setAttribute('height', '50');\n    svgTag[0].setAttribute('width', '50');\n  }\n\n  /**\n   * @param  {string} data  - String whether to show / hide edit icon\n   * @description\n   * - Function to toggle show / hide edit icon\n   */\n  toggleSVGPreview (data: string) {\n    if (typeof data !== 'string') return false;\n    if (data === 'show') {\n      (document.querySelectorAll('.svg-edit-icon') as any).forEach((el: HTMLElement) => {\n        el.style.display = 'inline';\n      });\n    } else if (data === 'hide') {\n      (document.querySelectorAll('.svg-edit-icon') as any).forEach((el: HTMLElement) => {\n        el.style.display = 'none';\n      });\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * @param  {any} textString - String to be validated\n   * @description\n   * Function to check whether string is starting with restricted characters or not\n   */\n  isStringEditable(textString: any) {\n    return !this.restrict.some((t) => textString.includes(t));\n  }\n\n  /**\n   * @param  {string} data - String\n   * @description\n   * Function to remove all edit icon elements and disable edit on fields\n   */\n  saveSVG(data: string) {\n    this.enableEdit = false;\n    let textElement = document.getElementById('templateSvg')?.querySelectorAll('text');\n    textElement?.forEach((svgElement, index) => {\n      svgElement.style.cursor = 'default';\n    });\n    let imageElements = document.getElementById('templateSvg')?.querySelectorAll('image');\n    imageElements?.forEach((imageElement, index) => {\n      imageElement.style.cursor = 'default';\n    });\n    (document.querySelectorAll('.svg-edit-icon') as any).forEach((el: HTMLElement) => {\n      el.remove();\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { SvgEditorComponent } from './svg-editor.component';\nimport { CommonModule } from '@angular/common';  \n\n\n\n@NgModule({\n  declarations: [\n    SvgEditorComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    SvgEditorComponent\n  ]\n})\nexport class SvgEditorModule { }\n","/*\n * Public API Surface of svg-editor\n */\n\nexport * from './lib/svg-editor.service';\nexport * from './lib/svg-editor.component';\nexport * from './lib/svg-editor.module';\n","/**\n * Description\n * Certificate creation component using inline SVG Editor\n * @since release-4.7.0\n */\n\nimport { Component, OnInit, ViewChild, OnDestroy } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport * as _ from 'lodash-es';\nimport { UploadCertificateService } from '../../services/upload-certificate/upload-certificate.service';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { UserService, CertRegService } from '@sunbird/core';\nimport { ToasterService, ResourceService, NavigationHelperService, LayoutService, COLUMN_TYPE } from '@sunbird/shared';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { CertConfigModel } from '../../models/cert-config-model/cert-config-model';\nimport { BrowseImagePopupComponent } from '../browse-image-popup/browse-image-popup.component';\nimport {ActivatedRoute} from '@angular/router';\nimport dayjs from 'dayjs';\n@Component({\n  selector: 'app-svg-editor',\n  templateUrl: './svg-editor.component.html',\n  styleUrls: ['./svg-editor.component.scss']\n})\nexport class SvgEditorComponent implements OnInit, OnDestroy {\n\n  @ViewChild(BrowseImagePopupComponent)\n  public browseImage: BrowseImagePopupComponent;\n\n  public unsubscribe$ = new Subject<void>();\n  createTemplateForm: FormGroup;\n  selectStateOption: any = [];\n  selectLanguageOption: any = [];\n  selectState: any;\n  selectLanguage: any;\n  showSelectImageModal;\n  showUploadUserModal;\n  certLogos: any = [];\n  certSigns: any = [];\n  logoType;\n  // api call\n  defaultCertificates = [];\n  selectedCertificate: any = {};\n  logoHtml;\n  svgData;\n  center = 275;\n  disableCreateTemplate = true;\n  certConfigModalInstance = new CertConfigModel();\n  layoutConfiguration: any;\n  FIRST_PANEL_LAYOUT;\n  SECOND_PANEL_LAYOUT;\n  images = {\n    'LOGO1': { 'index': null, 'name' : '' , 'key': '', 'type': '', 'url': ''},\n    'LOGO2': { 'index': null, 'name' : '' , 'key': '', 'type': '', 'url': ''},\n    'SIGN1': { 'index': null, 'name' : '' , 'key': '', 'type': '', 'url': ''},\n    'SIGN2': { 'index': null, 'name' : '' , 'key': '', 'type': '', 'url': ''}\n  };\n  finalSVGurl: any;\n  classNames = {\n    'STATE_LOGOS': 'state-logo',\n    'STATE_TITLE': 'state-title',\n    'SIGN_LOGO': ['signatureImg1', 'signatureImg2'],\n    'CERT_TITLE': 'cert-title',\n    'DESIGNATIONS_NAMES': ['signatureTitle1', 'signatureTitle2'],\n    'DESIGNATIONS': ['signatureTitle1a', 'signatureTitle2a']\n  };\n  optionSing = 'SIGN2';\n  queryParams: any;\n  mode: any;\n  edit: Subject<any> = new Subject();\n  refreshEditor: Subject<any> = new Subject();\n  togglePreview: Subject<any> = new Subject();\n  save: Subject<any> = new Subject();\n  showSVGInputModal: boolean = false;\n  disableSVGImageModal: boolean = false;\n  selectedSVGObject: any = {};\n  showPreviewButton: boolean = true;\n  previewButton: string = 'show';\n  saveAndPreview: boolean = false;\n  userConsent: boolean = false;\n  previewSvgData: any;\n\n  constructor(public uploadCertificateService: UploadCertificateService,\n    public userService: UserService,\n    private sanitizer: DomSanitizer,\n    private activatedRoute: ActivatedRoute,\n    private certRegService: CertRegService,\n    public toasterService: ToasterService,\n    public resourceService: ResourceService,\n    public navigationHelperService: NavigationHelperService,\n    public layoutService: LayoutService) {\n  }\n\n  ngOnInit() {\n    this.activatedRoute.queryParams.subscribe((params) => {\n      this.queryParams = params;\n      this.mode = _.get(this.queryParams, 'type');\n    });\n    this.navigationHelperService.setNavigationUrl();\n    this.initializeFormFields();\n    this.getDefaultTemplates();\n    this.layoutConfiguration = this.layoutService.initlayoutConfig();\n    this.redoLayout();\n  }\n\n  getDefaultTemplates() {\n    const request = {\n      'request': {\n          'filters': {\n              'certType': 'cert template layout',\n              'channel': this.userService.channel,\n              'mediaType': 'image'\n          },\n          'fields': ['identifier', 'name', 'code', 'certType', 'data', 'issuer', 'signatoryList', 'artifactUrl', 'primaryCategory', 'channel'],\n          'limit': 100\n      }\n    };\n    this.uploadCertificateService.getCertificates(request).subscribe(res => {\n      this.defaultCertificates = _.get(res, 'result.content');\n      this.selectedCertificate = _.clone(this.defaultCertificates[0]);\n      this.getSVGTemplate();\n    });\n  }\n\n  initializeFormFields() {\n    this.createTemplateForm = new FormGroup({\n      certificateTitle: new FormControl('', [Validators.required]),\n      stateName: new FormControl('', [Validators.required]),\n      authoritySignature_0: new FormControl('', [Validators.required]),\n      authoritySignature_1: new FormControl(''),\n      allowPermission: new FormControl('', [Validators.required])\n    });\n    // TODO: Move to a separate component this browse logic;\n    this.createTemplateForm.valueChanges.subscribe(val => {\n      this.validateForm();\n    });\n  }\n\n  validateForm() {\n    // TODO: Form validation need to improve\n    const logo = _.get(this.images, 'LOGO1.url');\n    const sign = _.get(this.images, 'SIGN1.url');\n    if (this.createTemplateForm.status === 'VALID' && _.get(this.createTemplateForm, 'value.allowPermission')\n      && logo && sign) {\n      this.disableCreateTemplate = false;\n    } else {\n      this.disableCreateTemplate = true;\n    }\n  }\n\n\n  getSVGTemplate() {\n    this.uploadCertificateService.getSvg(this.selectedCertificate.artifactUrl).then(res => {\n      const svgFile = res;\n      this.logoHtml = this.sanitizeHTML(svgFile);\n      this.refreshEditor.next({});\n      this.previewCertificate();\n    });\n  }\n\n  ngOnDestroy() {\n    this.unsubscribe$.next();\n    this.unsubscribe$.complete();\n  }\n\n  createCertTemplate() {\n    this.validateForm();\n    // TODO: form validation need to improve\n    if (this.disableCreateTemplate) {\n      this.createTemplateForm.controls.certificateTitle.markAsTouched();\n      this.createTemplateForm.controls.stateName.markAsTouched();\n      this.createTemplateForm.controls.authoritySignature_0.markAsTouched();\n      this.createTemplateForm.controls.authoritySignature_1.markAsTouched();\n      this.createTemplateForm.controls.allowPermission.markAsTouched();\n    } else {\n      this.previewCertificate();\n      setTimeout(() => {\n        const channel = this.userService.channel;\n        const request = this.certConfigModalInstance.prepareCreateAssetRequest(_.get(this.createTemplateForm, 'value'), channel, this.selectedCertificate, this.images);\n        this.disableCreateTemplate = true;\n        this.uploadCertificateService.createCertTemplate(request).subscribe(response => {\n          const assetId = _.get(response, 'result.identifier');\n          this.uploadTemplate(this.finalSVGurl, assetId);\n        }, error => {\n          this.toasterService.error('Something went wrong, please try again later');\n        });\n      }, 1000);\n    }\n  }\n\n  uploadTemplate(base64Url, identifier) {\n    this.uploadCertificateService.storeAsset(base64Url, identifier).subscribe(response => {\n      this.toasterService.success(_.get(this.resourceService, 'frmelmnts.cert.lbl.certAddSuccess'));\n      const templateIdentifier = {'identifier': _.get(response , 'result.identifier')};\n      this.uploadCertificateService.certificate.next(templateIdentifier);\n      this.navigationHelperService.navigateToLastUrl();\n    }, error => {\n      this.toasterService.error('Something went wrong, please try again later');\n      console.log('error', error);\n    });\n  }\n\n  assetData(data) {\n    if (data.key === this.optionSing) {\n      this.createTemplateForm.get('authoritySignature_1').setValidators([Validators.required]);\n      this.createTemplateForm.get('authoritySignature_1').updateValueAndValidity();\n    }\n    this.images[data.key] = data;\n    this.validateForm();\n  }\n\n  close() {\n    this.showSelectImageModal = false;\n    this.showUploadUserModal = false;\n  }\n\n  removeImage(key) {\n    if (key === 'SIGN2') {\n      this.createTemplateForm.get('authoritySignature_1').clearValidators();\n      this.createTemplateForm.get('authoritySignature_1').updateValueAndValidity();\n    }\n    this.images[key] = {};\n    this.validateForm();\n  }\n\n  openSateLogos(type) {\n    this.logoType = type;\n    this.showSelectImageModal = true;\n    this.browseImage.getAssetList();\n  }\n\n  openSignLogos(type) {\n    this.logoType = type;\n    this.showSelectImageModal = false;\n    this.showUploadUserModal = true;\n    // this.browseImage.getAssetList();\n  }\n\n  chooseCertificate(certificate) {\n    this.logoHtml = null;\n    this.selectedCertificate = _.clone(certificate);\n    this.getSVGTemplate();\n  }\n\n  convertHtml(tag) {\n    if (tag) {\n      const html = tag.toString();\n      return new DOMParser().parseFromString(html, 'text/html');\n    }\n  }\n\n  previewCertificate() {\n    this.svgData = this.convertHtml(this.logoHtml);\n    const stateLogos = this.svgData.getElementsByClassName(this.classNames.STATE_LOGOS);\n    const digitalSigns = this.classNames.SIGN_LOGO.map(id => this.svgData.getElementById(id));\n    // this.updateTitles();\n    this.updateStateLogos(stateLogos);\n    this.updateSigns(digitalSigns);\n  }\n\n  previewUpdatedSVGCertificate() {\n    this.svgData = this.convertHtml(this.sanitizeHTML(document.getElementById('templateSvg').innerHTML));\n    this.certificateCreation(this.svgData.getElementsByTagName('svg')[0]);\n  }\n\n  updateTitles() {\n    const certTitle = this.svgData.getElementsByClassName(this.classNames.CERT_TITLE);\n    certTitle[0].innerHTML = this.createTemplateForm.controls.certificateTitle.value;\n    const stateTitle = this.svgData.getElementsByClassName(this.classNames.STATE_TITLE);\n    stateTitle[0].innerHTML = this.createTemplateForm.controls.stateName.value;\n    this.classNames.DESIGNATIONS_NAMES.forEach((id, index) => {\n      const designation_html = this.svgData.getElementById(id);\n      if (designation_html) {\n        const title = this.createTemplateForm.get(`authoritySignature_${index}`).value;\n        designation_html.innerHTML = title;\n      }\n    });\n  }\n\n  updateStateLogos(stateLogos) {\n    const logosArray = Object.values(this.images).filter(x => !_.isEmpty(x) && x['type'] === 'LOGO');\n    this.editSVG(logosArray, stateLogos).then(res => {\n      this.certificateCreation(this.svgData.getElementsByTagName('svg')[0]);\n    });\n  }\n\n  updateSigns(stateLogos) {\n    const logosArray = Object.values(this.images).filter(x => !_.isEmpty(x) && x['type'] === 'SIGN');\n    this.editSVG(logosArray, stateLogos).then(res => {\n      //this.certificateCreation(this.svgData.getElementsByTagName('svg')[0]);\n    });\n  }\n\n  editSVG(logosArray, stateLogos) {\n    return new Promise(async (resolve, reject) => {\n      for (let i = 0; i < logosArray.length; i++) {\n        const logo = logosArray[i];\n        if (logo) {\n          const res = await this.toDataURL(logo);\n\n          if (res && !_.isEmpty(stateLogos) && stateLogos[i]) {\n            stateLogos[i].setAttribute('xlink:href', res['url']);\n          }\n          if (i === (logosArray.length - 1)) {\n            resolve();\n          }\n        }\n      }\n    });\n  }\n\n  toDataURL(image) {\n    return fetch(image.url, {\n      method: 'GET',\n      mode: 'cors',\n      cache: 'no-cache',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    })\n      .then(response => response.blob())\n      .then(blob => new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onloadend = () => resolve({ url: reader.result, type: image.type });\n        reader.onerror = reject;\n        reader.readAsDataURL(blob);\n      }));\n  }\n\nurltoFile(url, filename, mimeType) {\n  return (fetch(url)\n      .then((res) => {\n        return res.arrayBuffer();\n      })\n      .then((buf) => {\n        return new File([buf], filename, {type: mimeType});\n      })\n  );\n}\n\n  certificateCreation(ev) {\n   const dataURL  = this.getBase64Data(ev);\n    this.selectedCertificate['artifactUrl'] = this.sanitizer.bypassSecurityTrustResourceUrl(dataURL);\n    this.urltoFile(dataURL, `certificate_${dayjs().format('YYYY-MM-DD_HH_mm')}.svg`, 'image/svg+xml')\n    .then((file) => {\n      this.finalSVGurl = file;\n    });\n  }\n\n\n  sanitizeHTML(html) {\n    return this.sanitizer.bypassSecurityTrustHtml(html);\n  }\n\n  getImagePath() {\n    if (this.selectedCertificate) {\n      return this.selectedCertificate.artifactUrl;\n    }\n  }\n  getBase64Data(ev) {\n    const div = document.createElement('div');\n    div.appendChild(ev.cloneNode(true));\n    const b64 = 'data:image/svg+xml;base64,' + window.btoa(div.innerHTML);\n    return b64;\n  }\n\n  back() {\n    this.uploadCertificateService.certificate.next(null);\n    this.navigationHelperService.navigateToLastUrl();\n  }\n  redoLayout() {\n    if (this.layoutConfiguration != null) {\n      this.FIRST_PANEL_LAYOUT = this.layoutService.redoLayoutCSS(0, this.layoutConfiguration, COLUMN_TYPE.threeToNine);\n      this.SECOND_PANEL_LAYOUT = this.layoutService.redoLayoutCSS(1, this.layoutConfiguration, COLUMN_TYPE.threeToNine);\n    } else {\n      this.FIRST_PANEL_LAYOUT = this.layoutService.redoLayoutCSS(0, null, COLUMN_TYPE.fullLayout);\n      this.SECOND_PANEL_LAYOUT = this.layoutService.redoLayoutCSS(1, null, COLUMN_TYPE.fullLayout);\n    }\n  }\n\n  elementClicked(e: any) {\n    this.selectedSVGObject = {\n      type: _.get(e, 'type'),\n      value: _.get(e, 'element.textContent'),\n      element: e.element\n    };\n    if (e.type === 'image') {\n      this.logoType = {type: 'LOGO', index: 0,  key:'LOGO1'};\n      this.browseImage.getAssetList();\n    }\n    \n    this.showSVGInputModal = true;\n  }\n  updateSVGInputTag() {\n    this.showSVGInputModal = false;\n    this.edit.next({\n      element: this.selectedSVGObject.element,\n      type: 'text',\n      value: this.selectedSVGObject.value\n    });\n    this.selectedSVGObject = {};\n  }\n  closeSVGInputModal() {\n    this.showSVGInputModal = false;\n  }\n\n  svgAssetData(imageObj) {\n    this.getBase64FromUrl(_.get(imageObj, 'url')).then((base64String: string) => {\n      this.showSVGInputModal = false;\n      this.edit.next({\n        element: this.selectedSVGObject.element,\n        type: 'image',\n        value: base64String\n      });\n      this.selectedSVGObject = {};\n    });\n  }\n  getBase64FromUrl = async (url) => {\n    const data = await fetch(url);\n    const blob = await data.blob();\n    return new Promise((resolve) => {\n      const reader = new FileReader();\n      reader.readAsDataURL(blob);\n      reader.onloadend = () => {\n        const base64data = reader.result;\n        resolve(base64data);\n      }\n    });\n  }\n  toggleSVGPreview() {\n    this.previewButton = this.previewButton == 'show' ? 'hide' : 'show';\n    this.togglePreview.next(this.previewButton);\n  }\n\n  saveUpdatedCertificate() {\n    const certificateCodeName = _.get(this.queryParams, 'courseId') + '_' + _.get(this.queryParams, 'batchId').toString();\n    this.svgData = null;\n    this.save.next('');\n    this.previewUpdatedSVGCertificate();\n    setTimeout(() => {\n      const channel = this.userService.channel;\n      const request = this.certConfigModalInstance.prepareCreateAssetRequest(_.get(this.createTemplateForm, 'value'), channel, this.selectedCertificate, this.images);\n      request.request.asset.code = certificateCodeName;\n      request.request.asset.name = certificateCodeName;\n      this.uploadCertificateService.createCertTemplate(request).subscribe(response => {\n        const assetId = _.get(response, 'result.identifier');\n        this.uploadTemplate(this.finalSVGurl, assetId);\n      }, error => {\n        this.toasterService.error('Something went wrong, please try again later');\n      });\n    }, 1000);\n  }\n\n  previewAndSave() {\n    this.toggleSVGPreview();\n    this.saveAndPreview = true;\n    this.previewSvgData = this.sanitizeHTML(document.getElementById('templateSvg').innerHTML);\n  }\n\n  closeSaveAndPreview() {\n    this.toggleSVGPreview();\n    this.saveAndPreview = false;\n    this.userConsent = false;\n  }\n}\n","<div [ngClass]=\"layoutConfiguration ? 'sbt-inside-page-container' : ''\">\n  <!-- Header section-->\n  <div class=\"sb-bg-color-white relative position back-btn-container cc-player__btn-back relative9\">\n    <div class=\"ui container\">\n      <div class=\"py-16 d-flex flex-ai-center flex-jc-space-between\">\n        <button (click)=\"back()\" tabindex=\"0\" class=\"sb-btn sb-btn-normal sb-btn-link sb-btn-link-primary sb-left-icon-btn mr-auto\" id=\"goBack\"\n          type=\"button\">\n          <i class=\"icon-svg icon-svg--xxs icon-back mr-4\">\n            <svg class=\"icon icon-svg--primary\">\n              <use xlink:href=\"assets/images/sprite.svg#arrow-long-left\"></use>\n            </svg></i>\n         {{resourceService?.frmelmnts?.btn?.back}}\n        </button>\n        <!-- <button type=\"button\" class=\"sb-btn sb-btn-normal sb-btn-primary\">\n          {{resourceService?.frmelmnts?.cert?.btn?.createtemp}}\n        </button> -->\n      </div>\n    </div>\n  </div>\n  <!-- / Header section-->\n  \n  <!-- Create template form-->\n  <div class=\"certificate-container py-16 cc-player__content-header relative9\">\n    <div class=\"ui container\">\n      <div class='ui stackable grid mt-0'>\n        <div class=\"six wide column\">\n          <div class=\"certificate-content certificate-bg p-24\">\n            <label>{{resourceService?.frmelmnts?.cert?.lbl?.languageSupportNote}}</label>\n            <form [formGroup]=\"createTemplateForm\">\n              <div class='ui stackable grid mt-0'>\n                <div class=\"twelve wide column\">\n                    <div class=\"sb-field mb-0\">\n                      <label>{{resourceService?.frmelmnts?.cert?.lbl?.certtitle}}<span class=\"asterik\">*</span></label>\n                      <label for=\"certificateTitle-input\" class=\"hide\">{{resourceService?.frmelmnts?.cert?.prmpt?.certtitle}}</label>\n                      <input formControlName=\"certificateTitle\" id=\"certificateTitle-input\" [ngClass]=\"(createTemplateForm.controls.certificateTitle.touched && createTemplateForm.controls.certificateTitle.invalid) ? 'is-invalid' : 'is-valid'\" class=\"sb-form-control\" [placeholder]=\"resourceService?.frmelmnts?.cert?.prmpt?.certtitle\">\n                    </div>\n                    <small class=\"pl-4 fsmall\">\n                     {{resourceService?.frmelmnts?.cert?.inlntxt?.certtitle}}\n                    </small>\n                </div>\n              </div>\n              <div class=\"fnormal pt-16 state-labels\">{{resourceService?.frmelmnts?.cert?.lbl?.statedet}}</div>\n              <div class='ui stackable grid mt-0'>\n                <div class=\"twelve wide column py-8\">\n                  <div class=\"sb-field d-flex flex-dc\">\n                    <label for=\"state\" class=\"state-labels\">{{resourceService?.frmelmnts?.lbl?.name}}<span class=\"asterik\">*</span></label>\n                    <label for=\"stateName-input\" class=\"hide\">{{resourceService?.frmelmnts?.cert?.prmttxt?.statedet}}</label>\n                    <input formControlName=\"stateName\" id=\"stateName-input\" class=\"sb-form-control\" \n                    [ngClass]=\"(createTemplateForm.controls.stateName.touched && createTemplateForm.controls.stateName.invalid) ? 'is-invalid' : 'is-valid'\"\n                    [placeholder]=\"resourceService?.frmelmnts?.cert?.prmttxt?.statedet\">\n                  </div>\n                  <small class=\"pl-4 fsmall\">{{resourceService?.frmelmnts?.cert?.inlntxt?.statedet}}</small>\n                </div>\n              </div>\n              <div class=\"ui stackable grid\">\n                <div class=\"six wide column py-8\">\n                  <div class=\"sb-field mb-0 d-flex flex-dc\">\n                    <label class=\"pl-4 state-labels\">{{resourceService?.frmelmnts?.cert?.lbl?.statelogo}} <span class=\"asterik\">*</span></label>\n                    <button (click)=\"openSateLogos({type: 'LOGO', index: 0,  key:'LOGO1'})\" tabindex=\"0\"  class=\"sb-btn sb-btn-normal sb-browse-btn\">\n                      {{resourceService?.frmelmnts?.cert?.btn?.browse}}\n                    </button>\n                  </div>\n                  <div class=\"d-flex flex-dc\">\n                    <small *ngIf=\"!(images?.LOGO1?.name)\" class=\"pl-4 py-4 fsmall\" [innerHTML]=\"sanitizeHTML(resourceService?.frmelmnts?.cert?.intxt?.imgdimensions)\"></small>\n                    <small *ngIf=\"(images?.LOGO1?.name)\" class=\"pl-4 py-4 fsmall\">{{images?.LOGO1?.name}} <span  class=\"pl-8\">\n                    <img (click)=\"removeImage('LOGO1')\" tabindex=\"0\" src=\"assets/images/close.svg\" width=\"12px\"></span></small>\n                  </div>\n                </div>\n                <div class=\"six wide column py-8\">\n                  <div class=\"sb-field mb-0 d-flex flex-dc\">\n                    <label class=\"pl-4 state-labels\">{{resourceService?.frmelmnts?.cert?.lbl?.statelogo2}}</label>\n                    <button (click)=\"openSateLogos({type: 'LOGO', index: 1,  key:'LOGO2'})\" tabindex=\"0\"  class=\"sb-btn sb-btn-normal sb-browse-btn\">\n                      {{resourceService?.frmelmnts?.cert?.btn?.browse}}\n                    </button>\n                  </div>\n                  <div class=\"d-flex flex-dc\">\n                    <small *ngIf=\"!(images?.LOGO2?.name)\"  class=\"pl-4 py-4 fsmall\" [innerHTML]=\"sanitizeHTML(resourceService?.frmelmnts?.cert?.intxt?.imgdimensions)\"></small>\n                    <small *ngIf=\"(images?.LOGO2?.name)\" class=\"pl-4 py-4 fsmall\">{{images?.LOGO2?.name}}<span  class=\"pl-8\">\n                    <img (click)=\"removeImage('LOGO2')\" tabindex=\"0\" src=\"assets/images/close.svg\" width=\"12px\"></span></small>\n                  </div>\n                </div>\n              </div>\n            <div class=\"fnormal pt-24 state-labels\">{{resourceService?.frmelmnts?.cert?.lbl?.signatory}}</div>\n              <div class='ui stackable grid mt-0'>\n                <div class=\"six wide column\">\n                  <div class=\"sb-field d-flex flex-dc\">\n                    <label class=\"pl-4 state-labels\">{{resourceService?.frmelmnts?.cert?.lbl?.sign}}<span class=\"asterik\">*</span></label>\n                    <button (click)=\"openSignLogos({type: 'SIGN', index: 0,  key:'SIGN1'})\" tabindex=\"0\"  class=\"sb-btn sb-btn-normal sb-browse-btn\">\n                      {{resourceService?.frmelmnts?.cert?.btn?.browse}}\n                    </button>\n                    <div class=\"d-flex flex-dc\">\n                      <small *ngIf=\"!(images?.SIGN1?.name)\"  class=\"pl-4 py-4 fsmall\">{{resourceService?.frmelmnts?.cert?.inlntxt?.signspec}}</small>\n                      <small *ngIf=\"(images?.SIGN1?.name)\" class=\"pl-4 py-4 fsmall\">{{images?.SIGN1?.name}}<span  class=\"pl-8\">\n                      <img (click)=\"removeImage('SIGN1')\" tabindex=\"0\" src=\"assets/images/close.svg\" width=\"12px\"></span></small>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"six wide column py-8\">\n                  <div class=\"sb-field mb-0\">\n                    <label class=\"mb-16\">{{resourceService?.frmelmnts?.cert?.lbl?.signdesig}}<span class=\"asterik\">*</span></label>\n                    <div class=\"sb-field mb-0\">\n                      <label for=\"authoritySignature_0-input\" class=\"hide\">{{resourceService?.frmelmnts?.cert?.lbl?.designation}}</label>\n                      <input formControlName=\"authoritySignature_0\" class=\"sb-form-control\" id=\"authoritySignature_0-input\"\n                      [ngClass]=\"(createTemplateForm.controls.authoritySignature_0.touched && createTemplateForm.controls.authoritySignature_0.invalid) ? 'is-invalid' : 'is-valid'\"\n                      [placeholder]=\"resourceService?.frmelmnts?.cert?.lbl?.designation\">\n                    </div>\n                    <small class=\"pl-4 fsmall\">\n                      {{resourceService?.frmelmnts?.cert?.inlntxt?.signdet}}\n                    </small>\n                  </div>\n                </div>\n              </div>\n              <div class='ui stackable grid mt-0'>\n                <div class=\"six wide column\">\n                  <div class=\"sb-field d-flex flex-dc\">\n                    <label class=\"pl-4 state-labels\">{{resourceService?.frmelmnts?.cert?.lbl?.sign2}}</label>\n                    <button (click)=\"openSignLogos({type: 'SIGN', index: 1,  key:'SIGN2'})\" tabindex=\"0\" class=\"sb-btn sb-btn-normal sb-browse-btn\">\n                      {{resourceService?.frmelmnts?.cert?.btn?.browse}}\n                    </button>\n                  </div>\n                  <div class=\"d-flex flex-dc\">\n                    <small *ngIf=\"!(images?.SIGN2?.name)\" class=\"pl-4 py-4 fsmall\">{{resourceService?.frmelmnts?.cert?.inlntxt?.signspec}}</small>\n                    <small *ngIf=\"(images?.SIGN2?.name)\" class=\"pl-4 py-4 fsmall\">{{images?.SIGN2?.name}}<span  class=\"pl-8\">\n                    <img (click)=\"removeImage('SIGN2')\" tabindex=\"0\" src=\"assets/images/close.svg\" width=\"12px\"></span></small>\n                  </div>\n                </div>\n                <div class=\"six wide column py-8\">\n                  <div class=\"sb-field mb-0\">\n                    <label class=\"mb-16\">{{resourceService?.frmelmnts?.cert?.lbl?.signdesig2}}</label>\n                    <div class=\"sb-field mb-0\">\n                      <label for=\"authoritySignature_1-input\" class=\"hide\">{{resourceService?.frmelmnts?.cert?.lbl?.designation}}</label>\n                      <input formControlName=\"authoritySignature_1\" id=\"authoritySignature_1-input\"\n                      [ngClass]=\"(createTemplateForm.controls.authoritySignature_1.touched && createTemplateForm.controls.authoritySignature_1.invalid) ? 'is-invalid' : 'is-valid'\"\n                      class=\"sb-form-control\" [placeholder]=\"resourceService?.frmelmnts?.cert?.lbl?.designation\">\n                    </div>\n                    <small class=\"pl-4 fsmall\">\n                      {{resourceService?.frmelmnts?.cert?.inlntxt?.signdet}}\n                    </small>\n                  </div>\n                </div>\n              </div>\n              <div class='ui stackable grid mt-0'>\n                <div class=\"twelve wide column\">\n                  <div class=\"sb-checkbox sb-checkbox-secondary pt-24\">\n                    <input formControlName=\"allowPermission\" value=\"true\" type=\"checkbox\" id=\"check2\" name=\"selected\">\n                    <label for=\"check2\" class=\"text-left fsmall\">{{resourceService?.frmelmnts?.cert?.intxt?.confrmtion}}</label>\n                  </div>\n                </div>\n              </div>\n              </form>\n        \n          </div>\n        </div>\n  \n        <!-- Side panel of cert-templates -->\n        <div class=\"six wide column\">\n          <div class=\"select-template-content certificate-bg p-24\">\n            <div class=\"d-flex flex-jc-space-between\">\n              <label class=\"preview-title mb-0\">{{resourceService?.frmelmnts?.cert?.lbl?.certprew}}</label>\n              <button type=\"button\" (click)=\"previewCertificate()\" tabindex=\"0\" class=\"sb-btn sb-btn-normal sb-btn-outline-primary\">\n                {{resourceService?.frmelmnts?.cert?.btn?.refresh}}\n              </button>\n            </div>\n            <div class=\"ui stackable grid mt-0\">\n              <div class=\"twelve wide column\">\n                <div class=\"cert-select-card\">\n                  <div class=\"d-flex flex-ai-center flex-dc cert-select-card__content\">\n                    <div class=\"d-flex flex-ai-center flex-jc-center cert-select-card__content__description\">\n                      <img [src]=\"getImagePath()\" class=\"w-100\" alt=\"Certificate template\">\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div class=\"ui stackable grid mt-0\">\n              <div class=\"twelve wide column\">\n                <label>{{resourceService?.frmelmnts?.cert?.lbl?.layout}}</label>\n                <div class =\"d-flex flex-w-wrap\">\n                  <div *ngFor=\"let certificate of defaultCertificates\" class =\"cert-img-sb-card active mr-16\">\n                    <div class=\"cert-img-sb-card__content\" alt=\"certificate template\">\n                      <img (click)=\"chooseCertificate(certificate)\" tabindex=\"0\" [src]=\"certificate?.artifactUrl\" alt=\"certificate template\"  />\n                      <div *ngIf=\"selectedCertificate?.identifier === certificate?.identifier\" class=\"selected-mark\"><img src=\"assets/images/checkbox-icon.svg\" alt=\"selected mark\"></div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  \n      <div class=\"ui stackable grid m-0\">\n        <div class=\"twelve wide column px-0\">\n          <div class=\"d-flex flex-ai-center flex-jc-flex-end sb-bg-color-white p-24\">\n            <button (click)=\"createCertTemplate()\" tabindex=\"0\" class=\"sb-btn sb-btn-normal sb-btn-primary ml-8 px-24\">{{resourceService?.frmelmnts?.cert?.btn?.saveAsTemplate}}</button>\n          </div>\n        </div>\n      </div>\n  </div>\n  </div>\n  <browse-image-popup  (assetData)=\"assetData($event)\" (close)=\"close()\" [showUploadUserModal]=\"showUploadUserModal\" \n  [showSelectImageModal]=\"showSelectImageModal\" [logoType]=\"logoType\" ></browse-image-popup>\n  \n  \n  <!-- <browse-image-popup (assetData)=\"assetData($event)\" (close)=\"close()\" [showUploadUserModal]=\"showUploadUserModal\"\n  [showSelectImageModal]=\"showSelectImageModal\" [logoType]=\"logoType\"></browse-image-popup> -->\n","import * as _ from 'lodash-es';\nexport class CertConfigModel {\n    private dropDownFields = {\n        COMPLETION_CERTIFICATE: 'Completion certificate',\n        MY_STATE_TEACHER : 'My state teacher',\n        ALL: 'All'\n    };\n    constructor() {\n    }\n\n    /**\n     * @since - release-3.2.10\n     * @param  { object } rawValues\n     * @param  { string }rootOrgId\n     * @description - It returns the criteria extracted from the given drop-down raw values.\n     */\n    processDropDownValues(rawValues, rootOrgId) {\n        const criteria = {};\n        if (_.get(rawValues, 'issueTo') !== this.dropDownFields.ALL) {\n            criteria['user'] =  { rootOrgId: rootOrgId };\n        }\n        criteria['enrollment'] =  { status: 2 };\n        if (_.get(rawValues, 'scoreRange')) {\n            const scoreRange = (_.get(rawValues, 'scoreRange')).substr(0, (_.get(rawValues, 'scoreRange')).indexOf('%'));\n            criteria['assessment'] = { score: {'>=': parseInt(scoreRange)}};\n        }\n        return criteria;\n    }\n\n    /**\n     * @since - release-3.2.10\n     * @param  { object } criteria\n     * @description - It returns the drop-down values extracted from the given criteria.\n     */\n    processCriteria(criteria) {\n        const dropDowns = {};\n        dropDowns['issueTo'] = _.get(criteria, 'user.rootOrgId') ?\n        [{ name: this.dropDownFields.MY_STATE_TEACHER }] : [{ name: this.dropDownFields.ALL }];\n        dropDowns['certTypes'] = _.get(criteria, 'enrollment.status') === 2 ? [{ name: this.dropDownFields.COMPLETION_CERTIFICATE }] : [{}];\n        dropDowns ['scoreRange'] = _.get(criteria, 'assessment.score') ? criteria.assessment.score['>='] + '%' : '';\n        return dropDowns;\n    }\n\n    /**\n     * @since - release-3.2.10\n     * @param  { object } certTypeData\n     * @description - It will take preference read api response and give back the drop-downs for cert rules page\n     */\n    getDropDownValues(certTypeData) {\n        const processedDropdownValues = {};\n        const certTypes = certTypeData.filter(val => {\n            return val.code === 'certTypes';\n        });\n        processedDropdownValues['certTypes'] = _.get(certTypes[0], 'range');\n\n        const issueTo = certTypeData.filter(data => {\n            return data.code === 'issueTo';\n        });\n        processedDropdownValues['issueTo'] = _.get(issueTo[0], 'range');\n\n        return processedDropdownValues;\n\n    }\n\n    prepareCreateAssetRequest(rawFormValues, channel, certificate, images) {\n        const sign_1 = this.splitName(_.get(images, 'SIGN1.url'), rawFormValues, 'authoritySignature_0');\n        const signatoryList = [];\n        signatoryList.push(sign_1);\n\n        if (!_.isEmpty(images['SIGN2']) && _.get(images, 'SIGN2.name')) {\n            const sign_2 = this.splitName(_.get(images, 'SIGN2.url'), rawFormValues, 'authoritySignature_1');\n            signatoryList.push(sign_2);\n        }\n\n        let issuer = _.get(certificate, 'issuer');\n        if (typeof issuer === 'string') {\n            issuer = JSON.parse(issuer);\n        }\n        const requestBody = {\n            'request': {\n                'asset': {\n                    'name': _.get(rawFormValues, 'certificateTitle'),\n                    'code': _.get(rawFormValues, 'certificateTitle'),\n                    'mimeType': 'image/svg+xml',\n                    'license': 'CC BY 4.0',\n                    'primaryCategory': 'Certificate Template',\n                    // 'contentType': 'Asset',\n                    'mediaType': 'image',\n                    'certType': 'cert template',\n                    'channel': channel,\n                    'issuer': issuer,\n                    'signatoryList': signatoryList\n                }\n            }\n        };\n        return requestBody;\n    }\n\n    splitName(imageUrl, sign, key) {\n        const name = _.get(sign , key);\n        const signValues = name.split(',');\n        const designation = signValues[1] || 'CEO';\n        const signatoryList = {\n            name: name,\n            image: imageUrl,\n            designation: designation,\n            id: `${designation}/CEO`\n        };\n        return signatoryList;\n    }\n\n}\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { UploadCertificateService } from '../../services/upload-certificate/upload-certificate.service';\nimport { ToasterService, ResourceService } from '@sunbird/shared';\nimport * as _ from 'lodash-es';\nimport { UserService } from '@sunbird/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\n\n\n@Component({\n  selector: 'browse-image-popup',\n  templateUrl: './browse-image-popup.component.html',\n  styleUrls: ['./browse-image-popup.component.scss']\n})\nexport class BrowseImagePopupComponent implements OnInit {\n\n  @Input() showSelectImageModal = false;\n  @Input() logoType;\n  @Input() enableUploadSignature = false;\n  @Output() assetData = new EventEmitter();\n  @Output() close = new EventEmitter();\n  @Input() showUploadUserModal = false;\n  imageName;\n  imagesList = [];\n  uploadForm: FormGroup;\n  fileObj: any;\n  selectedLogo: any;\n  sign = 'SIGN';\n  imageDimensions = {\n    'LOGO': { type: 'PNG', dimensions: '88px X 88px' },\n    'SIGN': { type: 'PNG', dimensions: '112px X 46px' }\n  };\n  allImagesList = [];\n\n  constructor(public uploadCertificateService: UploadCertificateService,\n    public toasterService: ToasterService,\n    public resourceService: ResourceService,\n    public userService: UserService) {\n    this.uploadForm = new FormGroup({\n      assetCaption: new FormControl('', [Validators.required]),\n      creator: new FormControl('', [Validators.required]),\n      creatorId: new FormControl('', [Validators.required])\n    });\n  }\n\n  ngOnInit() {\n    // this.getAssetList();\n  }\n\n  getAssetList() {\n    this.imageName = '';\n    this.selectedLogo = null;\n    this.uploadCertificateService.getAssetData().subscribe(res => {\n      this.imagesList = res.result.content;\n    }, error => {\n      this.toasterService.error(_.get(this.resourceService, 'messages.fmsg.m0004'));\n    });\n  }\n\n  searchImage(type?) {\n    this.uploadCertificateService.getAssetData(this.imageName, type).subscribe(res => {\n      if (res && res.result) {\n        if (!type) {\n          this.imagesList = res.result.content;\n        } else {\n          this.allImagesList = res.result.content;\n        }\n      }\n    }, error => {\n      this.toasterService.error(_.get(this.resourceService, 'messages.fmsg.m0004'));\n    });\n  }\n\n  async fileChange(ev) {\n    this.uploadForm.reset();\n    const imageProperties = await this.getImageProperties(ev.target.files[0]);\n    const isDimensionMatched = this.dimentionCheck(imageProperties);\n    const isTypeMatched = _.get(imageProperties, 'type').includes('png');\n    const isSizeMatched = _.get(imageProperties, 'size') < 1;\n    if (imageProperties && isSizeMatched && isTypeMatched && isDimensionMatched) {\n      this.fileObj = ev.target.files[0];\n      const fileName = _.get(this.fileObj, 'name').split('.')[0];\n      const userName = `${_.get(this.userService, 'userProfile.firstName') || ''} ${_.get(this.userService, 'userProfile.lastName') || ''}`;\n      this.uploadForm.patchValue({\n        'assetCaption': fileName,\n        'creator': userName,\n        'creatorId': _.get(this.userService, 'userProfile.id')\n      });\n    } else {\n      this.toasterService.error(_.get(this.resourceService, 'frmelmnts.cert.lbl.imageErrorMsg'));\n\n    }\n  }\n\n  getAllImages() {\n    this.imageName = '';\n    this.selectedLogo = null;\n    this.uploadCertificateService.getAssetData(null, 'all').subscribe(res => {\n      this.allImagesList = res.result.content;\n    }, error => {\n      this.toasterService.error(_.get(this.resourceService, 'messages.fmsg.m0004'));\n    });\n  }\n\n  dimentionCheck(image) {\n    let flag = false;\n    if (image) {\n      const dimension = `${_.get(image, 'width')}px X ${_.get(image, 'height')}px`;\n      const logoType = _.get(this.logoType, 'type');\n      const requiredDimensions = this.imageDimensions[logoType]['dimensions'];\n      flag = _.isEqual(dimension, requiredDimensions);\n    }\n    return flag;\n  }\n\n  getImageProperties(ev) {\n    return new Promise((resolve, reject) => {\n      let imageData;\n      const file = ev;\n      const img = new Image();\n      if (file.url) {\n        img.src = file.url;\n      } else {\n        img.src = window.URL.createObjectURL(file);\n      }\n      img.onload = () => {\n        const width = img.naturalWidth;\n        const height = img.naturalHeight;\n        imageData = {\n          'height': height,\n          'width': width,\n          'size': _.toNumber((file.size / (1024 * 1024)).toFixed(2)),\n          'type': file.type\n        };\n        resolve(imageData);\n      };\n    });\n  }\n\n  browseImages() {\n    this.showUploadUserModal = true;\n    this.selectedLogo = null;\n  }\n\n  upload() {\n    // TODO: have to make more dynamic (use input variable autoUpload)\n    if (this.logoType.type !== this.sign) {\n      this.uploadCertificateService.createAsset(this.uploadForm.value, this.logoType.type).subscribe(res => {\n        if (res && res.result) {\n          this.uploadBlob(res);\n        }\n      }, error => {\n        this.toasterService.error(_.get(this.resourceService, 'messages.fmsg.m0004'));\n      });\n    } else {\n      this.getImageURLs();\n    }\n  }\n\n  /**\n  *  converting images files as data URLs\n  */\n  getImageURLs() {\n    const file = this.fileObj;\n    const reader = new FileReader();\n    if (file) {\n      reader.readAsDataURL(file);\n      reader.onload = () => {\n        const imageURL = reader.result as string;\n        const image = {\n          'name': this.uploadForm.controls.assetCaption.value,\n          'url': imageURL,\n          'type': this.logoType.type,\n          'key': this.logoType.key,\n          'index': this.logoType.index\n        };\n        this.assetData.emit(image);\n        this.uploadForm.reset();\n        this.closeModel();\n      };\n    }\n  }\n\n  uploadBlob(data) {\n    if (data) {\n      const identifier = _.get(data, 'result.content_id');\n      this.uploadCertificateService.storeAsset(this.fileObj, identifier).subscribe(imageData => {\n        if (imageData.result) {\n          this.showUploadUserModal = false;\n          this.showSelectImageModal = false;\n          const image = {\n            'name': this.uploadForm.controls.assetCaption.value,\n            'url': imageData.result.artifactUrl,\n            'type': this.logoType.type,\n            'key': this.logoType.key,\n            'index': this.logoType.index\n          };\n          this.assetData.emit(image);\n          this.uploadForm.reset();\n          this.closeModel();\n        }\n      }, error => {\n        this.toasterService.error(_.get(this.resourceService, 'messages.fmsg.m0004'));\n        this.closeModel();\n        this.uploadForm.reset();\n      });\n    }\n  }\n\n  async selectLogo(logo) {\n    const file = {\n      url: logo.artifactUrl,\n      type: logo.mimeType,\n      size: logo.size\n    };\n    const imageProperties = await this.getImageProperties(file);\n    const isDimensionMatched = this.dimentionCheck(imageProperties);\n    const isTypeMatched = _.get(imageProperties, 'type').includes('png');\n    const isSizeMatched = _.get(imageProperties, 'size') < 1;\n    if (imageProperties && isSizeMatched && isTypeMatched && isDimensionMatched) {\n      this.selectedLogo = logo;\n    } else {\n      this.toasterService.error(_.get(this.resourceService, 'frmelmnts.cert.lbl.imageErrorMsg'));\n    }\n  }\n  back() {\n    if (this.logoType.type === this.sign) {\n      this.closeModel();\n    } else {\n      this.showUploadUserModal = false;\n      this.showSelectImageModal = true;\n      this.uploadForm.reset();\n      // this.close.emit();\n      this.selectedLogo = null;\n    }\n\n  }\n\n  closeModel() {\n    this.uploadForm.reset();\n    this.showUploadUserModal = false;\n    this.showSelectImageModal = false;\n    this.selectedLogo = null;\n    this.close.emit();\n  }\n\n  selectAndUseLogo() {\n    const image = {\n      'name': this.selectedLogo.name,\n      'url': this.selectedLogo.artifactUrl,\n      'type': this.logoType.type,\n      'key': this.logoType.key,\n      'index': this.logoType.index\n    };\n    this.assetData.emit(image);\n    this.selectedLogo = null;\n    this.closeModel();\n  }\n\n  showUploadSignature() {\n    this.logoType = { type: 'SIGN', index: 0, key: 'SIGN1' };\n    this.showSelectImageModal = false;\n    this.showUploadUserModal = true;\n  }\n}\n","export * from './certificate-details/certificate-details.component';\nexport * from './certificate-configuration/certificate-configuration.component';\nexport * from './create-template/create-template.component';\nexport * from './svg-editor/svg-editor.component';\n","<app-modal-wrapper *ngIf=\"showSelectImageModal\" [config]=\"{disableClose: true, size: 'large'}\" (dismiss)=\"closeModel()\"\n  #modal>\n  <ng-template sbModalContent>\n    <div class=\"sb-modal\">\n      <div class=\"transition ui dimmer page modals active visible\">\n        <div class=\"ui modal transition active visible large\">\n          <div class=\"d-flex flex-ai-center sb-modal-header\">\n            <img src=\"assets/images/image.svg\" width=\"24px\" height=\"20px\" class=\"mr-8\">\n            {{resourceService.frmelmnts?.lbl?.selectImage}}\n          </div>\n          <div class=\"sb-modal-content\">\n            <div class=\"image-tabs px-8\">\n              <input class=\"image-input\" id=\"tab1\" type=\"radio\" name=\"tabs\" checked>\n              <label for=\"tab1\" (click)=\"getAssetList()\" tabindex=\"0\"\n                class=\"image-label mr-8\">{{resourceService.frmelmnts?.lbl?.myImages}}</label>\n\n              <input class=\"image-input\" id=\"tab2\" type=\"radio\" name=\"tabs\">\n              <label (click)=\"getAllImages()\" tabindex=\"0\" for=\"tab2\"\n                class=\"image-label\">{{resourceService.frmelmnts?.lbl?.allImages}}</label>\n\n              <section id=\"content1\">\n                <div class=\"twelve wide column\">\n                  <div class=\"sb-search-box mb-16\">\n                    <div class=\"input-div relative\">\n                      <input class=\"sb-search-input\" [(ngModel)]=\"imageName\" (keyup.enter)=\"searchImage()\" type=\"text\"\n                        [placeholder]=\"resourceService?.frmelmnts?.cert?.prmpt?.searchImage\" />\n                      <i (click)=\"getAssetList()\" tabindex=\"0\" class=\"close icon\"></i>\n                      <i class=\"search icon\"></i>\n                    </div>\n                  </div>\n                  <div class=\"ui grid m-0\">\n                    <div class=\"three wide column p-8\" *ngFor=\"let image of imagesList\">\n                      <div class=\"ui card text-center common-contribution-card active\">\n                        <div class=\"content\">\n                          <img [src]=\"image?.artifactUrl\" tabindex=\"0\" (click)=\"selectLogo(image)\" rel=\"placeholder\">\n                        </div>\n                        <div *ngIf=\"image?.versionKey === selectedLogo?.versionKey\" class=\"selected-mark\"><img\n                            src=\"assets/images/checkbox-icon.svg\" width=\"24px\" height=\"24px\"></div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </section>\n\n              <section id=\"content2\">\n                <div class=\"twelve wide column\">\n                  <div class=\"sb-search-box mb-16\">\n                    <div class=\"input-div relative\">\n                      <input class=\"sb-search-input\" [(ngModel)]=\"imageName\" (keyup.enter)=\"searchImage('all')\"\n                        type=\"text\" [placeholder]=\"resourceService?.frmelmnts?.cert?.prmpt?.searchImage\" />\n                      <i (click)=\"getAllImages()\" tabindex=\"0\" class=\"close icon\"></i>\n                      <i class=\"search icon\"></i>\n                    </div>\n                  </div>\n                  <div class=\"ui grid m-0\">\n                    <div class=\"three wide column p-8\" *ngFor=\"let image of allImagesList\">\n                      <div class=\"ui card text-center common-contribution-card active\">\n                        <div class=\"content\">\n                          <img [src]=\"image?.artifactUrl\" tabindex=\"0\" (click)=\"selectLogo(image)\" rel=\"placeholder\">\n                        </div>\n                        <div *ngIf=\"image?.versionKey === selectedLogo?.versionKey\" class=\"selected-mark\"><img\n                            src=\"assets/images/checkbox-icon.svg\" width=\"24px\" height=\"24px\"></div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </section>\n            </div>\n          </div>\n\n          <div class=\"sb-modal-actions d-flex flex-jc-space-between flex-ai-center\">\n            <div class=\"d-flex flex-ai-center relative\">\n              <button class=\"sb-btn sb-btn-normal sb-btn-error mr-4\" tabindex=\"0\" (click)=\"closeModel()\">\n                {{resourceService?.frmelmnts?.btn?.cancel}}\n              </button>\n              <div class=\"or-toggle\">\n                <span>{{resourceService.frmelmnts?.lbl?.or}}</span>\n              </div>\n              <button class=\"sb-btn sb-btn-normal sb-btn-primary\" [disabled]=\"!selectedLogo\"\n                [ngClass]=\"{'sb-btn-disabled' : !selectedLogo}\" tabindex=\"0\" (click)=\"selectAndUseLogo()\">\n                {{resourceService?.frmelmnts?.lbl?.Select}}\n              </button>\n            </div>\n           <div class=\"d-flex flex-ai-center relative\">\n             <button class=\"sb-btn sb-btn-normal sb-btn-primary mr-8\" tabindex=\"0\" (click)=\"browseImages()\">\n               {{resourceService.frmelmnts?.lbl?.uploadAndUse}}\n             </button>\n             <button *ngIf=\"enableUploadSignature\" class=\"sb-btn sb-btn-normal sb-btn-primary\" tabindex=\"1\" (click)=\"showUploadSignature()\">\n               {{resourceService.frmelmnts?.lbl?.uploadSignature}}\n              </button>\n           </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </ng-template>\n</app-modal-wrapper>\n\n<app-modal-wrapper *ngIf=\"showUploadUserModal\" [config]=\"{disableClose: true, size: 'large'}\" (dismiss)=\"closeModel()\" #modal>\n  <ng-template sbModalContent>\n    <div class=\"sb-modal\">\n      <div class=\"transition ui dimmer page modals active visible\">\n        <div class=\"ui modal transition active visible large\">\n\n          <div class=\"d-flex flex-ai-center sb-modal-header\">\n            <img src=\"assets/images/upload.svg\" width=\"24px\" height=\"20px\" class=\"mr-8\">\n            {{resourceService.frmelmnts?.lbl?.uploadAndUse}}\n          </div>\n          <div class=\"sb-modal-content px-24 sb-bg-color-white\">\n            <div class=\"twelve wide column\">\n              <div class='ui stackable grid mt-0'>\n                <div class=\"six wide column\">\n                  <label>{{resourceService?.frmelmnts?.lbl?.chooseImageNote}}</label>\n                  <div class=\"choose-img-box\"><input (change)=\"fileChange($event)\"\n                      class=\"sb-btn-upload upload-btn fnormal\" name=\"file\" type=\"file\"></div>\n                  <div class=\"ui info message\">\n                    <ol class=\"ui list\">\n                      <li class=\"fsmall\">{{resourceService?.frmelmnts?.lbl?.chooseImageType}}\n                        {{imageDimensions[logoType.type]?.type}}</li>\n                      <li class=\"fsmall\">{{resourceService?.frmelmnts?.lbl?.chooseImageSize}}</li>\n                      <li class=\"fsmall\">{{resourceService?.frmelmnts?.lbl?.chooseImagedimensions}}\n                        {{imageDimensions[logoType.type]?.dimensions}}</li>\n                    </ol>\n                  </div>\n                  <div>\n                    <label>{{resourceService?.frmelmnts?.lbl?.copyrights}}<span class=\"asterik\">*</span></label>\n                    <p class=\"fsmall\">{{resourceService?.frmelmnts?.lbl?.uploadlicense}}</p>\n                  </div>\n                </div>\n                <div class=\"six wide column pl-0\">\n                  <div [formGroup]=\"uploadForm\" class=\"border-line\">\n                    <div class=\"ui info message p-16\">\n                      <div class=\"d-flex\">\n                        <img src=\"assets/images/information-icon.svg\" width=\"24px\" height=\"22px\" class=\"mr-8\">\n                        <div class=\"fsmall\" class=\"drop-img-text fsmall\">\n                          {{resourceService?.frmelmnts?.lbl?.imageDrapAndDrop}}\n                        </div>\n                      </div>\n                    </div>\n\n                    <div class=\"sb-field mb-16\">\n                      <label>{{resourceService?.frmelmnts?.lbl?.assetCaption}} <span class=\"asterik\">*</span></label>\n                      <div class=\"sb-field\">\n                        <input formControlName=\"assetCaption\" class=\"sb-form-control is-valid\"\n                          placeholder=\"Enter asset caption\">\n                      </div>\n                    </div>\n                    <div class=\"sb-field\">\n                      <label>{{resourceService?.frmelmnts?.lbl?.creator}}</label>\n                      <div class=\"sb-field\">\n                        <input formControlName=\"creator\" class=\"sb-form-control is-valid\" placeholder=\"Enter Name\">\n                      </div>\n                    </div>\n                  </div>\n\n                </div>\n              </div>\n            </div>\n\n          </div>\n          <div class=\"sb-modal-actions d-flex flex-jc-space-between flex-ai-center\">\n            <div class=\"d-flex flex-ai-center relative\">\n              <button class=\"sb-btn sb-btn-normal sb-btn-error mr-4\" (click)=\"back()\" tabindex=\"0\">\n                {{resourceService?.frmelmnts?.btn?.cancel}}\n              </button>\n              <div class=\"or-toggle\">\n                <span>{{resourceService.frmelmnts?.lbl?.or}}</span>\n              </div>\n              <button class=\"sb-btn sb-btn-normal sb-btn-primary\"\n                [ngClass]=\"{'sb-btn-disabled': (!uploadForm.valid || !fileObj)}\"\n                [disabled]=\"(!uploadForm.valid || !fileObj)\" (click)=\"upload()\">\n                {{resourceService.frmelmnts?.lbl?.uploadAndUse}}\n              </button>\n            </div>\n            <button class=\"sb-btn sb-btn-normal sb-btn-gray\" (click)=\"back()\" tabindex=\"0\">\n              {{resourceService?.frmelmnts?.btn?.back }}\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </ng-template>\n</app-modal-wrapper>","<app-modal-wrapper [config]=\"{disableClose: true, size: 'normal'}\" (dismiss)=\"closeModal()\" #modal>\n  <ng-template sbModalContent>\n    <div class=\"sb-modal\">\n      <div class=\"transition ui dimmer page modals active visible\">\n        <div class=\"ui modal transition active visible normal\">\n          <div class=\"sb-modal-header\">\n            {{resourceService?.frmelmnts?.cert?.lbl?.certPreview }}\n          </div>\n          <div class=\"sb-modal-content\">\n            <div class=\"cert-preview-img\"><img [src]=\"certTemplateURL(template?.artifactUrl)\"></div>\n          </div>\n          <div class=\"sb-modal-actions\">\n            <button class=\"sb-btn sb-btn-normal sb-btn-outline-primary\" tabindex=\"0\" (click)=\"closeModal('select')\">\n              {{resourceService?.frmelmnts?.cert?.lbl?.selectTemplate}}\n            </button>\n            <button class=\"sb-btn sb-btn-normal sb-btn-outline-primary\" tabindex=\"0\" (click)=\"closeModal()\">\n              {{resourceService?.frmelmnts?.btn?.close}}\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </ng-template>\n</app-modal-wrapper>","import { PublicPlayerService } from '@sunbird/public';\nimport {CertificateService, UserService, TenantService} from '@sunbird/core';\nimport { ServerResponse, ResourceService, ConfigService, PlayerConfig, ToasterService } from '@sunbird/shared';\nimport { Component, OnInit, ViewChild, ElementRef, OnDestroy, Inject } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport * as _ from 'lodash-es';\nimport * as dayjs from 'dayjs';\nimport { IImpressionEventInput } from '@sunbird/telemetry';\nimport { Subscription} from 'rxjs';\nimport { CsCertificateService } from '@project-sunbird/client-services/services/certificate/interface';\n\n@Component({\n  selector: 'app-certificate-details',\n  templateUrl: './certificate-details.component.html',\n  styleUrls: ['./certificate-details.component.scss']\n})\nexport class CertificateDetailsComponent implements OnInit , OnDestroy {\n  loader: boolean;\n  viewCertificate: boolean;\n  error = false;\n  enableVerifyButton = false;\n  certificateCode: string;\n  wrongCertificateCode = false;\n  instance: string;\n  telemetryImpressionData: IImpressionEventInput;\n  telemetryCdata: Array<{}> = [];\n  pageId: string;\n  playerConfig: PlayerConfig;\n  contentId: string;\n  showVideoThumbnail = true;\n  logo: string;\n  tenantName: string;\n  tenantDataSubscription: Subscription;\n\n  /** To store the certificate details data */\n  recipient: string;\n  courseName: string;\n  issuedOn: string;\n  watchVideoLink: string;\n  validateRCCertificate: boolean = false;\n  @ViewChild('codeInputField') codeInputField: ElementRef;\n  isInvalidCertificate: boolean = false;\n\n  constructor(\n    public activatedRoute: ActivatedRoute,\n    public certificateService: CertificateService,\n    public resourceService: ResourceService,\n    public configService: ConfigService,\n    public userService: UserService,\n    public playerService: PublicPlayerService,\n    public router: Router,\n    public tenantService: TenantService,\n    @Inject('CS_CERTIFICATE_SERVICE') private CsCertificateService: CsCertificateService,\n    private toasterService: ToasterService,\n  ) { }\n\n  ngOnInit() {\n    this.instance = _.upperCase(this.resourceService.instance);\n    this.pageId = this.activatedRoute.snapshot.data.telemetry.pageid;\n    if (_.get(this.activatedRoute, 'snapshot.queryParams.data')) {\n      this.validateRCCertificate = true;\n      this.validateCertificate();\n    } else if (_.get(this.activatedRoute, 'snapshot.queryParams.t')) {\n      this.validateRCCertificate = true;\n      this.validateTCertificate();\n    }\n    this.setTelemetryData();\n    this.tenantDataSubscription = this.tenantService.tenantData$.subscribe(data => {\n      if (data && !data.err && data.tenantData) {\n        this.logo = data.tenantData.logo;\n        this.tenantName = data.tenantData.titleName;\n      }\n    });\n  }\n\n  /** It will call the validate cert. api and course_details api (after taking courseId) */\n  certificateVerify() {\n    this.loader = true;\n    const request = {\n      request: {\n        'certId': this.activatedRoute.snapshot.params.uuid,\n        'accessCode': _.trim(this.certificateCode),\n        'verifySignature': true,\n      }\n    };\n    this.certificateService.validateCertificate(request).subscribe(\n      (data: ServerResponse) => {\n        if (_.get(data, 'result.response.related.certVideoUrl')) {\n          this.watchVideoLink = _.get(data, 'result.response.related.certVideoUrl');\n          this.processVideoUrl(this.watchVideoLink);\n        } else {\n          this.getCourseVideoUrl(_.get(data, 'result.response.related.courseId'));\n        }\n        const certData = _.get(data, 'result.response.json');\n        this.loader = false;\n        this.viewCertificate = true;\n        this.recipient = _.get(certData, 'recipient.name');\n        this.courseName = _.get(certData, 'badge.name');\n        this.issuedOn = dayjs(new Date(_.get(certData, 'issuedOn'))).format('DD MMM YYYY');\n      },\n      (err) => {\n        this.wrongCertificateCode = true;\n        this.loader = false;\n        this.codeInputField.nativeElement.value = '';\n        this.codeInputField.nativeElement.focus();\n        this.enableVerifyButton = false;\n      }\n    );\n  }\n  /** To handle verify button enable/disable fucntionality */\n  getCodeLength(event: any) {\n    this.wrongCertificateCode = false;\n    if (event.target.value.length === 6) {\n      this.enableVerifyButton = true;\n    } else {\n      this.enableVerifyButton = false;\n    }\n  }\n  /** To redirect to courses tab (for mobile device, they will handle 'href' change) */\n  navigateToCoursesPage() {\n    if (this.activatedRoute.snapshot.queryParams.clientId === 'android') {\n      window.location.href = '/explore-course';\n    } else {\n      this.router.navigate(['/explore-course']);\n    }\n  }\n  /** To set the telemetry*/\n  setTelemetryData() {\n    const context = { env: this.activatedRoute.snapshot.data.telemetry.env };\n    if (_.get(this.activatedRoute, 'snapshot.queryParams.clientId') === 'android' &&\n    _.get(this.activatedRoute, 'snapshot.queryParams.context')) {\n      const telemetryData = JSON.parse(decodeURIComponent(_.get(this.activatedRoute, 'snapshot.queryParams.context')));\n      context['env'] = telemetryData.env;\n    }\n    this.telemetryImpressionData = {\n      context: context,\n      edata: {\n        type: this.activatedRoute.snapshot.data.telemetry.type,\n        pageid: this.pageId,\n        uri: this.router.url\n      }\n    };\n    this.telemetryCdata = [\n      {\n        id: 'course:qrcode:scan:cert',\n        type: 'Feature'\n      },\n      {\n        id: 'SB-13854',\n        type: 'Task'\n      }\n    ];\n  }\n\n  /** to get the certtificate video url and courseId from that url */\n  getCourseVideoUrl(courseId: string) {\n    this.playerService.getCollectionHierarchy(courseId).subscribe(\n      (response: ServerResponse) => {\n        this.watchVideoLink = _.get(response, 'result.content.certVideoUrl');\n        this.processVideoUrl(this.watchVideoLink);\n      }, (error) => {\n      });\n  }\n\n  processVideoUrl(url: string) {\n    if (url) {\n      const splitedData = url.split('/');\n      splitedData.forEach((value) => {\n        if (value.includes('do_')) {\n          this.contentId = value;\n        }\n      });\n    }\n  }\n\n  /** to play content on the certificate details page */\n  playContent(contentId: string) {\n    this.showVideoThumbnail = false;\n    const option = { params: this.configService.appConfig.ContentPlayer.contentApiQueryParams };\n    this.playerService.getContent(contentId, option).subscribe(\n      (response) => {\n        const contentDetails = {\n          contentId: contentId,\n          contentData: response.result.content\n        };\n        this.playerConfig = this.playerService.getConfig(contentDetails);\n      },\n      (err) => {\n      });\n  }\n\n  ngOnDestroy() {\n    if (this.tenantDataSubscription) {\n      this.tenantDataSubscription.unsubscribe();\n    }\n  }\n\n  /**\n   * @description\n   * Function to validate certificate if URL has `data` params\n   */\n  validateCertificate() {\n    this.loader = true;\n    let url = _.get(this.activatedRoute, 'snapshot.queryParams.data').toString();\n    url = url.replace(/ /g, \"+\");\n    this.CsCertificateService\n      .getEncodedData(url)\n      .then((resp) => {\n        let requestBody = {\n          certificateData: resp,\n          schemaName: 'certificate',\n          certificateId: _.get(this.activatedRoute, 'snapshot.params.uuid'),\n        };\n        this.CsCertificateService.verifyCertificate(requestBody, {\n          apiPath: '/learner/certreg/v2',\n          apiPathLegacy: '/certreg/v1',\n          rcApiPath: '/learner/rc/${schemaName}/v1',\n        }).subscribe(\n          (data) => {\n            const certData = _.get(data, 'certificateData');\n            this.loader = false;\n            if (_.get(data, 'verified')) {\n              this.viewCertificate = true;\n              this.recipient = _.get(certData, 'issuedTo');\n              this.courseName = _.get(certData, 'trainingName');\n              this.issuedOn = dayjs(new Date(_.get(certData, 'issuanceDate'))).format('DD MMM YYYY');\n            } else {\n              this.viewCertificate = false;\n              this.isInvalidCertificate = true;\n            }\n          },\n          (err) => {\n            this.loader = false;\n            this.viewCertificate = false;\n            this.isInvalidCertificate = true;\n            this.toasterService.error(this.resourceService.messages.emsg.m0005);\n          }\n        );\n      }).catch(error => {\n        this.viewCertificate = false;\n        this.isInvalidCertificate = true;\n      });\n  }\n  /**\n   * @description\n   * Function to validate certificate if URL has `t` params\n   */\n  validateTCertificate() {\n    let requestBody = {\n      schemaName: 'certificate',\n      certificateId: _.get(this.activatedRoute, 'snapshot.params.uuid'),\n    };\n    this.CsCertificateService.verifyCertificate(requestBody, {\n      apiPath: '/learner/certreg/v2',\n      apiPathLegacy: '/certreg/v1',\n      rcApiPath: '/learner/rc/${schemaName}/v1',\n    }).subscribe(\n      (data) => {\n        const certData = _.get(data, 'certificateData');\n        this.loader = false;\n        if (_.get(data, 'verified')) {\n          this.viewCertificate = true;\n          this.recipient = _.get(certData, 'issuedTo');\n          this.courseName = _.get(certData, 'trainingName');\n          this.issuedOn = dayjs(new Date(_.get(certData, 'issuanceDate'))).format('DD MMM YYYY');\n        } else {\n          this.viewCertificate = false;\n          this.isInvalidCertificate = true;\n        }\n      },\n      (err) => {\n        this.loader = false;\n        this.toasterService.error(this.resourceService.messages.emsg.m0005);\n        this.viewCertificate = false;\n        this.isInvalidCertificate = true;\n      }\n    );\n  }\n}\n","import { Component, OnInit, ViewChild, OnDestroy } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport * as _ from 'lodash-es';\nimport { UploadCertificateService } from '../../services/upload-certificate/upload-certificate.service';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { UserService, CertRegService } from '@sunbird/core';\nimport { ToasterService, ResourceService, NavigationHelperService, LayoutService, COLUMN_TYPE } from '@sunbird/shared';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { CertConfigModel } from './../../models/cert-config-model/cert-config-model';\nimport { BrowseImagePopupComponent } from '../browse-image-popup/browse-image-popup.component';\nimport {ActivatedRoute} from '@angular/router';\nimport * as dayjs from 'dayjs';\n@Component({\n  selector: 'app-create-template',\n  templateUrl: './create-template.component.html',\n  styleUrls: ['./create-template.component.scss']\n})\nexport class CreateTemplateComponent implements OnInit, OnDestroy {\n\n  @ViewChild(BrowseImagePopupComponent)\n  public browseImage: BrowseImagePopupComponent;\n\n  public unsubscribe$ = new Subject<void>();\n  createTemplateForm: FormGroup;\n  selectStateOption: any = [];\n  selectLanguageOption: any = [];\n  selectState: any;\n  selectLanguage: any;\n  showSelectImageModal;\n  showUploadUserModal;\n  certLogos: any = [];\n  certSigns: any = [];\n  logoType;\n  // api call\n  defaultCertificates = [];\n  selectedCertificate: any = {};\n  logoHtml;\n  svgData;\n  center = 275;\n  disableCreateTemplate = true;\n  certConfigModalInstance = new CertConfigModel();\n  layoutConfiguration: any;\n  FIRST_PANEL_LAYOUT;\n  SECOND_PANEL_LAYOUT;\n  images = {\n    'LOGO1': { 'index': null, 'name' : '' , 'key': '', 'type': '', 'url': ''},\n    'LOGO2': { 'index': null, 'name' : '' , 'key': '', 'type': '', 'url': ''},\n    'SIGN1': { 'index': null, 'name' : '' , 'key': '', 'type': '', 'url': ''},\n    'SIGN2': { 'index': null, 'name' : '' , 'key': '', 'type': '', 'url': ''}\n  };\n  finalSVGurl: any;\n  classNames = {\n    'STATE_LOGOS': 'state-logo',\n    'STATE_TITLE': 'state-title',\n    'SIGN_LOGO': ['signatureImg1', 'signatureImg2'],\n    'CERT_TITLE': 'cert-title',\n    'DESIGNATIONS_NAMES': ['signatureTitle1', 'signatureTitle2'],\n    'DESIGNATIONS': ['signatureTitle1a', 'signatureTitle2a']\n  };\n  optionSing = 'SIGN2';\n  queryParams: any;\n  mode: any;\n\n  constructor(public uploadCertificateService: UploadCertificateService,\n    public userService: UserService,\n    private sanitizer: DomSanitizer,\n    private activatedRoute: ActivatedRoute,\n    private certRegService: CertRegService,\n    public toasterService: ToasterService,\n    public resourceService: ResourceService,\n    public navigationHelperService: NavigationHelperService,\n    public layoutService: LayoutService) {\n  }\n\n  ngOnInit() {\n    this.activatedRoute.queryParams.subscribe((params) => {\n      this.queryParams = params;\n      this.mode = _.get(this.queryParams, 'type');\n    });\n    this.navigationHelperService.setNavigationUrl();\n    this.initializeFormFields();\n    this.getDefaultTemplates();\n    this.layoutConfiguration = this.layoutService.initlayoutConfig();\n    this.redoLayout();\n  }\n\n  getDefaultTemplates() {\n    const request = {\n      'request': {\n          'filters': {\n              'certType': 'cert template layout',\n              'channel': this.userService.channel,\n              'mediaType': 'image'\n          },\n          'fields': ['identifier', 'name', 'code', 'certType', 'data', 'issuer', 'signatoryList', 'artifactUrl', 'primaryCategory', 'channel'],\n          'limit': 100\n      }\n    };\n    this.uploadCertificateService.getCertificates(request).subscribe(res => {\n      this.defaultCertificates = _.get(res, 'result.content');\n      this.selectedCertificate = _.clone(this.defaultCertificates[0]);\n      this.getSVGTemplate();\n    });\n  }\n\n  initializeFormFields() {\n    this.createTemplateForm = new FormGroup({\n      certificateTitle: new FormControl('', [Validators.required]),\n      stateName: new FormControl('', [Validators.required]),\n      authoritySignature_0: new FormControl('', [Validators.required]),\n      authoritySignature_1: new FormControl(''),\n      allowPermission: new FormControl('', [Validators.required])\n    });\n    // TODO: Move to a separate component this browse logic;\n    this.createTemplateForm.valueChanges.subscribe(val => {\n      this.validateForm();\n    });\n  }\n\n  validateForm() {\n    // TODO: Form validation need to improve\n    const logo = _.get(this.images, 'LOGO1.url');\n    const sign = _.get(this.images, 'SIGN1.url');\n    if (this.createTemplateForm.status === 'VALID' && _.get(this.createTemplateForm, 'value.allowPermission')\n      && logo && sign) {\n      this.disableCreateTemplate = false;\n    } else {\n      this.disableCreateTemplate = true;\n    }\n  }\n\n\n  getSVGTemplate() {\n    this.uploadCertificateService.getSvg(this.selectedCertificate.artifactUrl).then(res => {\n      const svgFile = res;\n      this.logoHtml = this.sanitizeHTML(svgFile);\n      this.previewCertificate();\n    });\n  }\n\n  ngOnDestroy() {\n    this.unsubscribe$.next();\n    this.unsubscribe$.complete();\n  }\n\n  createCertTemplate() {\n    this.validateForm();\n    // TODO: form validation need to improve\n    if (this.disableCreateTemplate) {\n      this.createTemplateForm.controls.certificateTitle.markAsTouched();\n      this.createTemplateForm.controls.stateName.markAsTouched();\n      this.createTemplateForm.controls.authoritySignature_0.markAsTouched();\n      this.createTemplateForm.controls.authoritySignature_1.markAsTouched();\n      this.createTemplateForm.controls.allowPermission.markAsTouched();\n    } else {\n      this.previewCertificate();\n      setTimeout(() => {\n        const channel = this.userService.channel;\n        const request = this.certConfigModalInstance.prepareCreateAssetRequest(_.get(this.createTemplateForm, 'value'), channel, this.selectedCertificate, this.images);\n        this.disableCreateTemplate = true;\n        this.uploadCertificateService.createCertTemplate(request).subscribe(response => {\n          const assetId = _.get(response, 'result.identifier');\n          this.uploadTemplate(this.finalSVGurl, assetId);\n        }, error => {\n          this.toasterService.error('Something went wrong, please try again later');\n        });\n      }, 1000);\n    }\n  }\n\n  uploadTemplate(base64Url, identifier) {\n    this.uploadCertificateService.storeAsset(base64Url, identifier).subscribe(response => {\n      this.toasterService.success(_.get(this.resourceService, 'frmelmnts.cert.lbl.certAddSuccess'));\n      const templateIdentifier = {'identifier': _.get(response , 'result.identifier')};\n      this.uploadCertificateService.certificate.next(templateIdentifier);\n      this.navigationHelperService.navigateToLastUrl();\n    }, error => {\n      this.toasterService.error('Something went wrong, please try again later');\n      console.log('error', error);\n    });\n  }\n\n  assetData(data) {\n    if (data.key === this.optionSing) {\n      this.createTemplateForm.get('authoritySignature_1').setValidators([Validators.required]);\n      this.createTemplateForm.get('authoritySignature_1').updateValueAndValidity();\n    }\n    this.images[data.key] = data;\n    this.validateForm();\n  }\n\n  close() {\n    this.showSelectImageModal = false;\n    this.showUploadUserModal = false;\n  }\n\n  removeImage(key) {\n    if (key === 'SIGN2') {\n      this.createTemplateForm.get('authoritySignature_1').clearValidators();\n      this.createTemplateForm.get('authoritySignature_1').updateValueAndValidity();\n    }\n    this.images[key] = {};\n    this.validateForm();\n  }\n\n  openSateLogos(type) {\n    this.logoType = type;\n    this.showSelectImageModal = true;\n    this.browseImage.getAssetList();\n  }\n\n  openSignLogos(type) {\n    this.logoType = type;\n    this.showSelectImageModal = false;\n    this.showUploadUserModal = true;\n    // this.browseImage.getAssetList();\n  }\n\n  chooseCertificate(certificate) {\n    this.logoHtml = null;\n    this.selectedCertificate = _.clone(certificate);\n    this.getSVGTemplate();\n  }\n\n  convertHtml(tag) {\n    if (tag) {\n      const html = tag.toString();\n      return new DOMParser().parseFromString(html, 'text/html');\n    }\n  }\n\n  previewCertificate() {\n    this.svgData = this.convertHtml(this.logoHtml);\n    const stateLogos = this.svgData.getElementsByClassName(this.classNames.STATE_LOGOS);\n    const digitalSigns = this.classNames.SIGN_LOGO.map(id => this.svgData.getElementById(id));\n    this.updateTitles();\n    this.updateStateLogos(stateLogos);\n    this.updateSigns(digitalSigns);\n  }\n\n  updateTitles() {\n    const certTitle = this.svgData.getElementsByClassName(this.classNames.CERT_TITLE);\n    certTitle[0].innerHTML = this.createTemplateForm.controls.certificateTitle.value;\n    const stateTitle = this.svgData.getElementsByClassName(this.classNames.STATE_TITLE);\n    stateTitle[0].innerHTML = this.createTemplateForm.controls.stateName.value;\n    this.classNames.DESIGNATIONS_NAMES.forEach((id, index) => {\n      const designation_html = this.svgData.getElementById(id);\n      if (designation_html) {\n        const title = this.createTemplateForm.get(`authoritySignature_${index}`).value;\n        designation_html.innerHTML = title;\n      }\n    });\n  }\n\n  updateStateLogos(stateLogos) {\n    const logosArray = Object.values(this.images).filter(x => !_.isEmpty(x) && x['type'] === 'LOGO');\n    this.editSVG(logosArray, stateLogos).then(res => {\n      this.certificateCreation(this.svgData?.getElementsByTagName('svg')[0]);\n    });\n  }\n\n  updateSigns(stateLogos) {\n    const logosArray = Object.values(this.images).filter(x => !_.isEmpty(x) && x['type'] === 'SIGN');\n    this.editSVG(logosArray, stateLogos).then(res => {\n      this.certificateCreation(this.svgData?.getElementsByTagName('svg')[0]);\n    });\n  }\n\n  editSVG(logosArray, stateLogos) {\n    return new Promise(async (resolve, reject) => {\n      for (let i = 0; i < logosArray.length; i++) {\n        const logo = logosArray[i];\n        if (logo) {\n          const res = await this.toDataURL(logo);\n\n          if (res && !_.isEmpty(stateLogos) && stateLogos[i]) {\n            stateLogos[i].setAttribute('xlink:href', res['url']);\n          }\n          if (i === (logosArray.length - 1)) {\n            resolve();\n          }\n        }\n      }\n    });\n  }\n\n  toDataURL(image) {\n    return fetch(image.url, {\n      method: 'GET',\n      mode: 'cors',\n      cache: 'no-cache',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    })\n      .then(response => response.blob())\n      .then(blob => new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onloadend = () => resolve({ url: reader.result, type: image.type });\n        reader.onerror = reject;\n        reader.readAsDataURL(blob);\n      }));\n  }\n\nurltoFile(url, filename, mimeType) {\n  return (fetch(url)\n      .then((res) => {\n        return res.arrayBuffer();\n      })\n      .then((buf) => {\n        return new File([buf], filename, {type: mimeType});\n      })\n  );\n}\n\n  certificateCreation(ev) {\n   const dataURL  = this.getBase64Data(ev);\n    this.selectedCertificate['artifactUrl'] = this.sanitizer.bypassSecurityTrustResourceUrl(dataURL);\n    this.urltoFile(dataURL, `certificate_${dayjs().format('YYYY-MM-DD_HH_mm')}.svg`, 'image/svg+xml')\n    .then((file) => {\n      this.finalSVGurl = file;\n    });\n  }\n\n\n  sanitizeHTML(html) {\n    return this.sanitizer.bypassSecurityTrustHtml(html);\n  }\n\n  getImagePath() {\n    if (this.selectedCertificate) {\n      return this.selectedCertificate.artifactUrl;\n    }\n  }\n  getBase64Data(ev) {\n    const div = document?.createElement('div');\n    div?.appendChild(ev?.cloneNode(true));\n    const b64 = 'data:image/svg+xml;base64,' + window.btoa(div.innerHTML);\n    return b64;\n  }\n\n  back() {\n    this.uploadCertificateService.certificate.next(null);\n    this.navigationHelperService.navigateToLastUrl();\n  }\n  redoLayout() {\n    if (this.layoutConfiguration != null) {\n      this.FIRST_PANEL_LAYOUT = this.layoutService.redoLayoutCSS(0, this.layoutConfiguration, COLUMN_TYPE.threeToNine);\n      this.SECOND_PANEL_LAYOUT = this.layoutService.redoLayoutCSS(1, this.layoutConfiguration, COLUMN_TYPE.threeToNine);\n    } else {\n      this.FIRST_PANEL_LAYOUT = this.layoutService.redoLayoutCSS(0, null, COLUMN_TYPE.fullLayout);\n      this.SECOND_PANEL_LAYOUT = this.layoutService.redoLayoutCSS(1, null, COLUMN_TYPE.fullLayout);\n    }\n  }\n}","<!-- Loader -->\n<div class=\"two wide column\" *ngIf=\"showLoader\">\n  <app-loader></app-loader>\n</div>\n<!-- /Loader-->\n<div [ngClass]=\"layoutConfiguration ? 'sbt-inside-page-container' : ''\">\n\n  <div *ngIf=\"!showLoader\">\n    <!-- Header -->\n    <div class=\"sb-bg-color-white relative position back-btn-container cc-player__btn-back relative9\">\n      <div class=\"ui container\">\n        <div class=\"py-8 d-flex flex-ai-center\">\n          <button class=\"sb-btn sb-btn-normal sb-btn-link sb-btn-link-primary sb-left-icon-btn mr-auto\" id=\"goBack\"\n            type=\"button\" tabindex=\"0\" (click)=\"goBack()\">\n            <i class=\"icon-svg icon-svg--xxs icon-back mr-4\">\n              <svg class=\"icon icon-svg--primary\">\n                <use xlink:href=\"assets/images/sprite.svg#arrow-long-left\"></use>\n              </svg></i>\n            {{resourceService?.frmelmnts?.btn?.back}}\n          </button>\n          <div class=\"d-flex flex-ai-center\">\n            <!---->\n            <!---->\n            <!---->\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"textbook-container cc-player__content-header relative9\">\n      <div class=\"ui container\">\n        <div class=\"textbook py-16 sb-g cc-player\">\n          <div class=\"sb-g-col-xs-12 sb-g-col-md-9 sb-g-col-lg-9 sb-g-col-xxxl-12\">\n            <!-- Textbook details -->\n            <div class=\"textbook__details d-flex flex-ai-center\">\n              <!-- Textbook image -->\n              <div class=\"textbook__bookimg\">\n                <img src=\"{{courseDetails?.appIcon}}\" alt=\"textbook\">\n              </div>\n              <div class=\"ml-8 textbook__heading\">\n                <!-- Textbook title -->\n                <div class=\"textbook__title sb-color-primary font-weight-bold mb-0\" tabindex=\"0\">{{courseDetails?.name}}\n                </div>\n                <div class=\"fs-1 pt-8\">{{courseDetails?.contentType}}</div>\n              </div>\n            </div>\n          </div>\n          <div class=\"sb-g-col-xs-12 sb-g-col-md-3 sb-g-col-lg-3 sb-g-col-xxxl-4 certified-course\">\n            <div class=\"ml-auto text-right mt-8\">\n              <!-- <button class=\"sb-btn sb-btn-primary sb-btn-normal px-24\">\n            Save Configuration\n          </button> -->\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <!-- / Header-->\n\n    <!-- first screen -->\n    <div class=\"certificate-container py-16 cc-player__content-header relative9\"\n      *ngIf=\"currentState === screenStates.default\">\n      <div class=\"ui container\">\n        <div class=\"ui stackable grid m-0\">\n          <div class=\"four wide column\">\n            <div class=\"certificate-sidebar p-24 certificate-bg\">\n              <div class=\"select-template-container d-flex flex-dc mb-16\">\n                <div class=\"certificates-label pb-24 font-weight-bold text-left\">\n                  {{resourceService?.frmelmnts?.cert?.lbl?.configure}}</div>\n                <div class=\"certificate-scrollbar\">\n                  <div class=\"certificate-sbcard mb-16 py-16\">\n                    <div class=\"d-flex flex-ai-center flex-jc-space-between\">\n                      <div class=\"certificate-card-title sb__ellipsis sb__ellipsis--three px-16\">{{courseDetails?.name}}\n                      </div>\n                      <div class=\"d-flex flex-ai-center\">\n                        <div class=\"certificate-card-img px-16\">\n                          <img src=\"assets/images/certificate-icon.png\" width=\"25px\" height=\"20px\"\n                            alt=\"certificate-icon\" />\n                        </div>\n                        <div class=\"border-right\"></div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"eight wide column\">\n            <div *ngIf=\"!selectedTemplate\" class=\"select-template-content p-24\">\n              <div class=\"d-flex flex-dc flex-ai-center text-center mt-32\">\n                <div><img src=\"../../assets/images/addcertificate.png\" alt=\"add certificate \"></div>\n                <p class=\"no-template-text pt-16 pb-24 mb-0\">{{resourceService?.frmelmnts?.cert?.lbl?.noCertificate}}\n                  <b>{{resourceService?.frmelmnts?.cert?.lbl?.addCert }}</b>\n                  {{ resourceService?.frmelmnts?.cert?.lbl?.button}}\n                </p>\n                <button type=\"button\" id=\"addNewCert\" tabindex=\"0\" (click)=\"certificateCreation()\"\n                  class=\"sb-btn sb-btn-normal sb-btn-outline-primary px-24\">\n                  {{resourceService?.frmelmnts?.cert?.lbl?.addCert }}\n                  <img src=\"assets/images/plus-icon.svg\" alt=\" Add certificate \" width=\"8px\"\n                    class=\"ml-4 plus-icon\"></button>\n              </div>\n            </div>\n            <div *ngIf=\"selectedTemplate\" class=\"certificate-edit-content p-24\">\n              <div class=\"content\">\n                <div class=\"fnormal pb-24 font-weight-bold text-left\">\n                  {{resourceService?.frmelmnts?.cert?.lbl?.certificate}}</div>\n                <div class=\"certificate-edit-area\">\n                  <div class=\"certificate-edit-sbcard\">\n                    <div class=\"d-flex flex-ai-center flex-dc p-16 certificate-edit-sbcard-content\">\n                      <div class=\"certificate-frame\">\n                        <div *ngIf=\"certEditable\"><img src=\"{{previewUrl}}\" alt=\"certificate edit\"></div>\n                        <div *ngIf=\"!certEditable\"\n                          class=\"d-flex flex-jc-center flex-dc p-24 fnormal text-center sb-color-error w-100 no-cert\">\n                          <h3>{{resourceService?.frmelmnts?.cert?.lbl?.noEditAction}}</h3>\n                        </div>\n                      </div>\n                    </div>\n                    <div class=\"d-flex flex-ai-center flex-jc-space-between w-100 pt-16\">\n                      <div class=\"d-flex flex-ai-center ml-auto d-flex\">\n                        <button type=\"button\" [ngClass]=\"{'sb-btn-disabled': !certEditable }\" [disabled]=\"!certEditable\"\n                          (click)=\"editCertificate()\" tabindex=\"0\"\n                          class=\"sb-btn sb-btn-primary sb-btn-normal\">{{resourceService?.frmelmnts?.lbl?.edit}}</button>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- second screen -->\n    <div class=\"certificate-container py-16 cc-player__content-header relative9\"\n      *ngIf=\"currentState === screenStates.certRules\">\n      <div class=\"ui container\">\n        <div class=\"sb-g\">\n          <div class=\"sb-g-col-xs-12 sb-g-col-md-8 sb-g-col-lg-8 sb-g-col-xxxl-12 certificate-bg\">\n            <div class=\"certificate-content-area p-24\">\n              <form [formGroup]=\"userPreference\">\n                <div class='ui stackable grid mt-0'>\n                  <div class=\"five wide column pt-0\">\n                    <div *ngIf=\"configurationMode === 'add'\" class=\"pb-24 font-weight-bold certificates-label\">\n                      {{resourceService?.frmelmnts?.cert?.lbl?.addCert}}</div>\n                    <div *ngIf=\"configurationMode === 'edit'\" class=\"pb-24 font-weight-bold certificates-label\">\n                      {{resourceService?.frmelmnts?.cert?.lbl?.editCert}}</div>\n                  </div>\n                </div>\n\n                <div class='ui stackable grid mt-0'>\n                  <div class=\"seven wide column\">\n                    <div class=\"pt-8 pb-16 font-weight-bold fnormal text-left\">\n                      {{resourceService?.frmelmnts?.cert?.lbl?.certRules}}</div>\n                    <div class=\"d-flex flex-dc w-50\">\n                        <mat-form-field appearance=\"fill\" class=\"sb-mat__dropdown w-100 mb-16\">\n                          <mat-label>{{resourceService?.frmelmnts?.cert?.lbl?.issueTo}}</mat-label>\n                          <mat-select formControlName=\"issueTo\" role=\"listbox\" aria-label=\"resourceService?.frmelmnts?.cert?.lbl?.issueTo\"\n                            class=\"selection\" [disabled]=\"configurationMode === 'edit'\" (selectionChange)=\"handleParameterChange($event)\">\n                            <mat-option class=\"mat-dropdown__options\" role=\"option\" *ngFor=\"let option of issueTo\" [value]=\"option.name\"\n                            attr.aria-label=\"{{option.name}}\">{{option.name}}</mat-option>\n                          </mat-select>\n                        </mat-form-field>\n                    </div>\n                    <label class=\"fnormal font-weight-normal text-left\"\n                      *ngIf=\"isStateCertificate\">{{resourceService?.frmelmnts?.intxt?.ssousers |\n                      interpolate:'{instance}': instance}}</label>\n                  </div>\n                </div>\n\n                <hr class=\"mt-16 mb-24\">\n\n                <div class=\"ui stackable grid mt-0\">\n                  <div class=\"twelve wide column pt-0\">\n                    <div class=\"d-flex rules-configuration px-16\">\n                      <label\n                        class=\"d-flex flex-ai-center fnormal font-weight-normal mb-0 py-8\">{{resourceService?.frmelmnts?.lbl?.addCertificateprogressrule}}</label>\n                      <div class=\"mx-24 progress-separator\"></div>\n                      <div class=\"py-16 d-flex flex-wrap rules-form-content\">\n                        <div class=\"mr-16 sb-field-group\">\n                          <div class=\"sb-field\">\n                            <input class=\"sb-form-control fnormal font-weight-bold\" type=\"text\" placeholder=\"100%\"\n                              value=\"100%\" readonly=true>\n                          </div>\n                          <p class=\"font-weight-normal fsmall mb-0 completion-text\">\n                            <span class=\"asterik\">*</span>\n                            {{resourceService?.frmelmnts?.lbl?.addCertificateText}}\n                          </p>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"progess-add-content\" *ngIf=\"isSingleAssessment\">\n                  <div class=\"left-border\"></div>\n                  <button type=\"button\" class=\"add-score-btn py-8 px-16 fsmall font-weight-bold\"\n                    *ngIf=\"addScoreRule\">And</button>\n                  <button type=\"button\" class=\"d-flex flex-ai-center flex-jc-center plus-btn\" *ngIf=\"!addScoreRule\"\n                    tabindex=\"0\" (click)=\"addRule()\"><img src=\"assets/images/plus-icon.svg\"></button>\n                  <div class=\"left-border\" *ngIf=\"addScoreRule\"></div>\n                </div>\n\n                <div class=\"ui stackable grid mt-0\" *ngIf=\"addScoreRule && isSingleAssessment\">\n                  <div class=\"twelve wide column pt-0\">\n                    <div class=\"d-flex rules-configuration px-16\">\n                      <label\n                        class=\"d-flex flex-ai-center fnormal font-weight-normal mb-0 py-8\">{{resourceService?.frmelmnts?.lbl?.addCertificatescorerule}}</label>\n                      <div class=\"mx-24 progress-separator\"></div>\n                      <div class=\"py-16 d-flex flex-dc rules-form-content my-16\">\n                        <div class=\"ui stackable grid mt-0 sb-field-group\">\n                          <div class=\"five wide column sb-field mb-0\">\n                            <input class=\"sb-form-control fnormal font-weight-bold\" type=\"text\"\n                              placeholder=\"Best attempt score\"\n                              value=\"{{resourceService?.frmelmnts?.lbl?.bestScoreattempt}}\" readonly=\"true\">\n                          </div>\n                          <div class=\"three wide fnormal column mt-5\">\n                            {{resourceService?.frmelmnts?.lbl?.addCertificategreaterThan}}</div>\n                          <div class=\"four wide column sb-field mb-0\">\n                            <sui-select class=\"selection form-control\" [placeholder]=\"'Select'\"\n                              formControlName=\"scoreRange\" [options]=\"scoreRange\" #selectScoreRange>\n                              <sui-select-option *ngFor=\"let option of arrayValue['range']\" [value]=\"option + '%'\">\n                              </sui-select-option>\n                            </sui-select>\n                          </div>\n                          <p class=\"font-weight-normal fsmall mb-0 completion-text\">\n                            <span class=\"asterik\">*</span>\n                            {{resourceService?.frmelmnts?.lbl?.addCertificateText}}\n                          </p>\n                        </div>\n                      </div>\n                      <div class=\"close-score\" tabindex=\"0\" (click)=\"removeRule()\"><img src=\"assets/images/close.svg\">\n                      </div>\n                    </div>\n                  </div>\n                </div>\n\n                <div class='ui stackable grid mt-0'>\n                  <div class=\"twelve wide column\">\n                    <div class=\"sb-checkbox sb-checkbox-secondary pt-24\">\n                      <input formControlName=\"allowPermission\" value=\"true\" type=\"checkbox\" id=\"check2\" name=\"selected\">\n                      <label for=\"check2\" class=\"text-left\">{{resourceService?.frmelmnts?.cert?.lbl?.verified}}</label>\n                    </div>\n                  </div>\n                </div>\n              </form>\n            </div>\n            <div *ngIf=\"selectedTemplate\">\n              <div class=\"certificate-edit-area\">\n                <div class=\"certificate-edit-sbcard\">\n                  <div class=\"d-flex flex-dc p-16 certificate-edit-sbcard-content\">\n                    <div class=\"certificate-frame\">\n                      <div><img src=\"{{selectedTemplate?.artifactUrl || selectedTemplate?.previewUrl}}\"\n                          alt=\"certificate edit\"></div>\n                    </div>\n                    <div class=\"d-flex flex-ai-center flex-jc-space-between w-100 pt-16\">\n                      <div class=\"d-flex flex-ai-center ml-auto d-flex\">\n                        <button type=\"button\" (click)=\"removeSelectedCertificate()\" tabindex=\"0\"\n                          class=\"sb-btn sb-btn-primary sb-btn-normal\">{{resourceService?.frmelmnts?.btn?.remove}}</button>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <!-- Side panel of cert-templates -->\n          <div class=\"sb-g-col-xs-12 sb-g-col-md-4 sb-g-col-lg-4 sb-g-col-xxxl-4\">\n            <div class=\"select-template-content sb-bg-color-white p-24 certificate-bg\">\n              <div class=\"select-template-container mb-16\">\n                <div class=\"d-flex flex-ai-center text-left flex-jc-space-between\">\n                  <label class=\"certificates-label\">{{resourceService?.frmelmnts?.cert?.lbl?.templates}}</label>\n                  <button\n                    class=\"add-new-template-btn sb-btn sb-btn-normal sb-btn-outline-primary sb-left-icon-btn font-weight-bold\"\n                    type=\"button\" (click)=\"navigateToCreateTemplate()\" tabindex=\"0\">\n                    <i\n                      class=\"plus alternate outline icon\"></i>{{resourceService?.frmelmnts?.cert?.btn?.createtemp}}</button>\n                </div>\n                <div class=\"d-flex flex-ai-center text-left flex-jc-space-between\">\n                  <label class=\"font-weight-normal fsmall\">{{resourceService?.frmelmnts?.cert?.lbl?.certNote}}</label>\n                  <button (click)=\"refreshData()\" class=\"sb-btn sb-btn-normal sb-btn-outline-primary my-16\"\n                    tabindex=\"0\">\n                    {{resourceService?.frmelmnts?.cert?.btn?.refresh}}\n                  </button>\n                </div>\n                <div *ngIf=\"certTemplateList\" class=\"certificate-scrollbar\">\n                  <div *ngFor=\"let template of certTemplateList\">\n                    <sb-certificate-actions [preview]=\"config?.preview\"\n                      [isSelectedTemplate]=\"selectedTemplate?.identifier === template?.identifier && !showPreviewModal\"\n                      [template]=\"template?.artifactUrl\" (buttonClick)=\"handleCertificateEvent($event, template)\">\n                    </sb-certificate-actions>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div *ngIf=\"currentState === screenStates.certRules\">\n        <div class=\"ui stackable grid m-0\">\n          <div class=\"twelve wide column px-0\">\n            <div class=\"d-flex flex-ai-center flex-jc-flex-end sb-bg-color-white p-24\">\n              <button class=\"sb-btn sb-btn-normal sb-btn-outline-primary\" tabindex=\"0\"\n                (click)=\"cancelSelection()\">{{resourceService?.frmelmnts?.btn?.cancel}}</button>\n              <button [ngClass]=\"{'sb-btn-disabled': disableAddCertificate }\" *ngIf=\"configurationMode === 'add'\"\n                [disabled]=\"disableAddCertificate\" tabindex=\"0\" class=\"sb-btn sb-btn-normal sb-btn-primary ml-8 px-24\"\n                (click)=\"attachCertificateToBatch()\">{{resourceService?.frmelmnts?.cert?.lbl?.addCert}}</button>\n              <button id=\"update-certificate\" [ngClass]=\"{'sb-btn-disabled': disableAddCertificate }\"\n                *ngIf=\"configurationMode === 'edit'\" [disabled]=\"disableAddCertificate\"\n                class=\"sb-btn sb-btn-normal sb-btn-primary ml-8 px-24\" tabindex=\"0\"\n                (click)=\"updateCertificate()\">{{resourceService?.frmelmnts?.cert?.lbl?.updateCert}}</button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n  </div>\n\n</div>\n\n\n<app-cert-preview-popup *ngIf=\"showPreviewModal\" (close)=\"closeModal($event)\" [template]=\"previewTemplate\">\n</app-cert-preview-popup>\n\n<!-- footer certificate -->\n<app-modal-wrapper *ngIf=\"isTemplateChanged\" [config]=\"{disableClose: true, size: 'normal'}\"\n  (dismiss)=\"closeTemplateDetectModal()\" #templateChangeModal>\n  <ng-template sbModalContent>\n    <div class=\"sb-modal\">\n      <div class=\"transition ui dimmer page modals active visible\">\n        <div class=\"ui modal transition active visible normal\">\n\n          <div class=\"sb-modal-header\">\n            {{resourceService?.frmelmnts?.cert?.lbl?.changeDetected}}\n          </div>\n          <div class=\"sb-modal-content\">\n            <div class=\"ui stackable grid mt-16 mb-8\">\n              <div class=\"two wide column p-0\">\n                <div class=\"checkbox-img\"></div>\n              </div>\n              <div class=\"nine wide column p-0\">\n                <p class=\"fnormal\">{{resourceService?.frmelmnts?.cert?.lbl?.templateChange}}</p>\n              </div>\n            </div>\n          </div>\n          <div class=\"sb-modal-actions\">\n            <button (click)=\"attachCertificateToBatch()\" tabindex=\"0\" class=\"sb-btn sb-btn-normal sb-btn-primary\">\n              {{resourceService?.frmelmnts?.lbl?.continue}}\n            </button>\n            <button (click)=\"closeTemplateDetectModal()\" tabindex=\"0\"\n              class=\"sb-btn sb-btn-normal sb-btn-outline-primary\">\n              {{resourceService?.frmelmnts?.btn?.cancel}}\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </ng-template>\n</app-modal-wrapper>\n\n<app-modal-wrapper *ngIf=\"showAlertModal\" [config]=\"{disableClose: true, size: 'small'}\"\n  (dismiss)=\"showAlertModal = false\" #modal>\n  <ng-template sbModalContent>\n    <div class=\"sb-modal\">\n      <div class=\"transition ui dimmer page modals active visible\">\n        <div class=\"ui modal transition active visible small\">\n          <button aria-label=\"close dialog\" mat-dialog-close class=\"mat-close-btn\">\n            <span>&times;</span>\n          </button>\n          <div class=\"sb-modal-header\">\n            {{resourceService?.frmelmnts?.cert?.lbl?.alertHeader}}\n          </div>\n          <div class=\"sb-modal-content\">\n            <div class=\"ui center aligned segment text-left\">\n              <p>{{resourceService?.frmelmnts?.cert?.imsg?.alertMessageForCert}}</p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </ng-template>\n</app-modal-wrapper>","import { Component, OnInit, Input, Output, EventEmitter, ViewChild, HostListener } from '@angular/core';\nimport { ResourceService } from '@sunbird/shared';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Component({\n  selector: 'app-cert-preview-popup',\n  templateUrl: './cert-preview-popup.component.html',\n  styleUrls: ['./cert-preview-popup.component.scss']\n})\nexport class CertPreviewPopupComponent implements OnInit {\n\n  @Input() template;\n  @Output() close = new EventEmitter();\n  @ViewChild('modal') modal;\n\n  constructor(public resourceService: ResourceService,\n    private sanitizer: DomSanitizer) { }\n\n  @HostListener('window:popstate', ['$event'])\n  onPopState(event) {\n   this.modal.deny();\n  }\n\n  ngOnInit() {\n  }\n\n  closeModal(name?) {\n    if (this.modal) {\n      this.modal.deny();\n    }\n    this.close.emit({name, template: this.template});\n  }\n\n  certTemplateURL(url) {\n    if (url) {\n      return this.sanitizer.bypassSecurityTrustResourceUrl(url);\n    }\n  }\n}\n","<div *ngIf='svgContent' id='templateSvg' [innerHTML]='svgContent'></div>","import { SharedFeatureModule } from '@sunbird/shared-feature';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CertificateRoutingModule } from './certificate-routing.module';\nimport { SuiModalModule, SuiSelectModule, SuiDropdownModule, SuiPopupModule } from 'ng2-semantic-ui-v9';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { SharedModule } from '@sunbird/shared';\nimport { TelemetryModule } from '@sunbird/telemetry';\nimport { PlayerHelperModule } from '@sunbird/player-helper';\nimport { CertificateConfigurationComponent, CertificateDetailsComponent, CreateTemplateComponent, SvgEditorComponent } from './components';\nimport { CommonConsumptionModule } from '@project-sunbird/common-consumption-v9';\nimport { BrowseImagePopupComponent } from './components/browse-image-popup/browse-image-popup.component';\nimport { SvgEditorModule } from 'ng-svg-editor';\nimport { CsModule } from '@project-sunbird/client-services';\nimport { CsLibInitializerService } from '../../service/CsLibInitializer/cs-lib-initializer.service';\n\nexport const csCertificateServiceFactory = (csLibInitializerService: CsLibInitializerService) => {\n  if (!CsModule.instance.isInitialised) {\n    csLibInitializerService.initializeCs();\n  }\n  return CsModule.instance.certificateService;\n};\n\n@NgModule({\n  declarations: [\n    CertificateDetailsComponent,\n    CertificateConfigurationComponent,\n    CreateTemplateComponent,\n    SvgEditorComponent,\n    BrowseImagePopupComponent\n  ],\n  imports: [\n    CommonModule,\n    SuiModalModule,\n    CertificateRoutingModule,\n    FormsModule,\n    SharedModule,\n    TelemetryModule,\n    PlayerHelperModule,\n    SuiSelectModule,\n    SuiDropdownModule,\n    SuiPopupModule,\n    ReactiveFormsModule,\n    CommonConsumptionModule,\n    SvgEditorModule,\n    SharedFeatureModule\n  ],\n  providers: [{ provide: 'CS_CERTIFICATE_SERVICE', useFactory: csCertificateServiceFactory, deps: [CsLibInitializerService] }]\n})\nexport class CertificateModule { }\n"],"sourceRoot":"webpack:///"}