{"version":3,"file":"static/js/5498.5b3ae2e3.chunk.js","mappings":"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","sources":["App.js","pages/ComingSoon.js","pages/Flash.js","pages/Login.js","pages/MobileNumberScreen.js","pages/OTP.js","pages/Onboarding.js","pages/OnboardingFill.js","pages/Signup.js","pages/StudentLogin.js","../node_modules/react/jsx-runtime.js"],"sourcesContent":["import React from \"react\";\nimport \"./App.css\";\nimport Login from \"pages/Login\";\nimport Signup from \"pages/Signup\";\nimport MobileNumberScreen from \"pages/MobileNumberScreen\";\nimport OTP from \"pages/OTP\";\nimport Onboarding from \"pages/Onboarding\";\nimport OnboardingFill from \"pages/OnboardingFill\";\nimport ComingSoon from \"pages/ComingSoon\";\nimport StudentLogin from \"pages/StudentLogin\";\nimport Flash from \"pages/Flash\";\nimport { extendTheme, NativeBaseProvider } from \"native-base\";\n\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\nimport { DEFAULT_THEME, initializeI18n } from \"@shiksha/common-lib\";\n\nconst theme = extendTheme(DEFAULT_THEME);\n\nfunction App() {\n  initializeI18n(\n    [\"studentApp\"],\n    `${process.env.PUBLIC_URL}/locales/{{lng}}/{{ns}}.json`\n  );\n  return (\n    <NativeBaseProvider theme={theme}>\n      <Router basename={process.env.PUBLIC_URL}>\n        <Routes>\n          <Route path=\"/\" element={<StudentLogin />} />\n          <Route path=\"/signup\" element={<Signup />} />\n          <Route path=\"/mobilenumberscreen\" element={<MobileNumberScreen />} />\n          <Route path=\"/otp\" element={<OTP />} />\n          <Route path=\"/onboarding\" element={<Onboarding />} />\n          <Route path=\"/comingsoon/:title\" element={<ComingSoon />} />\n\n          <Route path=\"/onboardingimprove\" element={<OnboardingFill />} />\n        </Routes>\n      </Router>\n    </NativeBaseProvider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport { Box, Stack, VStack, HStack, Avatar, Center } from \"native-base\";\nimport {\n  capture,\n  Layout,\n  NameTag,\n  Heading,\n  useWindowSize,\n  IconByName,\n} from \"@shiksha/common-lib\";\nimport { useTranslation } from \"react-i18next\";\nimport { useParams, useLocation } from \"react-router-dom\";\nimport manifest from \"../manifest.json\";\n\nfunction CommingSoon({ footerLinks }) {\n  const [width, Height] = useWindowSize();\n  const params = useParams();\n  let location = useLocation();\n  const { t } = useTranslation();\n  const Title =\n    params[\"title\"] == \"ScoreCard\"\n      ? \"Score Card\"\n      : location.pathname.split(\"/\")[1];\n\n  React.useEffect(() => {\n    capture(\"PAGE\");\n  }, []);\n\n  return (\n    <Layout\n      _header={{\n        title: t(\"SETTING\"),\n      }}\n      _appBar={{\n        languages: manifest.languages,\n        isLanguageIcon: true,\n        isShowNotificationButton: false,\n        titleComponent: <NameTag />,\n        LeftIcon: (\n          <HStack>\n            <img\n              width={\"100px\"}\n              src={require(\"../../src/assets/TSHeader.png\")}\n            />\n          </HStack>\n        ),\n      }}\n      _footer={footerLinks}\n    >\n      <Box>\n        <Center width={width}>\n          <VStack space=\"\">\n            <Box>\n              <Heading>{t(\"COMING_SOON\")}</Heading>\n            </Box>\n            <VStack space={2} pt={\"25px\"} pb={\"25px\"}>\n              <Center>\n                <div\n                  style={{\n                    padding: \"35px\",\n                    border: \"2px dashed #6461D2\",\n                    borderRadius: \"100px\",\n                  }}\n                >\n                  <IconByName\n                    name=\"ToolsFillIcon\"\n                    isDisabled={true}\n                    _icon={{\n                      size: 70,\n                    }}\n                    rounded=\"full\"\n                  />\n                </div>\n              </Center>\n            </VStack>\n            <VStack>\n              <Center>\n                <HStack space={\"2\"}></HStack>\n              </Center>\n            </VStack>\n          </VStack>\n        </Center>\n      </Box>\n    </Layout>\n  );\n}\nexport default CommingSoon;\n","import React, { useState } from \"react\";\nimport {\n  HStack,\n  Button,\n  Box,\n  VStack,\n  Center,\n  Image,\n  Avatar,\n  Divider,\n} from \"native-base\";\nimport { useTranslation } from \"react-i18next\";\nimport manifest from \"../manifest\";\nimport { overrideColorTheme, Layout } from \"@shiksha/common-lib\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst colors = overrideColorTheme();\n\nexport default function Flash() {\n  const { t } = useTranslation();\n  const navigate = useNavigate();\n\n  const handleLogin = async (val) => {\n    if (val === \"register\") {\n      navigate(\"/signup\");\n    }\n    if (val === \"login\") {\n      navigate(\"/login\");\n    }\n  };\n\n  return (\n    <Layout\n      _width={\"100%\"}\n      _appBar={{\n        languages: manifest.languages,\n        isBackButtonShow: false,\n        isHideMenuButton: true,\n        imageUrl: \"../../src/assets/SubjectBg.png\",\n        LeftIcon: (\n          <HStack width={\"65px\"}>\n            <Avatar\n              size=\"37\"\n              width={\"100%\"}\n              rounded=\"md\"\n              style={{ borderRadius: \"0px\" }}\n              source={require(\"../../src/assets/image2.png\")}\n            />\n            <Divider\n              width={\"1.62px\"}\n              height={\"35.75px\"}\n              bg={\"#41C88E\"}\n              order={\"0\"}\n              ml={\"5px\"}\n            />\n            <Avatar\n              bg=\"\"\n              size=\"37\"\n              rounded=\"md\"\n              style={{ borderRadius: \"0px\" }}\n              source={require(\"../../src/assets/Ellipse.png\")}\n            />\n          </HStack>\n        ),\n\n        rightIcon: <HStack paddingBottom={\"25px\"}></HStack>,\n      }}\n      _height=\"100px\"\n    >\n      <Box>\n        <Center>\n          <VStack space=\"50px\" w=\"300px\">\n            <Image\n              mt={\"0px\"}\n              width={\"100%\"}\n              height={\"400px\"}\n              resizeMode=\"cover\"\n              source={require(\"../assets/Flash.png\")}\n              alt={\"Alternate Text \"}\n            />\n          </VStack>\n          <VStack>\n            <HStack>\n              <Button\n                mt={\"20px\"}\n                p=\"3\"\n                variant={\"rounded\"}\n                onPress={() => handleLogin(\"login\")}\n              >\n                {t(\"Login >\")}\n              </Button>\n            </HStack>\n          </VStack>\n        </Center>\n      </Box>\n    </Layout>\n  );\n}\n","import React, { useState } from \"react\";\nimport {\n  HStack,\n  Button,\n  Box,\n  FormControl,\n  Input,\n  VStack,\n  Alert,\n  IconButton,\n  CloseIcon,\n  Center,\n  Avatar,\n  Divider,\n} from \"native-base\";\nimport { useTranslation } from \"react-i18next\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport manifest from \"../manifest\";\nimport {\n  fetchToken,\n  eventBus,\n  useWindowSize,\n  userRegistryService,\n  BodyMedium,\n  Heading,\n  Subtitle,\n  getUserToken,\n  overrideColorTheme,\n  Layout,\n  IconByName,\n} from \"@shiksha/common-lib\";\n\nconst colors = overrideColorTheme();\n\nexport default function Login({ swPath }) {\n  const [credentials, setCredentials] = useState();\n  const [errors, setErrors] = React.useState({});\n  const { t } = useTranslation();\n  const [width, Height] = useWindowSize();\n  const navigate = useNavigate();\n\n  const fieldsName = [\n    { label: \"User Name\", attribute: \"userName\" },\n    { label: \"Password\", attribute: \"password\" },\n  ];\n\n  const validate = () => {\n    let arr = {};\n    if (\n      typeof credentials?.username === \"undefined\" ||\n      credentials?.username === \"\"\n    ) {\n      arr = { ...arr, username: t(\"USERNAME_IS_REQUIRED\") };\n    }\n\n    if (\n      typeof credentials?.password === \"undefined\" ||\n      credentials?.password === \"\"\n    ) {\n      arr = { ...arr, password: t(\"PASSWORD_IS_REQUIRED\") };\n    }\n\n    setErrors(arr);\n    if (arr.username || arr.password) {\n      return false;\n    }\n    return true;\n  };\n\n  const handleLogin = async () => {\n    if (validate()) {\n      const fcmToken = await getUserToken(swPath);\n\n      const result = await fetchToken(\n        manifest.auth_url,\n        credentials?.username,\n        credentials?.password\n      );\n      if (result?.data) {\n        let token = result.data.access_token;\n        sessionStorage.setItem(\"token\", token);\n\n        const resultTeacher = await userRegistryService.getOne();\n        if (resultTeacher?.id) {\n          try {\n            let { id } = resultTeacher;\n            localStorage.setItem(\"id\", id);\n            const updateTokenTeacher = await userRegistryService.update({\n              id,\n              fcmToken,\n            });\n            localStorage.setItem(\n              \"fullName\",\n              resultTeacher.fullName\n                ? resultTeacher.fullName\n                : `${resultTeacher.firstName} ${resultTeacher.lastName}`\n            );\n            localStorage.setItem(\"firstName\", resultTeacher.firstName);\n            localStorage.setItem(\"lastName\", resultTeacher.lastName);\n            localStorage.setItem(\"schoolId\", resultTeacher.schoolId);\n            localStorage.setItem(\"phoneNumber\", resultTeacher.phoneNumber);\n          } catch (e) {\n            localStorage.removeItem(\"token\");\n            console.log({ e });\n          }\n          try {\n            const fcmToken = await getUserToken(swPath);\n            let id = localStorage.getItem(\"id\");\n            await userRegistryService.update({ id, fcmToken });\n            localStorage.setItem(\"fcmToken\", fcmToken);\n          } catch (e) {\n            localStorage.setItem(\"fcmToken\", \"\");\n          }\n          eventBus.publish(\"AUTH\", {\n            eventType: \"LOGIN_SUCCESS\",\n            data: {\n              token: token,\n            },\n          });\n          window.location.href(\"/onboardingimprove\");\n          window.location.reload();\n        } else {\n          localStorage.removeItem(\"token\");\n          setErrors({ alert: t(\"PLEASE_ENTER_VALID_CREDENTIALS\") });\n        }\n      } else {\n        localStorage.removeItem(\"token\");\n        setErrors({ alert: t(\"PLEASE_ENTER_VALID_CREDENTIALS\") });\n      }\n    }\n  };\n\n  return (\n    <Layout\n      _appBar={{\n        languages: manifest.languages,\n        isBackButtonShow: false,\n        isHideMenuButton: true,\n        imageUrl: \"../../src/assets/SubjectBg.png\",\n        LeftIcon: (\n          <HStack width={\"65px\"}>\n            <Avatar\n              size=\"37\"\n              width={\"100%\"}\n              rounded=\"md\"\n              style={{ borderRadius: \"0px\" }}\n              source={require(\"../../src/assets/image2.png\")}\n            />\n            <Divider\n              width={\"1.62px\"}\n              height={\"35.75px\"}\n              bg={\"#41C88E\"}\n              order={\"0\"}\n              ml={\"5px\"}\n            />\n            <Avatar\n              bg=\"\"\n              size=\"37\"\n              rounded=\"md\"\n              borderRadius={\"0px\"}\n              source={require(\"../../src/assets/Ellipse.png\")}\n            />\n          </HStack>\n        ),\n\n        rightIcon: (\n          <HStack paddingBottom={\"25px\"}>\n            <IconByName\n              name=\"CloseCircleFillIcon\"\n              onPress={() => navigate(\"/flash\")}\n            />\n          </HStack>\n        ),\n      }}\n      _height=\"150px\"\n    >\n      <Box>\n        <Center width={width}>\n          <VStack space=\"\" w=\"300px\">\n            <Box style={{ marginLeft: \"25px\" }}>\n              <Heading>{t(\"WELCOME\")}</Heading>\n            </Box>\n            <VStack space={2} pt={\"25px\"} pb={\"25px\"}>\n              {\"alert\" in errors ? (\n                <Alert w=\"100%\" status={\"error\"}>\n                  <VStack space={2} flexShrink={1} w=\"100%\">\n                    <HStack\n                      flexShrink={1}\n                      space={2}\n                      justifyContent=\"space-between\"\n                    >\n                      <HStack space={2} flexShrink={1}>\n                        <Alert.Icon mt=\"1\" />\n                        <Subtitle color={colors?.gray}>{errors.alert}</Subtitle>\n                      </HStack>\n                      <IconButton\n                        variant=\"unstyled\"\n                        icon={<CloseIcon size=\"3\" color={colors?.gray} />}\n                        onPress={(e) => setErrors({})}\n                      />\n                    </HStack>\n                  </VStack>\n                </Alert>\n              ) : (\n                <></>\n              )}\n              <VStack space=\"30px\" p={\"20px\"}>\n                <FormControl isRequired isInvalid={\"username\" in errors}>\n                  <FormControl.Label\n                    _text={{\n                      fontSize: \"14px\",\n                      fontWeight: \"400\",\n                      color: \"#6461D2\",\n                    }}\n                    mb=\"10px\"\n                  >\n                    {t(\"USERNAME\")}\n                  </FormControl.Label>\n                  <Input\n                    bg=\"white\"\n                    variant=\"rounded\"\n                    borderColor={\n                      credentials?.[\"username\"] ? \"orange.500\" : \"#C1C1C1\"\n                    }\n                    p={\"10px\"}\n                    placeholder={t(\"ENTER_USERNAME\")}\n                    onChange={(e) =>\n                      setCredentials({\n                        ...credentials,\n                        username: e.target.value,\n                      })\n                    }\n                  />\n                  {\"username\" in errors ? (\n                    <FormControl.ErrorMessage\n                      _text={{\n                        fontSize: \"xs\",\n                        color: colors?.error,\n                        fontWeight: 500,\n                      }}\n                    >\n                      {errors.username}\n                    </FormControl.ErrorMessage>\n                  ) : (\n                    <></>\n                  )}\n                </FormControl>\n\n                <FormControl isRequired isInvalid={\"password\" in errors}>\n                  <FormControl.Label\n                    _text={{\n                      fontSize: \"14px\",\n                      fontWeight: \"400\",\n                      color: \"#6461D2\",\n                    }}\n                    mb=\"10px\"\n                  >\n                    {t(\"PASSWORD\")}\n                  </FormControl.Label>\n                  <Input\n                    bg=\"white\"\n                    variant=\"rounded\"\n                    type=\"password\"\n                    borderColor={\n                      credentials?.[\"password\"] ? \"orange.500\" : \"#C1C1C1\"\n                    }\n                    p={\"10px\"}\n                    placeholder={t(\"ENTER_PASSWORD\")}\n                    onChange={(e) =>\n                      setCredentials({\n                        ...credentials,\n                        password: e.target.value,\n                      })\n                    }\n                  />\n                  {\"password\" in errors ? (\n                    <FormControl.ErrorMessage\n                      _text={{\n                        fontSize: \"xs\",\n                        color: colors?.error,\n                        fontWeight: 500,\n                      }}\n                    >\n                      {errors.username}\n                    </FormControl.ErrorMessage>\n                  ) : (\n                    <></>\n                  )}\n                </FormControl>\n              </VStack>\n            </VStack>\n            <Button p=\"3\" onPress={handleLogin} variant={\"rounded\"}>\n              {t(\"LOGIN\")}\n            </Button>\n          </VStack>\n        </Center>\n      </Box>\n    </Layout>\n  );\n}\n","import React, { useState } from \"react\";\nimport {\n  HStack,\n  Button,\n  Box,\n  FormControl,\n  Input,\n  VStack,\n  Alert,\n  IconButton,\n  CloseIcon,\n  Center,\n  Avatar,\n  Divider,\n  MaterialIcons,\n} from \"native-base\";\nimport { useTranslation } from \"react-i18next\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport manifest from \"../manifest\";\nimport {\n  fetchToken,\n  eventBus,\n  useWindowSize,\n  userRegistryService,\n  BodyMedium,\n  Heading,\n  Subtitle,\n  getUserToken,\n  overrideColorTheme,\n  Layout,\n  Icon,\n  IconByName,\n  calender,\n} from \"@shiksha/common-lib\";\n\nconst colors = overrideColorTheme();\n\nexport default function MobileNumberScreen({ swPath }) {\n  const [credentials, setCredentials] = useState();\n  const [errors, setErrors] = React.useState({});\n  const { t } = useTranslation();\n  const [width, Height] = useWindowSize();\n  const navigate = useNavigate();\n\n  const fieldsName = [{ label: \"Mobile Number\", attribute: \"mobileNumber\" }];\n\n  const validate = () => {\n    let arr = {};\n    if (\n      typeof credentials?.mobileNumber === \"undefined\" ||\n      credentials?.mobileNumber === \"\"\n    ) {\n      arr = { ...arr, mobileNumber: t(\"MOBILE_NUMBER_IS_REQUIRED\") };\n    }\n\n    setErrors(arr);\n\n    return !arr.mobileNumber;\n  };\n\n  const handleLogin = () => {\n    if (validate()) {\n      navigate(\"/otp\");\n    }\n  };\n  const setCredtialFenorText = (e, item) => {\n    let arr = {};\n    if (isNaN(Number(e.target.value))) {\n      arr = { ...arr, mobileNumber: t(\"Phone Number is invalid\") };\n      setErrors(arr);\n    } else {\n      const data = {\n        ...credentials,\n        [item]: e.target.value,\n      };\n      setCredentials(data);\n      arr = {};\n      setErrors(arr);\n    }\n  };\n\n  return (\n    <Layout\n      _appBar={{\n        languages: manifest.languages,\n        isBackButtonShow: false,\n        isHideMenuButton: true,\n        imageUrl: \"../../src/assets/SubjectBg.png\",\n        LeftIcon: (\n          <HStack width={\"65px\"}>\n            <Avatar\n              size=\"37\"\n              width={\"100%\"}\n              rounded=\"md\"\n              borderRadius={\"0px\"}\n              source={require(\"../../src/assets/image2.png\")}\n            />\n            <Divider\n              width={\"1.62px\"}\n              height={\"35.75px\"}\n              bg={\"#41C88E\"}\n              order={\"0\"}\n              ml={\"5px\"}\n            />\n            <Avatar\n              bg=\"\"\n              size=\"37\"\n              rounded=\"md\"\n              borderRadius={\"0px\"}\n              source={require(\"../../src/assets/Ellipse.png\")}\n            />\n          </HStack>\n        ),\n\n        rightIcon: (\n          <HStack paddingBottom={\"25px\"}>\n            <IconByName name=\"CloseCircleFillIcon\" />\n          </HStack>\n        ),\n      }}\n      _height=\"150px\"\n    >\n      <Box>\n        <Center width={width}>\n          <VStack space=\"\" w=\"300px\">\n            <Box ml={\"25px\"}>\n              <Heading>{t(\"Welcome!\")}</Heading>\n              <BodyMedium textTransform=\"inherit\" fontSize={\"18px\"}>\n                {t(\"Login using your Mobile Number\")}\n              </BodyMedium>\n            </Box>\n            <VStack space={2} pt={\"25px\"} pb={\"25px\"}>\n              {\"alert\" in errors ? (\n                <Alert w=\"100%\" status={\"error\"}>\n                  <VStack space={2} flexShrink={1} w=\"100%\">\n                    <HStack\n                      flexShrink={1}\n                      space={2}\n                      justifyContent=\"space-between\"\n                    >\n                      <HStack space={2} flexShrink={1}>\n                        <Alert.Icon mt=\"1\" />\n                        <Subtitle color={colors?.gray}>{errors.alert}</Subtitle>\n                      </HStack>\n                      <IconButton\n                        variant=\"unstyled\"\n                        icon={<CloseIcon size=\"3\" color={colors?.gray} />}\n                        onPress={(e) => setErrors({})}\n                      />\n                    </HStack>\n                  </VStack>\n                </Alert>\n              ) : (\n                <></>\n              )}\n              <VStack space=\"30px\" p={\"20px\"}>\n                {fieldsName?.map((item, index) => (\n                  <FormControl\n                    isRequired\n                    isInvalid={item?.attribute in errors}\n                    key={index}\n                    name={item?.attribute}\n                  >\n                    <FormControl.Label\n                      _text={{\n                        fontSize: \"14px\",\n                        fontWeight: \"600\",\n                        fontFamily: \"Fredoka\",\n                        color: \"#6461D2\",\n                        lineHeight: \"19px\",\n                        lineSpacing: \"0.025em\",\n                      }}\n                      mb=\"10px\"\n                    >\n                      {t(item?.label)}\n                    </FormControl.Label>\n                    <Input\n                      key={item?.attribute}\n                      name={item?.attribute}\n                      bg=\"white\"\n                      variant=\"rounded\"\n                      maxLength={\"10\"}\n                      borderColor={\n                        credentials?.[item?.attribute]\n                          ? \"orange.500\"\n                          : \"#C1C1C1\"\n                      }\n                      p={\"10px\"}\n                      placeholder={t(\"ENTER\") + \" \" + t(item?.label)}\n                      onChange={(e) => setCredtialFenorText(e, item?.attribute)}\n                    />\n                    {item?.attribute in errors ? (\n                      <FormControl.ErrorMessage\n                        key={index}\n                        _text={{\n                          fontSize: \"xs\",\n                          color: colors?.error,\n                          fontWeight: 500,\n                        }}\n                      >\n                        {errors[item?.attribute]}\n                      </FormControl.ErrorMessage>\n                    ) : (\n                      <></>\n                    )}\n                  </FormControl>\n                ))}\n              </VStack>\n            </VStack>\n            <Button variant={\"rounded\"} p=\"3\" onPress={handleLogin}>\n              {t(\"Get OTP >\")}\n            </Button>\n          </VStack>\n        </Center>\n      </Box>\n    </Layout>\n  );\n}\n","import React, { useState } from \"react\";\nimport {\n  HStack,\n  Button,\n  Box,\n  FormControl,\n  Input,\n  VStack,\n  Alert,\n  IconButton,\n  CloseIcon,\n  Center,\n  Avatar,\n  Divider,\n} from \"native-base\";\nimport { useTranslation } from \"react-i18next\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport manifest from \"../manifest\";\nimport {\n  fetchToken,\n  eventBus,\n  useWindowSize,\n  userRegistryService,\n  BodyMedium,\n  Heading,\n  Subtitle,\n  getUserToken,\n  overrideColorTheme,\n  Layout,\n} from \"@shiksha/common-lib\";\n\nconst colors = overrideColorTheme();\n\nexport default function OTP({ swPath }) {\n  const [credentials, setCredentials] = useState();\n  const [errors, setErrors] = React.useState({});\n  const { t } = useTranslation();\n  const [width, Height] = useWindowSize();\n  const navigate = useNavigate();\n\n  const fieldsName = [\n    { label: \"OTP One\", attribute: \"otp_one\" },\n    { label: \"OTP Two\", attribute: \"otp_two\" },\n    { label: \"OTP Three\", attribute: \"otp_three\" },\n    { label: \"OTP Four\", attribute: \"otp_four\" },\n  ];\n\n  const validate = () => {\n    let arr = {};\n    if (\n      typeof credentials?.mobileNumber === \"undefined\" ||\n      credentials?.mobileNumber === \"\"\n    ) {\n      arr = { ...arr, mobileNumber: t(\"MOBILE_NUMBER_IS_REQUIRED\") };\n    }\n\n    setErrors(arr);\n\n    if (arr.mobileNumber) {\n      return false;\n    }\n    return true;\n  };\n\n  const handleLogin = () => {\n    navigate(\"/onboarding\");\n  };\n  const setCredentialForText = (e, item) => {\n    const data = {\n      ...credentials,\n      [item]: e.target.value,\n    };\n    setCredentials(data);\n  };\n\n  return (\n    <Layout\n      _appBar={{\n        languages: manifest.languages,\n        isBackButtonShow: false,\n        isHideMenuButton: true,\n        imageUrl: \"../../src/assets/SubjectBg.png\",\n\n        LeftIcon: (\n          <HStack width={\"65px\"}>\n            <Avatar\n              size=\"37\"\n              width={\"100%\"}\n              rounded=\"md\"\n              style={{ borderRadius: \"0px\" }}\n              source={require(\"../../src/assets/image2.png\")}\n            />\n            <Divider\n              width={\"1.62px\"}\n              height={\"35.75px\"}\n              bg={\"#41C88E\"}\n              order={\"0\"}\n              ml={\"5px\"}\n            />\n            <Avatar\n              bg=\"\"\n              size=\"37\"\n              rounded=\"md\"\n              borderRadius={\"0px\"}\n              source={require(\"../../src/assets/Ellipse.png\")}\n            />\n          </HStack>\n        ),\n\n        rightIcon: (\n          <HStack paddingBottom={\"25px\"}>\n            <IconByName name=\"CloseCircleFillIcon\" />\n          </HStack>\n        ),\n      }}\n    >\n      <Box>\n        <Center width={width}>\n          <VStack space=\"\" w=\"300px\">\n            <Box>\n              <Heading>{t(\"Welcome!\")}</Heading>\n              <BodyMedium textTransform=\"inherit\">\n                {t(\"Login using your Mobile Number\")}\n              </BodyMedium>\n            </Box>\n            <VStack space={2} pt={\"25px\"} pb={\"25px\"}>\n              {\"alert\" in errors ? (\n                <Alert w=\"100%\" status={\"error\"}>\n                  <VStack space={2} flexShrink={1} w=\"100%\">\n                    <HStack\n                      flexShrink={1}\n                      space={2}\n                      justifyContent=\"space-between\"\n                    >\n                      <HStack space={2} flexShrink={1}>\n                        <Alert.Icon mt=\"1\" />\n                        <Subtitle color={colors?.gray}>{errors.alert}</Subtitle>\n                      </HStack>\n                      <IconButton\n                        variant=\"unstyled\"\n                        icon={<CloseIcon size=\"3\" color={colors?.gray} />}\n                        onPress={(e) => setErrors({})}\n                      />\n                    </HStack>\n                  </VStack>\n                </Alert>\n              ) : (\n                <></>\n              )}\n              <HStack space=\"30px\" p={\"20px\"}>\n                {fieldsName?.map((item, index) => (\n                  <FormControl\n                    isRequired\n                    isInvalid={item?.attribute in errors}\n                    key={index}\n                    name={item?.attribute}\n                    width={\"15%\"}\n                  >\n                    <Input\n                      key={item?.attribute}\n                      name={item?.attribute}\n                      bg=\"white\"\n                      variant=\"rounded\"\n                      borderColor={\n                        credentials?.[item?.attribute]\n                          ? \"orange.500\"\n                          : \"#C1C1C1\"\n                      }\n                      pr={\"10px\"}\n                      pl={\"15px\"}\n                      pt={\"10px\"}\n                      pb={\"10px\"}\n                      width={\"40px\"}\n                      placeholder={\"0\"}\n                      onChange={(e) => setCredentialForText(e, item?.attribute)}\n                    />\n                    {item?.attribute in errors ? (\n                      <FormControl.ErrorMessage\n                        key={index}\n                        _text={{\n                          fontSize: \"xs\",\n                          color: colors?.error,\n                          fontWeight: 500,\n                        }}\n                      >\n                        {errors[item?.attribute]}\n                      </FormControl.ErrorMessage>\n                    ) : (\n                      <></>\n                    )}\n                  </FormControl>\n                ))}\n              </HStack>\n            </VStack>\n            <Button p=\"3\" variant={\"rounded\"} onPress={handleLogin}>\n              {t(\"Submit OTP\")}\n            </Button>\n          </VStack>\n        </Center>\n      </Box>\n    </Layout>\n  );\n}\n","import React, { useState } from \"react\";\nimport {\n  HStack,\n  Box,\n  VStack,\n  Center,\n  Avatar,\n  Divider,\n  CircleIcon,\n} from \"native-base\";\nimport { useTranslation } from \"react-i18next\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport manifest from \"../manifest\";\nimport {\n  useWindowSize,\n  Heading,\n  overrideColorTheme,\n  Layout,\n} from \"@shiksha/common-lib\";\n\nexport default function Onboarding({ swPath }) {\n  const { t } = useTranslation();\n  const [width, Height] = useWindowSize();\n  const navigate = useNavigate();\n  const circleArray = [1, 2, 3, 4];\n\n  const handleLogin = () => {\n    navigate(\"/otp\");\n  };\n\n  return (\n    <Layout\n      _appBar={{\n        languages: manifest.languages,\n        isBackButtonShow: false,\n        isHideMenuButton: true,\n        imageUrl: \"../../src/assets/SubjectBg.png\",\n        CenterIcon: true,\n        LeftIcon: (\n          <HStack width={\"65px\"} mt={\"35px\"}>\n            <Avatar\n              size=\"37\"\n              width={\"100%\"}\n              rounded=\"md\"\n              borderRadius={\"0px\"}\n              source={require(\"../../src/assets/image2.png\")}\n            />\n            <Divider\n              width={\"1.62px\"}\n              height={\"35.75px\"}\n              bg={\"#41C88E\"}\n              order={\"0\"}\n              ml={\"5px\"}\n            />\n            <Avatar\n              bg=\"\"\n              size=\"37\"\n              rounded=\"md\"\n              borderRadius={\"0px\"}\n              source={require(\"../../src/assets/Ellipse.png\")}\n            />\n          </HStack>\n        ),\n      }}\n      _height=\"130px\"\n    >\n      <Box>\n        <Center width={width}>\n          <VStack space=\"\" w=\"300px\">\n            <Box>\n              <Heading>{t(\"Welcome Vishal!\")}</Heading>\n            </Box>\n            <VStack space={2} pt={\"25px\"} pb={\"25px\"}>\n              <Center>\n                <div\n                  style={{\n                    padding: \"35px\",\n                    border: \"2px dashed #6461D2\",\n                    borderRadius: \"100px\",\n                  }}\n                >\n                  <Avatar\n                    borderRadius={\"0px\"}\n                    bg=\"\"\n                    source={{\n                      uri: require(\"../../src/assets/Subject1.png\"),\n                    }}\n                    size=\"2xl\"\n                  />\n                </div>\n              </Center>\n            </VStack>\n            <VStack>\n              <Center>\n                <HStack space={\"2\"}>\n                  <CircleIcon\n                    size=\"3\"\n                    color=\"#6461D2\"\n                    style={{ marginTop: \"5px\" }}\n                  />\n\n                  <Text color={\"#6461D2\"}>Learn</Text>\n                </HStack>\n\n                <Text fontFamily={\"Montserrat\"} mt={\"30px\"}>\n                  Learn Anytime,Anywhere\n                </Text>\n              </Center>\n            </VStack>\n          </VStack>\n          <HStack mt=\"100px\">\n            {circleArray.map((item) => {\n              return item == 2 ? (\n                <Box\n                  bg={\"#6461D2\"}\n                  width=\"90px\"\n                  borderRadius={\"40px\"}\n                  height={\"20px\"}\n                />\n              ) : (\n                <CircleIcon color={\"#FFB902\"} size={\"25\"} key={item} />\n              );\n            })}\n          </HStack>\n        </Center>\n      </Box>\n    </Layout>\n  );\n}\n","import React, { useState } from \"react\";\nimport {\n  HStack,\n  Button,\n  Box,\n  VStack,\n  Center,\n  Avatar,\n  Divider,\n  CircleIcon,\n  Text,\n} from \"native-base\";\nimport { useTranslation } from \"react-i18next\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport manifest from \"../manifest\";\nimport {\n  useWindowSize,\n  Heading,\n  Layout,\n  BodyMedium,\n} from \"@shiksha/common-lib\";\n\nexport default function OnboardingFill() {\n  const { t } = useTranslation();\n  const [width, Height] = useWindowSize();\n  const navigate = useNavigate();\n  const circleArray = [1, 2, 3, 4];\n\n  const handleLogin = () => {\n    navigate(\"/selfassesment\");\n    window.location.reload();\n  };\n\n  return (\n    <Layout\n      _appBar={{\n        languages: manifest.languages,\n        isBackButtonShow: false,\n        isHideMenuButton: true,\n        imageUrl: \"../../src/assets/SubjectBg.png\",\n        CenterIcon: true,\n        LeftIcon: (\n          <HStack width={\"65px\"} mt={\"35px\"}>\n            <Avatar\n              size=\"37\"\n              width={\"100%\"}\n              rounded=\"md\"\n              style={{ borderRadius: \"0px\" }}\n              source={require(\"../../src/assets/image2.png\")}\n            />\n            <Divider\n              width={\"1.62px\"}\n              height={\"35.75px\"}\n              bg={\"#41C88E\"}\n              order={\"0\"}\n              ml={\"5px\"}\n            />\n            <Avatar\n              bg=\"\"\n              size=\"37\"\n              rounded=\"md\"\n              style={{ borderRadius: \"0px\" }}\n              source={require(\"../../src/assets/Ellipse.png\")}\n            />\n          </HStack>\n        ),\n      }}\n      _height=\"130px\"\n    >\n      <Box>\n        <Center width={width}>\n          <VStack space=\"\" w=\"300px\">\n            <Box alignItems={\"center\"}>\n              <Heading>\n                {t(\"Welcome\") + \" \" + localStorage.getItem(\"name\") + \"!\"}\n              </Heading>\n              <BodyMedium textTransform=\"inherit\">\n                Class :{\" \"}\n                {localStorage.getItem(\"class\") +\n                  \" \" +\n                  localStorage.getItem(\"section\")}\n              </BodyMedium>\n            </Box>\n            <VStack space={2} pt={\"25px\"} pb={\"25px\"}>\n              <Center>\n                <div\n                  style={{\n                    padding: \"35px\",\n                    border: \"2px dashed #6461D2\",\n                    borderRadius: \"100px\",\n                  }}\n                >\n                  <Avatar\n                    borderRadius={\"0px\"}\n                    bg=\"\"\n                    source={{\n                      uri: require(\"../../src/assets/Subject2.png\"),\n                    }}\n                    size=\"2xl\"\n                  />\n                </div>\n              </Center>\n            </VStack>\n            <VStack>\n              <Center>\n                <HStack space={\"2\"}>\n                  <CircleIcon\n                    size=\"3\"\n                    color=\"#6461D2\"\n                    style={{ marginTop: \"5px\" }}\n                  />\n\n                  <Text color={\"#6461D2\"}>{t(\"IMPROVE\")}</Text>\n                </HStack>\n\n                <Text fontFamily={\"Montserrat\"} mt={\"30px\"}>\n                  {t(\"IMPROVE_SUBTITLE\")}\n                </Text>\n              </Center>\n            </VStack>\n            <Button p=\"3\" onPress={handleLogin} variant={\"rounded\"} mt={\"20px\"}>\n              {t(\"LETS_GO\")}\n            </Button>\n          </VStack>\n        </Center>\n      </Box>\n    </Layout>\n  );\n}\n","import React, { useState } from \"react\";\nimport {\n  HStack,\n  Button,\n  Box,\n  FormControl,\n  Input,\n  VStack,\n  Alert,\n  IconButton,\n  CloseIcon,\n  Center,\n  Avatar,\n  Divider,\n  Select,\n} from \"native-base\";\nimport { useTranslation } from \"react-i18next\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport manifest from \"../manifest\";\nimport {\n  useWindowSize,\n  BodyMedium,\n  Heading,\n  Subtitle,\n  overrideColorTheme,\n  Layout,\n  Icon,\n  IconByName,\n} from \"@shiksha/common-lib\";\n\nconst colors = overrideColorTheme();\n\nexport default function Login({ swPath }) {\n  const [credentials, setCredentials] = useState();\n  const [errors, setErrors] = React.useState({});\n  const { t } = useTranslation();\n  const navigate = useNavigate();\n\n  const fieldsName = [\n    { label: \"Mobile Number\", attribute: \"mobileNumber\" },\n    { label: \"Name\", attribute: \"name\" },\n    { label: \"Date of Birth\", attribute: \"dateOfBirth\" },\n    { label: \"Email ID\", attribute: \"emailId\" },\n    { label: \"State\", attribute: \"state\" },\n    { label: \"District\", attribute: \"district\" },\n    { label: \"Block\", attribute: \"block\" },\n    { label: \"School\", attribute: \"school\" },\n    { label: \"UDISE\", attribute: \"udise\" },\n    { label: \"Class\", attribute: \"class\" },\n  ];\n\n  const validate = () => {\n    let arr = {};\n    if (\n      typeof credentials?.mobileNumber === \"undefined\" ||\n      credentials?.mobileNumber === \"\"\n    ) {\n      arr = { ...arr, mobileNumber: t(\"MOBILE_NUMBER_IS_REQUIRED\") };\n    }\n\n    if (typeof credentials?.name === \"undefined\" || credentials?.name === \"\") {\n      arr = { ...arr, name: t(\"NAME_IS_REQUIRED\") };\n    }\n\n    if (\n      typeof credentials?.dateOfBirth === \"undefined\" ||\n      credentials?.dateOfBirth === \"\"\n    ) {\n      arr = { ...arr, dateOfBirth: t(\"DATE_OF_BIRTH_IS_REQUIRED\") };\n    }\n    if (\n      typeof credentials?.emailId === \"undefined\" ||\n      credentials?.emailId === \"\"\n    ) {\n      arr = { ...arr, emailId: t(\"EMAIL_ID_IS_REQUIRED\") };\n    }\n    if (\n      typeof credentials?.state === \"undefined\" ||\n      credentials?.state === \"\"\n    ) {\n      arr = { ...arr, state: t(\"STATE_IS_REQUIRED\") };\n    }\n    if (\n      typeof credentials?.district === \"undefined\" ||\n      credentials?.district === \"\"\n    ) {\n      arr = { ...arr, district: t(\"DISTRICT_IS_REQUIRED\") };\n    }\n    if (\n      typeof credentials?.block === \"undefined\" ||\n      credentials?.block === \"\"\n    ) {\n      arr = { ...arr, block: t(\"BLOCK_IS_REQUIRED\") };\n    }\n    if (\n      typeof credentials?.school === \"undefined\" ||\n      credentials?.school === \"\"\n    ) {\n      arr = { ...arr, school: t(\"SCHOOL_IS_REQUIRED\") };\n    }\n    if (\n      typeof credentials?.udise === \"undefined\" ||\n      credentials?.udise === \"\"\n    ) {\n      arr = { ...arr, udise: t(\"UDISE_IS_REQUIRED\") };\n    }\n    if (\n      typeof credentials?.class === \"undefined\" ||\n      credentials?.class === \"\"\n    ) {\n      arr = { ...arr, class: t(\"CLASS_IS_REQUIRED\") };\n    }\n    setErrors(arr);\n\n    return !(\n      arr.mobileNumber &&\n      arr.name &&\n      arr.dateOfBirth &&\n      arr.emailId &&\n      arr.state &&\n      arr.district &&\n      arr.block &&\n      arr.school &&\n      arr.udise &&\n      arr.class\n    );\n  };\n\n  const handleLogin = () => {\n    if (validate()) {\n      navigate(\"/mobilenumberscreen\");\n    }\n  };\n  const setCredentialForText = (e, item) => {\n    let arr = {};\n    let data;\n    if (item === \"mobileNumber\") {\n      if (isNaN(Number(e.target.value))) {\n        arr = { ...arr, mobileNumber: t(\"Phone Number is invalid\") };\n        setErrors(arr);\n      } else {\n        arr = {};\n        setErrors(arr);\n        data = {\n          ...credentials,\n          [item]: e.target.value,\n        };\n        setCredentials(data);\n      }\n    } else {\n      arr = {};\n\n      if (item === \"state\") {\n        data = {\n          ...credentials,\n          [item]: e,\n        };\n      } else {\n        data = {\n          ...credentials,\n          [item]: e.target.value,\n        };\n      }\n      console.log(data);\n      setCredentials(data);\n      setErrors(arr);\n    }\n  };\n\n  return (\n    <Layout\n      _appBar={{\n        languages: manifest.languages,\n        isBackButtonShow: false,\n        isHideMenuButton: true,\n        LeftIcon: (\n          <HStack width={\"65px\"}>\n            <Avatar\n              size=\"37\"\n              width={\"100%\"}\n              rounded=\"md\"\n              borderRadius={\"0px\"}\n              source={require(\"../../src/assets/image2.png\")}\n            />\n            <Divider\n              width={\"1.62px\"}\n              height={\"35.75px\"}\n              bg={\"#41C88E\"}\n              order={\"0\"}\n              ml={\"5px\"}\n            />\n            <Avatar\n              bg=\"\"\n              size=\"37\"\n              rounded=\"md\"\n              borderRadius={\"0px\"}\n              source={require(\"../../src/assets/Ellipse.png\")}\n            />\n          </HStack>\n        ),\n\n        rightIcon: (\n          <HStack paddingBottom={\"25px\"}>\n            <IconByName name=\"CloseCircleFillIcon\" />\n          </HStack>\n        ),\n      }}\n    >\n      <Box>\n        <Center width={\"100%\"}>\n          <VStack space=\"\">\n            <Box ml={\"25px\"}>\n              <Heading>{t(\"Welcome!\")}</Heading>\n              <BodyMedium textTransform=\"inherit\">{t(\"Sign Up\")}</BodyMedium>\n            </Box>\n            <VStack space={2} pt={\"25px\"} pb={\"10px\"}>\n              {\"alert\" in errors ? (\n                <Alert w=\"100%\" status={\"error\"}>\n                  <VStack space={2} flexShrink={1} w=\"100%\">\n                    <HStack\n                      flexShrink={1}\n                      space={2}\n                      justifyContent=\"space-between\"\n                    >\n                      <HStack space={2} flexShrink={1}>\n                        <Alert.Icon mt=\"1\" />\n                        <Subtitle color={colors?.gray}>{errors.alert}</Subtitle>\n                      </HStack>\n                      <IconButton\n                        variant=\"unstyled\"\n                        icon={<CloseIcon size=\"3\" color={colors?.gray} />}\n                        onPress={() => setErrors({})}\n                      />\n                    </HStack>\n                  </VStack>\n                </Alert>\n              ) : (\n                <></>\n              )}\n              <VStack space=\"30px\" p={\"20px\"} overflowY={\"auto\"}>\n                {fieldsName?.map((item, index) => (\n                  <FormControl\n                    isRequired\n                    isInvalid={item?.attribute in errors}\n                    key={index}\n                    name={item?.attribute}\n                  >\n                    <FormControl.Label\n                      _text={{\n                        fontSize: \"14px\",\n                        fontWeight: \"400\",\n                        color: \"#6461D2\",\n                      }}\n                      mb=\"10px\"\n                    >\n                      {t(item?.label)}\n                    </FormControl.Label>\n                    {item?.attribute === \"state\" ? (\n                      <Select\n                        accessibilityLabel={item.placeholder}\n                        placeholder={\"Select\"}\n                        variant=\"rounded\"\n                        key={item?.attribute}\n                        name={item?.attribute}\n                        borderColor={\n                          credentials?.[item?.attribute]\n                            ? \"orange.500\"\n                            : \"#C1C1C1\"\n                        }\n                        onValueChange={(e) =>\n                          setCredentialForText(e, item?.attribute)\n                        }\n                      >\n                        <Select.Item\n                          key={item?.attribute}\n                          label={\"Maharashtra\"}\n                          value={\"Maharashtra\"}\n                        />\n                      </Select>\n                    ) : (\n                      <Input\n                        key={item?.attribute}\n                        name={item?.attribute}\n                        bg=\"white\"\n                        variant=\"rounded\"\n                        borderColor={\n                          credentials?.[item?.attribute]\n                            ? \"orange.500\"\n                            : \"#C1C1C1\"\n                        }\n                        p={\"10px\"}\n                        maxLength={\n                          item?.attribute === \"mobileNumber\" ? 10 : 125\n                        }\n                        placeholder={t(\"ENTER\") + \" \" + t(item?.label)}\n                        onChange={(e) =>\n                          setCredentialForText(e, item?.attribute)\n                        }\n                        InputRightElement={\n                          item?.attribute == \"dateOfBirth\" ? (\n                            <IconByName\n                              name=\"CalendarEventLineIcon\"\n                              color={\"#6461D2\"}\n                              _icon={{ size: \"15\" }}\n                              alignItems=\"center\"\n                              padding=\"10px\"\n                              isDisabled\n                            />\n                          ) : null\n                        }\n                      />\n                    )}\n\n                    {item?.attribute in errors ? (\n                      <FormControl.ErrorMessage\n                        key={index}\n                        _text={{\n                          fontSize: \"xs\",\n                          color: colors?.error,\n                          fontWeight: 500,\n                        }}\n                      >\n                        {errors[item?.attribute]}\n                      </FormControl.ErrorMessage>\n                    ) : (\n                      <></>\n                    )}\n                  </FormControl>\n                ))}\n              </VStack>\n            </VStack>\n            <Button variant={\"rounded\"} p=\"3\" onPress={handleLogin}>\n              {t(\"Get OTP >\")}\n            </Button>\n          </VStack>\n        </Center>\n      </Box>\n    </Layout>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport {\n  HStack,\n  Button,\n  Box,\n  FormControl,\n  Input,\n  VStack,\n  Alert,\n  IconButton,\n  CloseIcon,\n  Center,\n  Avatar,\n  Image,\n} from \"native-base\";\nimport { useTranslation } from \"react-i18next\";\n\nimport manifest from \"../manifest\";\nimport {\n  fetchToken,\n  eventBus,\n  useWindowSize,\n  userRegistryService,\n  Heading,\n  Subtitle,\n  getUserToken,\n  overrideColorTheme,\n  Layout,\n  IconByName,\n  getAuthUser,\n  H3,\n  telemetryFactory,\n} from \"@shiksha/common-lib\";\n\nconst colors = overrideColorTheme();\n\nexport default function StudentLogin({ swPath }) {\n  const [credentials, setCredentials] = useState();\n  const [errors, setErrors] = React.useState({});\n  const [show, setShow] = React.useState(false);\n  const { t } = useTranslation();\n  const [width, Height] = useWindowSize();\n\n  const fieldsName = [\n    { label: \"User Name\", attribute: \"userName\" },\n    { label: \"Password\", attribute: \"password\" },\n  ];\n\n  const validate = () => {\n    let arr = {};\n    if (\n      typeof credentials?.username === \"undefined\" ||\n      credentials?.username === \"\"\n    ) {\n      arr = { ...arr, username: t(\"USERNAME_IS_REQUIRED\") };\n    }\n\n    if (\n      typeof credentials?.password === \"undefined\" ||\n      credentials?.password === \"\"\n    ) {\n      arr = { ...arr, password: t(\"PASSWORD_IS_REQUIRED\") };\n    }\n\n    setErrors(arr);\n    if (arr.username || arr.password) {\n      return false;\n    }\n    return true;\n  };\n\n  const userName = localStorage.getItem(\"name\");\n  const grade = localStorage.getItem(\"grade\");\n  const medium = localStorage.getItem(\"medium\");\n  const id = localStorage.getItem(\"id\");\n  const board = localStorage.getItem(\"board\");\n\n  useEffect(() => {\n    const telemetryImpression = {\n      context: {\n        env: \"log-out\",\n        cdata: [],\n      },\n      edata: {\n        type: \"edit\", //Required. Impression type (list, detail, view, edit, workflow, search)\n\n        subtype: \"Scroll\", //Optional. Additional subtype. \"Paginate\", \"Scroll\"\n\n        pageid: \"log-out\", //Required.  Unique page id\n\n        uid: id,\n\n        studentid: \"student-id\",\n\n        userName: userName,\n\n        grade: grade,\n\n        medium: medium,\n\n        board: board,\n      },\n    };\n\n    telemetryFactory.impression(telemetryImpression);\n\n    const telemetryInteract = {\n      context: {\n        env: \"sign-out\",\n        cdata: [],\n      },\n      edata: {\n        id: \"log-out-button\",\n        type: \"CLICK\",\n        subtype: \"\",\n        pageid: \"sign-out\",\n        uid: id,\n\n        studentid: \"student-id\",\n\n        userName: userName,\n\n        grade: grade,\n\n        medium: medium,\n\n        board: board,\n      },\n    };\n    telemetryFactory.interact(telemetryInteract);\n  }, []);\n\n  const handleLogin = async () => {\n    const telemetryImpression = {\n      context: {\n        env: \"log-in\",\n        cdata: [],\n      },\n      edata: {\n        type: \"edit\", //Required. Impression type (list, detail, view, edit, workflow, search)\n\n        subtype: \"Scroll\", //Optional. Additional subtype. \"Paginate\", \"Scroll\"\n\n        pageid: \"log-in\", //Required.  Unique page id\n\n        uid: id,\n\n        studentid: \"student-id\",\n\n        userName: userName,\n\n        grade: grade,\n\n        medium: medium,\n\n        board: board,\n      },\n    };\n    telemetryFactory.impression(telemetryImpression);\n\n    const telemetryInteract = {\n      context: {\n        env: \"sign-in\",\n        cdata: [],\n      },\n      edata: {\n        id: \"login-button\",\n        type: \"CLICK\",\n        subtype: \"\",\n        pageid: \"sign-in\",\n        uid: id,\n\n        studentid: \"student-id\",\n\n        userName: userName,\n\n        grade: grade,\n\n        medium: medium,\n\n        board: board,\n      },\n    };\n    telemetryFactory.interact(telemetryInteract);\n    if (validate()) {\n      const result = await fetchToken(\n        manifest.auth_url,\n        credentials?.username,\n        credentials?.password\n      );\n\n      if (result?.data) {\n        console.log(\"Token Data\");\n\n        let token = result.data.access_token;\n        let refreshToken = result.data.refresh_token;\n        console.log(refreshToken);\n        sessionStorage.setItem(\"refreshToken\", refreshToken);\n        sessionStorage.setItem(\"token\", token);\n\n        let resultTeacher = {};\n        // try {\n\n        // } catch (e) {\n        //   localStorage.removeItem(\"token\");\n        //   console.log({ e });\n        // }\n\n        resultTeacher = await getAuthUser();\n\n        if (resultTeacher?.id) {\n          // try {\n          //   const fcmToken = await getUserToken(swPath);\n          //   let id = localStorage.getItem(\"id\");\n          //   await userRegistryService.update({ id, fcmToken });\n          //   localStorage.setItem(\"fcmToken\", fcmToken);\n          // } catch (e) {\n          //   localStorage.setItem(\"fcmToken\", \"\");\n          //   console.log({ e });\n          // }\n          // eventBus.publish(\"AUTH\", {\n          //   eventType: \"LOGIN_SUCCESS\",\n          //   data: {\n          //     token: token,\n          //   },\n          // });\n          window.location.reload();\n        } else {\n          localStorage.removeItem(\"token\");\n          setErrors({ alert: t(\"PLEASE_ENTER_VALID_CREDENTIALS\") });\n        }\n      } else {\n        localStorage.removeItem(\"token\");\n        setErrors({ alert: t(\"PLEASE_ENTER_VALID_CREDENTIALS\") });\n      }\n    }\n  };\n\n  const navigatePage = () => {\n    window.location.href = \"/\";\n  };\n\n  return (\n    <Layout\n      _appBar={{\n        languages: manifest.languages,\n        isBackButtonShow: false,\n        isHideMenuButton: true,\n        imageUrl: \"../../src/assets/SubjectBg.png\",\n        LeftIcon: false,\n\n        rightIcon: false,\n      }}\n      // _height=\"150px\"\n    >\n      <Box overflow={\"hidden\"}>\n        <Center width={width}>\n          <HStack overflow={\"hidden\"}>\n            <Center>\n              <img\n                width={\"200px\"}\n                src={require(\"../../src/assets/TSHeader.png\")}\n              />\n            </Center>\n          </HStack>\n          <VStack overflow={\"hidden\"} space=\"\" w=\"300px\">\n            <Center>\n              <Box textAlign=\"center\">\n                <H3 style={{ fontSize: \"16px\" }}>\n                  Accelerated Learning via Technology (ALT)\n                </H3>\n                {/* <H3 style={{ fontSize: \"16px\", color : \"red\"  }}>\n               Reminder :\n                Dear Students,\nThank you for participating in the ALT Version 1 pilot.\nWe officially closed the pilot on 19th November, 2023. \n\n                </H3> */}\n              </Box>\n            </Center>\n            <Center>\n              <Box>\n                <Heading>{t(\"WELCOME\")}</Heading>\n              </Box>\n            </Center>\n            <VStack space={2} pb={\"25px\"}>\n              {\"alert\" in errors ? (\n                <Alert w=\"100%\" status={\"error\"}>\n                  <VStack space={2} flexShrink={1} w=\"100%\">\n                    <HStack\n                      flexShrink={1}\n                      space={2}\n                      justifyContent=\"space-between\"\n                    >\n                      <HStack space={2} flexShrink={1}>\n                        <Alert.Icon mt=\"1\" />\n                        <Subtitle color={colors?.gray}>{errors.alert}</Subtitle>\n                      </HStack>\n                      <IconButton\n                        variant=\"unstyled\"\n                        icon={<CloseIcon size=\"3\" color={colors?.gray} />}\n                        onPress={(e) => setErrors({})}\n                      />\n                    </HStack>\n                  </VStack>\n                </Alert>\n              ) : (\n                <></>\n              )}\n              <VStack space=\"30px\" p>\n                <FormControl isRequired isInvalid={\"username\" in errors}>\n                  <FormControl.Label\n                    _text={{\n                      fontSize: \"14px\",\n                      fontWeight: \"400\",\n                      color: \"#6461D2\",\n                    }}\n                  >\n                    {t(\"USERNAME\")}\n                  </FormControl.Label>\n                  <Input\n                    bg=\"white\"\n                    variant=\"rounded\"\n                    borderColor={\n                      credentials?.[\"username\"] ? \"yellow.500\" : \"#C1C1C1\"\n                    }\n                    // p={\"10px\"}\n                    placeholder={t(\"ENTER_USERNAME\")}\n                    onChange={(e) =>\n                      setCredentials({\n                        ...credentials,\n                        username: e.target.value,\n                      })\n                    }\n                  />\n                  {\"username\" in errors ? (\n                    <FormControl.ErrorMessage\n                      _text={{\n                        fontSize: \"xs\",\n                        color: colors?.error,\n                        fontWeight: 500,\n                      }}\n                    >\n                      {errors.username}\n                    </FormControl.ErrorMessage>\n                  ) : (\n                    <></>\n                  )}\n                </FormControl>\n                <FormControl isRequired isInvalid={\"password\" in errors}>\n                  <FormControl.Label\n                    _text={{\n                      fontSize: \"14px\",\n                      fontWeight: \"400\",\n                      color: \"#6461D2\",\n                    }}\n                  >\n                    {t(\"PASSWORD\")}\n                  </FormControl.Label>\n                  <Input\n                    bg=\"white\"\n                    variant=\"rounded\"\n                    type={show ? \"text\" : \"password\"}\n                    borderColor={\n                      credentials?.[\"password\"] ? \"yellow.500\" : \"#C1C1C1\"\n                    }\n                    p={\"10px\"}\n                    placeholder={t(\"ENTER_PASSWORD\")}\n                    onChange={(e) =>\n                      setCredentials({\n                        ...credentials,\n                        password: e.target.value,\n                      })\n                    }\n                    InputRightElement={\n                      <IconByName\n                        name={show ? \"EyeLineIcon\" : \"EyeOffLineIcon\"}\n                        _icon={{ size: 15 }}\n                        rounded=\"full\"\n                        onPress={() => setShow(!show)}\n                      />\n                    }\n                  />\n\n                  {\"password\" in errors ? (\n                    <FormControl.ErrorMessage\n                      _text={{\n                        fontSize: \"xs\",\n                        color: colors?.error,\n                        fontWeight: 500,\n                      }}\n                    >\n                      {errors.username}\n                    </FormControl.ErrorMessage>\n                  ) : (\n                    <></>\n                  )}\n                </FormControl>\n\n                <Button onPress={handleLogin} variant={\"rounded\"}>\n                  {t(\"LOGIN\")}\n                </Button>\n                <VStack>\n                  <Box textAlign=\"center\">\n                    <H3 style={{ fontSize: \"16px\" }}>\n                      Tips for better experience\n                    </H3>\n                    <H3 textAlign={\"justify\"}>\n                      1. Please use chrome browser for better experience.\n                    </H3>\n                    <H3 textAlign={\"justify\"}>\n                      2. Incase any issue persists during login then try with\n                      incognito mode of your browser to access the platform.\n                    </H3>\n                  </Box>\n                </VStack>\n              </VStack>\n            </VStack>\n          </VStack>\n        </Center>\n      </Box>\n    </Layout>\n  );\n}\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n"],"names":["theme","extendTheme","DEFAULT_THEME","initializeI18n","concat","process","_jsx","NativeBaseProvider","children","Router","basename","_jsxs","Routes","Route","path","element","StudentLogin","Signup","MobileNumberScreen","OTP","Onboarding","ComingSoon","OnboardingFill","_ref","footerLinks","width","Height","useWindowSize","params","useParams","location","useLocation","t","useTranslation","pathname","split","React","capture","Layout","_header","title","_appBar","languages","manifest","isLanguageIcon","isShowNotificationButton","titleComponent","NameTag","LeftIcon","HStack","src","require","_footer","Box","Center","VStack","space","Heading","pt","pb","style","padding","border","borderRadius","IconByName","name","isDisabled","_icon","size","rounded","overrideColorTheme","Flash","navigate","useNavigate","_width","isBackButtonShow","isHideMenuButton","imageUrl","Avatar","source","Divider","height","bg","order","ml","rightIcon","paddingBottom","_height","w","Image","mt","resizeMode","alt","Button","p","variant","onPress","async","val","handleLogin","colors","Login","swPath","credentials","setCredentials","useState","errors","setErrors","marginLeft","Alert","status","flexShrink","justifyContent","Subtitle","color","gray","alert","IconButton","icon","CloseIcon","e","_Fragment","FormControl","isRequired","isInvalid","_text","fontSize","fontWeight","mb","Input","borderColor","placeholder","onChange","username","target","value","error","type","password","validate","arr","fcmToken","getUserToken","result","fetchToken","data","token","access_token","sessionStorage","setItem","resultTeacher","userRegistryService","id","localStorage","fullName","firstName","lastName","schoolId","phoneNumber","removeItem","console","log","getItem","eventBus","eventType","window","href","reload","fieldsName","label","attribute","BodyMedium","textTransform","map","item","index","fontFamily","lineHeight","lineSpacing","maxLength","setCredtialFenorText","isNaN","Number","mobileNumber","pr","pl","setCredentialForText","CenterIcon","uri","CircleIcon","marginTop","Text","alignItems","overflowY","Select","accessibilityLabel","onValueChange","InputRightElement","dateOfBirth","emailId","state","district","block","school","udise","class","show","setShow","userName","grade","medium","board","useEffect","telemetryImpression","context","env","cdata","edata","subtype","pageid","uid","studentid","telemetryFactory","telemetryInteract","overflow","textAlign","H3","_resultTeacher","refreshToken","refresh_token","getAuthUser","module","exports"],"sourceRoot":""}